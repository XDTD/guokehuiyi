{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:3000/api",
  "resourcePath": "/sis_imports",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/v1/accounts/{account_id}/sis_imports",
      "description": "Returns the list of SIS imports for an account\n\nExample:\n  curl https://<canvas>/api/v1/accounts/<account_id>/sis_imports \\\n    -H 'Authorization: Bearer <token>'",
      "operations": [
        {
          "method": "GET",
          "summary": "Get SIS import list",
          "notes": "Returns the list of SIS imports for an account\n\nExample:\n  curl https://<canvas>/api/v1/accounts/<account_id>/sis_imports \\\n    -H 'Authorization: Bearer <token>'",
          "nickname": "get_sis_import_list",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "query",
              "name": "created_since",
              "description": "If set, only shows imports created after the specified date (use ISO8601 format)",
              "type": "DateTime",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "query",
              "name": "created_before",
              "description": "If set, only shows imports created before the specified date (use ISO8601 format)",
              "type": "DateTime",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "query",
              "name": "workflow_state",
              "description": "If set, only returns imports that are in the given state.",
              "type": "array",
              "format": null,
              "required": false,
              "deprecated": false,
              "enum": [
                "initializing",
                "created",
                "importing",
                "cleanup_batch",
                "imported",
                "imported_with_messages",
                "aborted",
                "failed",
                "failed_with_messages",
                "restoring",
                "partially_restored",
                "restored"
              ],
              "items": {
                "type": "string"
              }
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "array",
          "items": {
            "$ref": "SisImport"
          }
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports/importing",
      "description": "Returns the SIS imports that are currently processing for an account. If no\nimports are running, will return an empty array.\n\nExample:\n  curl https://<canvas>/api/v1/accounts/<account_id>/sis_imports/importing \\\n    -H 'Authorization: Bearer <token>'",
      "operations": [
        {
          "method": "GET",
          "summary": "Get the current importing SIS import",
          "notes": "Returns the SIS imports that are currently processing for an account. If no\nimports are running, will return an empty array.\n\nExample:\n  curl https://<canvas>/api/v1/accounts/<account_id>/sis_imports/importing \\\n    -H 'Authorization: Bearer <token>'",
          "nickname": "get_current_importing_sis_import",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "SisImport"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports",
      "description": "Import SIS data into Canvas. Must be on a root account with SIS imports\nenabled.\n\nFor more information on the format that's expected here, please see the\n\"SIS CSV\" section in the API docs.",
      "operations": [
        {
          "method": "POST",
          "summary": "Import SIS data",
          "notes": "Import SIS data into Canvas. Must be on a root account with SIS imports\nenabled.\n\nFor more information on the format that's expected here, please see the\n\"SIS CSV\" section in the API docs.",
          "nickname": "import_sis_data",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "import_type",
              "description": "Choose the data format for reading SIS data. With a standard Canvas\ninstall, this option can only be 'instructure_csv', and if unprovided,\nwill be assumed to be so. Can be part of the query string.",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "attachment",
              "description": "There are two ways to post SIS import data - either via a\nmultipart/form-data form-field-style attachment, or via a non-multipart\nraw post request.\n\n'attachment' is required for multipart/form-data style posts. Assumed to\nbe SIS data from a file upload form field named 'attachment'.\n\nExamples:\n  curl -F attachment=@<filename> -H \"Authorization: Bearer <token>\" \\\n      https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv\n\nIf you decide to do a raw post, you can skip the 'attachment' argument,\nbut you will then be required to provide a suitable Content-Type header.\nYou are encouraged to also provide the 'extension' argument.\n\nExamples:\n  curl -H 'Content-Type: application/octet-stream' --data-binary @<filename>.zip \\\n      -H \"Authorization: Bearer <token>\" \\\n      https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv&extension=zip\n\n  curl -H 'Content-Type: application/zip' --data-binary @<filename>.zip \\\n      -H \"Authorization: Bearer <token>\" \\\n      https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv\n\n  curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \\\n      -H \"Authorization: Bearer <token>\" \\\n      https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv\n\n  curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \\\n      -H \"Authorization: Bearer <token>\" \\\n      https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv&batch_mode=1&batch_mode_term_id=15",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "extension",
              "description": "Recommended for raw post request style imports. This field will be used to\ndistinguish between zip, xml, csv, and other file format extensions that\nwould usually be provided with the filename in the multipart post request\nscenario. If not provided, this value will be inferred from the\nContent-Type, falling back to zip-file format if all else fails.",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "batch_mode",
              "description": "If set, this SIS import will be run in batch mode, deleting any data\npreviously imported via SIS that is not present in this latest import.\nSee the SIS CSV Format page for details.\nBatch mode cannot be used with diffing.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "batch_mode_term_id",
              "description": "Limit deletions to only this term. Required if batch mode is enabled.",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "multi_term_batch_mode",
              "description": "Runs batch mode against all terms in terms file. Requires change_threshold.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "skip_deletes",
              "description": "When set the import will skip any deletes. This does not account for\nobjects that are deleted during the batch mode cleanup process.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "override_sis_stickiness",
              "description": "Many fields on records in Canvas can be marked \"sticky,\" which means that\nwhen something changes in the UI apart from the SIS, that field gets\n\"stuck.\" In this way, by default, SIS imports do not override UI changes.\nIf this field is present, however, it will tell the SIS import to ignore\n\"stickiness\" and override all fields.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "add_sis_stickiness",
              "description": "This option, if present, will process all changes as if they were UI\nchanges. This means that \"stickiness\" will be added to changed fields.\nThis option is only processed if 'override_sis_stickiness' is also provided.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "clear_sis_stickiness",
              "description": "This option, if present, will clear \"stickiness\" from all fields touched\nby this import. Requires that 'override_sis_stickiness' is also provided.\nIf 'add_sis_stickiness' is also provided, 'clear_sis_stickiness' will\noverrule the behavior of 'add_sis_stickiness'",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "update_sis_id_if_login_claimed",
              "description": "This option, if present, will override the old (or non-existent)\nnon-matching SIS ID with the new SIS ID in the upload,\nif a pseudonym is found from the login field and the SIS ID doesn't match.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "diffing_data_set_identifier",
              "description": "If set on a CSV import, Canvas will attempt to optimize the SIS import by\ncomparing this set of CSVs to the previous set that has the same data set\nidentifier, and only applying the difference between the two. See the\nSIS CSV Format documentation for more details.\nDiffing cannot be used with batch_mode",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "diffing_remaster_data_set",
              "description": "If true, and diffing_data_set_identifier is sent, this SIS import will be\npart of the data set, but diffing will not be performed. See the SIS CSV\nFormat documentation for details.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "diffing_drop_status",
              "description": "If diffing_drop_status is passed, this SIS import will use this status for\nenrollments that are not included in the sis_batch. Defaults to 'deleted'",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false,
              "enum": [
                "deleted",
                "completed",
                "inactive"
              ]
            },
            {
              "paramType": "form",
              "name": "batch_mode_enrollment_drop_status",
              "description": "If batch_mode_enrollment_drop_status is passed, this SIS import will use\nthis status for enrollments that are not included in the sis_batch. This\nwill have an effect if multi_term_batch_mode is set. Defaults to 'deleted'\nThis will still mark courses and sections that are not included in the\nsis_batch as deleted, and subsequently enrollments in the deleted courses\nand sections as deleted.",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false,
              "enum": [
                "deleted",
                "completed",
                "inactive"
              ]
            },
            {
              "paramType": "form",
              "name": "change_threshold",
              "description": "If set with batch_mode, the batch cleanup process will not run if the\nnumber of items deleted is higher than the percentage set. If set to 10\nand a term has 200 enrollments, and batch would delete more than 20 of\nthe enrollments the batch will abort before the enrollments are deleted.\nThe change_threshold will be evaluated for course, sections, and\nenrollments independently.\nIf set with diffing, diffing will not be performed if the files are\ngreater than the threshold as a percent. If set to 5 and the file is more\nthan 5% smaller or more than 5% larger than the file that is being\ncompared to, diffing will not be performed. If the files are less than 5%,\ndiffing will be performed. The way the percent is calculated is by taking\nthe size of the current import and dividing it by the size of the previous\nimport. The formula used is:\n|(1 - current_file_size / previous_file_size)| * 100\nSee the SIS CSV Format documentation for more details.\nRequired for multi_term_batch_mode.",
              "type": "integer",
              "format": "int64",
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "diff_row_count_threshold",
              "description": "If set with diffing, diffing will not be performed if the number of rows\nto be run in the fully calculated diff import exceeds the threshold.",
              "type": "integer",
              "format": "int64",
              "required": false,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "SisImport"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports/{id}",
      "description": "Get the status of an already created SIS import.\n\n  Examples:\n    curl https://<canvas>/api/v1/accounts/<account_id>/sis_imports/<sis_import_id> \\\n        -H 'Authorization: Bearer <token>'",
      "operations": [
        {
          "method": "GET",
          "summary": "Get SIS import status",
          "notes": "Get the status of an already created SIS import.\n\n  Examples:\n    curl https://<canvas>/api/v1/accounts/<account_id>/sis_imports/<sis_import_id> \\\n        -H 'Authorization: Bearer <token>'",
          "nickname": "get_sis_import_status",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "SisImport"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports/{id}/restore_states",
      "description": "This will restore the the workflow_state for all the items that changed\ntheir workflow_state during the import being restored.\nThis will restore states for items imported with the following importers:\naccounts.csv terms.csv courses.csv sections.csv group_categories.csv\ngroups.csv users.csv admins.csv\nThis also restores states for other items that changed during the import.\nAn example would be if an enrollment was deleted from a sis import and the\ngroup_membership was also deleted as a result of the enrollment deletion,\nboth items would be restored when the sis batch is restored.",
      "operations": [
        {
          "method": "PUT",
          "summary": "Restore workflow_states of SIS imported items",
          "notes": "This will restore the the workflow_state for all the items that changed\ntheir workflow_state during the import being restored.\nThis will restore states for items imported with the following importers:\naccounts.csv terms.csv courses.csv sections.csv group_categories.csv\ngroups.csv users.csv admins.csv\nThis also restores states for other items that changed during the import.\nAn example would be if an enrollment was deleted from a sis import and the\ngroup_membership was also deleted as a result of the enrollment deletion,\nboth items would be restored when the sis batch is restored.",
          "nickname": "restore_workflow_states_of_sis_imported_items",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "batch_mode",
              "description": "If set, will only restore items that were deleted from batch_mode.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "undelete_only",
              "description": "If set, will only restore items that were deleted. This will ignore any\nitems that were created or modified.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "unconclude_only",
              "description": "If set, will only restore enrollments that were concluded. This will\nignore any items that were created or deleted.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "Progress"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports/{id}/abort",
      "description": "Abort a SIS import that has not completed.\n\nAborting a sis batch that is running can take some time for every process to\nsee the abort event. Subsequent sis batches begin to process 10 minutes\nafter the abort to allow each process to clean up properly.",
      "operations": [
        {
          "method": "PUT",
          "summary": "Abort SIS import",
          "notes": "Abort a SIS import that has not completed.\n\nAborting a sis batch that is running can take some time for every process to\nsee the abort event. Subsequent sis batches begin to process 10 minutes\nafter the abort to allow each process to clean up properly.",
          "nickname": "abort_sis_import",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "SisImport"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports/abort_all_pending",
      "description": "Abort already created but not processed or processing SIS imports.",
      "operations": [
        {
          "method": "PUT",
          "summary": "Abort all pending SIS imports",
          "notes": "Abort already created but not processed or processing SIS imports.",
          "nickname": "abort_all_pending_sis_imports",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "boolean"
        }
      ]
    }
  ],
  "models": {
    "SisImportData": {
      "id": "SisImportData",
      "description": "",
      "required": [],
      "deprecated": false,
      "deprecation_description": null,
      "properties": {
        "import_type": {
          "description": "The type of SIS import",
          "example": "instructure_csv",
          "type": "string"
        },
        "supplied_batches": {
          "description": "Which files were included in the SIS import",
          "example": [
            "term",
            "course",
            "section",
            "user",
            "enrollment"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "counts": {
          "description": "The number of rows processed for each type of import",
          "$ref": "SisImportCounts"
        }
      }
    },
    "SisImportStatistic": {
      "id": "SisImportStatistic",
      "description": "",
      "required": [],
      "deprecated": false,
      "deprecation_description": null,
      "properties": {
        "created": {
          "description": "This is the number of items that were created.",
          "example": 18,
          "type": "integer"
        },
        "concluded": {
          "description": "This is the number of items that marked as completed. This only applies to courses and enrollments.",
          "example": 3,
          "type": "integer"
        },
        "deactivated": {
          "description": "This is the number of Enrollments that were marked as 'inactive'. This only applies to enrollments.",
          "example": 1,
          "type": "integer"
        },
        "restored": {
          "description": "This is the number of items that were set to an active state from a completed, inactive, or deleted state.",
          "example": 2,
          "type": "integer"
        },
        "deleted": {
          "description": "This is the number of items that were deleted.",
          "example": 40,
          "type": "integer"
        }
      }
    },
    "SisImportStatistics": {
      "id": "SisImportStatistics",
      "description": "",
      "required": [],
      "deprecated": false,
      "deprecation_description": null,
      "properties": {
        "total_state_changes": {
          "description": "This is the total number of items that were changed in the sis import. There are a few caveats that can cause this number to not add up to the individual counts. There are some state changes that happen that have no impact to the object. An example would be changing a course from 'created' to 'claimed'. Both of these would be considered an active course, but would increment this counter. In this example the course would not increment the created or restored counters for course statistic.",
          "example": 382,
          "type": "integer"
        },
        "Account": {
          "description": "This contains that statistics for accounts.",
          "$ref": "SisImportStatistic"
        },
        "EnrollmentTerm": {
          "description": "This contains that statistics for terms.",
          "$ref": "SisImportStatistic"
        },
        "CommunicationChannel": {
          "description": "This contains that statistics for communication channels. This is an indirect effect from creating or deleting a user.",
          "$ref": "SisImportStatistic"
        },
        "AbstractCourse": {
          "description": "This contains that statistics for abstract courses.",
          "$ref": "SisImportStatistic"
        },
        "Course": {
          "description": "This contains that statistics for courses.",
          "$ref": "SisImportStatistic"
        },
        "CourseSection": {
          "description": "This contains that statistics for course sections.",
          "$ref": "SisImportStatistic"
        },
        "Enrollment": {
          "description": "This contains that statistics for enrollments.",
          "$ref": "SisImportStatistic"
        },
        "GroupCategory": {
          "description": "This contains that statistics for group categories.",
          "$ref": "SisImportStatistic"
        },
        "Group": {
          "description": "This contains that statistics for groups.",
          "$ref": "SisImportStatistic"
        },
        "GroupMembership": {
          "description": "This contains that statistics for group memberships. This can be a direct impact from the import or indirect from an enrollment being deleted.",
          "$ref": "SisImportStatistic"
        },
        "Pseudonym": {
          "description": "This contains that statistics for pseudonyms. Pseudonyms are logins for users, and are the object that ties an enrollment to a user. This would be impacted from the user importer. ",
          "$ref": "SisImportStatistic"
        },
        "UserObserver": {
          "description": "This contains that statistics for user observers.",
          "$ref": "SisImportStatistic"
        },
        "AccountUser": {
          "description": "This contains that statistics for account users.",
          "$ref": "SisImportStatistic"
        }
      }
    },
    "SisImportCounts": {
      "id": "SisImportCounts",
      "description": "",
      "required": [],
      "deprecated": false,
      "deprecation_description": null,
      "properties": {
        "accounts": {
          "example": 0,
          "type": "integer"
        },
        "terms": {
          "example": 3,
          "type": "integer"
        },
        "abstract_courses": {
          "example": 0,
          "type": "integer"
        },
        "courses": {
          "example": 121,
          "type": "integer"
        },
        "sections": {
          "example": 278,
          "type": "integer"
        },
        "xlists": {
          "example": 0,
          "type": "integer"
        },
        "users": {
          "example": 346,
          "type": "integer"
        },
        "enrollments": {
          "example": 1542,
          "type": "integer"
        },
        "groups": {
          "example": 0,
          "type": "integer"
        },
        "group_memberships": {
          "example": 0,
          "type": "integer"
        },
        "grade_publishing_results": {
          "example": 0,
          "type": "integer"
        },
        "batch_courses_deleted": {
          "description": "the number of courses that were removed because they were not included in the batch for batch_mode imports. Only included if courses were deleted",
          "example": 11,
          "type": "integer"
        },
        "batch_sections_deleted": {
          "description": "the number of sections that were removed because they were not included in the batch for batch_mode imports. Only included if sections were deleted",
          "example": 0,
          "type": "integer"
        },
        "batch_enrollments_deleted": {
          "description": "the number of enrollments that were removed because they were not included in the batch for batch_mode imports. Only included if enrollments were deleted",
          "example": 150,
          "type": "integer"
        },
        "error_count": {
          "example": 0,
          "type": "integer"
        },
        "warning_count": {
          "example": 0,
          "type": "integer"
        }
      }
    },
    "SisImport": {
      "id": "SisImport",
      "description": "",
      "required": [],
      "deprecated": false,
      "deprecation_description": null,
      "properties": {
        "id": {
          "description": "The unique identifier for the SIS import.",
          "example": 1,
          "type": "integer"
        },
        "created_at": {
          "description": "The date the SIS import was created.",
          "example": "2013-12-01T23:59:00-06:00",
          "type": "datetime"
        },
        "ended_at": {
          "description": "The date the SIS import finished. Returns null if not finished.",
          "example": "2013-12-02T00:03:21-06:00",
          "type": "datetime"
        },
        "updated_at": {
          "description": "The date the SIS import was last updated.",
          "example": "2013-12-02T00:03:21-06:00",
          "type": "datetime"
        },
        "workflow_state": {
          "description": "The current state of the SIS import.\n - 'initializing': The SIS import is being created, if this gets stuck in initializing, it will not import and will continue on to next import.\n - 'created': The SIS import has been created.\n - 'importing': The SIS import is currently processing.\n - 'cleanup_batch': The SIS import is currently cleaning up courses, sections, and enrollments not included in the batch for batch_mode imports.\n - 'imported': The SIS import has completed successfully.\n - 'imported_with_messages': The SIS import completed with errors or warnings.\n - 'aborted': The SIS import was aborted.\n - 'failed_with_messages': The SIS import failed with errors.\n - 'failed': The SIS import failed.\n - 'restoring': The SIS import is restoring states of imported items.\n - 'partially_restored': The SIS import is restored some of the states of imported items. This is generally due to passing a param like undelete only.\n - 'restored': The SIS import is restored all of the states of imported items.",
          "example": "imported",
          "type": "string",
          "allowableValues": {
            "values": [
              "initializing",
              "created",
              "importing",
              "cleanup_batch",
              "imported",
              "imported_with_messages",
              "aborted",
              "failed",
              "failed_with_messages",
              "restoring",
              "partially_restored",
              "restored"
            ]
          }
        },
        "data": {
          "description": "data",
          "$ref": "SisImportData"
        },
        "statistics": {
          "description": "statistics",
          "$ref": "SisImportStatistics"
        },
        "progress": {
          "description": "The progress of the SIS import. The progress will reset when using batch_mode and have a different progress for the cleanup stage",
          "example": "100",
          "type": "string"
        },
        "errors_attachment": {
          "description": "The errors_attachment api object of the SIS import. Only available if there are errors or warning and import has completed.",
          "$ref": "File"
        },
        "user": {
          "description": "The user that initiated the sis_batch. See the Users API for details.",
          "$ref": "User"
        },
        "processing_warnings": {
          "description": "Only imports that are complete will get this data. An array of CSV_file/warning_message pairs.",
          "example": [
            [
              "students.csv",
              "user John Doe has already claimed john_doe's requested login information, skipping"
            ]
          ],
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "processing_errors": {
          "description": "An array of CSV_file/error_message pairs.",
          "example": [
            [
              "students.csv",
              "Error while importing CSV. Please contact support."
            ]
          ],
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "batch_mode": {
          "description": "Whether the import was run in batch mode.",
          "example": "true",
          "type": "boolean"
        },
        "batch_mode_term_id": {
          "description": "The term the batch was limited to.",
          "example": "1234",
          "type": "string"
        },
        "multi_term_batch_mode": {
          "description": "Enables batch mode against all terms in term file. Requires change_threshold to be set.",
          "example": "false",
          "type": "boolean"
        },
        "skip_deletes": {
          "description": "When set the import will skip any deletes.",
          "example": "false",
          "type": "boolean"
        },
        "override_sis_stickiness": {
          "description": "Whether UI changes were overridden.",
          "example": "false",
          "type": "boolean"
        },
        "add_sis_stickiness": {
          "description": "Whether stickiness was added to the batch changes.",
          "example": "false",
          "type": "boolean"
        },
        "clear_sis_stickiness": {
          "description": "Whether stickiness was cleared.",
          "example": "false",
          "type": "boolean"
        },
        "diffing_data_set_identifier": {
          "description": "The identifier of the data set that this SIS batch diffs against",
          "example": "account-5-enrollments",
          "type": "string"
        },
        "diffed_against_import_id": {
          "description": "The ID of the SIS Import that this import was diffed against",
          "example": 1,
          "type": "integer"
        },
        "csv_attachments": {
          "description": "An array of CSV files for processing",
          "example": [],
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "File"
            }
          }
        }
      }
    }
  }
}
