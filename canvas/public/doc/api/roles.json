{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:3000/api",
  "resourcePath": "/roles",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/v1/accounts/{account_id}/roles",
      "description": "A paginated list of the roles available to an account.",
      "operations": [
        {
          "method": "GET",
          "summary": "List roles",
          "notes": "A paginated list of the roles available to an account.",
          "nickname": "list_roles",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "The id of the account to retrieve roles for.",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "query",
              "name": "state",
              "description": "Filter by role state. If this argument is omitted, only 'active' roles are\nreturned.",
              "type": "array",
              "format": null,
              "required": false,
              "deprecated": false,
              "enum": [
                "active",
                "inactive"
              ],
              "items": {
                "type": "string"
              }
            },
            {
              "paramType": "query",
              "name": "show_inherited",
              "description": "If this argument is true, all roles inherited from parent accounts will\nbe included.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "array",
          "items": {
            "$ref": "Role"
          }
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/roles/{id}",
      "description": "Retrieve information about a single role",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a single role",
          "notes": "Retrieve information about a single role",
          "nickname": "get_single_role",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "path",
              "name": "account_id",
              "description": "The id of the account containing the role",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "query",
              "name": "role_id",
              "description": "The unique identifier for the role",
              "type": "integer",
              "format": "int64",
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "query",
              "name": "role",
              "description": "The name for the role",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "Role"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/roles",
      "description": "Create a new course-level or account-level role.",
      "operations": [
        {
          "method": "POST",
          "summary": "Create a new role",
          "notes": "Create a new course-level or account-level role.",
          "nickname": "create_new_role",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "label",
              "description": "Label for the role.",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "role",
              "description": "Deprecated alias for label.",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "base_role_type",
              "description": "Specifies the role type that will be used as a base\nfor the permissions granted to this role.\n\nDefaults to 'AccountMembership' if absent",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false,
              "enum": [
                "AccountMembership",
                "StudentEnrollment",
                "TeacherEnrollment",
                "TaEnrollment",
                "ObserverEnrollment",
                "DesignerEnrollment"
              ]
            },
            {
              "paramType": "form",
              "name": "permissions[<X>][explicit]",
              "description": "no description",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "permissions[<X>][enabled]",
              "description": "If explicit is 1 and enabled is 1, permission <X> will be explicitly\ngranted to this role. If explicit is 1 and enabled has any other value\n(typically 0), permission <X> will be explicitly denied to this role. If\nexplicit is any other value (typically 0) or absent, or if enabled is\nabsent, the value for permission <X> will be inherited from upstream.\nIgnored if permission <X> is locked upstream (in an ancestor account).\n\nMay occur multiple times with unique values for <X>. Recognized\npermission names for <X> are:\n\n  [For Account-Level Roles Only]\n  become_user                      -- Users - act as\n  import_sis                       -- SIS Data - import\n  manage_account_memberships       -- Admins - add / remove\n  manage_account_settings          -- Account-level settings - manage\n  manage_alerts                    -- Global announcements - add / edit / delete\n  manage_catalog                   -- Catalog - manage\n  Manage Course Templates granular permissions\n      add_course_template          -- Course Templates - add\n      delete_course_template       -- Course Templates - delete\n      edit_course_template         -- Course Templates - edit\n  manage_courses_add               -- Courses - add\n  manage_courses_admin             -- Courses - manage / update\n  manage_developer_keys            -- Developer keys - manage\n  manage_feature_flags             -- Feature Previews - enable / disable\n  manage_master_courses            -- Blueprint Courses - add / edit / associate / delete\n  manage_role_overrides            -- Permissions - manage\n  manage_storage_quotas            -- Storage Quotas - manage\n  manage_sis                       -- SIS data - manage\n  manage_user_logins               -- Users - manage login details\n  manage_user_observers            -- Users - manage observers\n  moderate_user_content            -- Users - moderate content\n  read_course_content              -- Course Content - view\n  read_course_list                 -- Courses - view list\n  view_course_changes              -- Courses - view change logs\n  view_feature_flags               -- Feature Previews - view\n  view_grade_changes               -- Grades - view change logs\n  view_notifications               -- Notifications - view\n  view_quiz_answer_audits          -- Quizzes - view submission log\n  view_statistics                  -- Statistics - view\n  undelete_courses                 -- Courses - undelete\n\n  [For both Account-Level and Course-Level roles]\n   Note: Applicable enrollment types for course-level roles are given in brackets:\n         S = student, T = teacher (instructor), A = TA, D = designer, O = observer.\n         Lower-case letters indicate permissions that are off by default.\n         A missing letter indicates the permission cannot be enabled for the role\n         or any derived custom roles.\n  allow_course_admin_actions       -- [ Tad ] Users - allow administrative actions in courses\n  create_collaborations            -- [STADo] Student Collaborations - create\n  create_conferences               -- [STADo] Web conferences - create\n  create_forum                     -- [STADo] Discussions - create\n  generate_observer_pairing_code   -- [ tado] Users - Generate observer pairing codes for students\n  import_outcomes                  -- [ TaDo] Learning Outcomes - import\n  lti_add_edit                     -- [ TAD ] LTI - add / edit / delete\n  manage_account_banks             -- [ td  ] Item Banks - manage account\n  manage_assignments               -- [ TADo] Assignments and Quizzes - add / edit / delete (deprecated)\n  Manage Assignments and Quizzes granular permissions\n      manage_assignments_add       -- [ TADo] Assignments and Quizzes - add\n      manage_assignments_edit      -- [ TADo] Assignments and Quizzes - edit / manage\n      manage_assignments_delete    -- [ TADo] Assignments and Quizzes - delete\n  manage_calendar                  -- [sTADo] Course Calendar - add / edit / delete\n  manage_content                   -- [ TADo] Course Content - add / edit / delete\n  manage_course_visibility         -- [ TAD ] Course - change visibility\n  Manage Courses granular permissions\n      manage_courses_conclude      -- [ TaD ] Courses - conclude\n      manage_courses_delete        -- [ TaD ] Courses - delete\n      manage_courses_publish       -- [ TaD ] Courses - publish\n      manage_courses_reset         -- [ TaD ] Courses - reset\n  Manage Files granular permissions\n      manage_files_add             -- [ TADo] Course Files - add\n      manage_files_edit            -- [ TADo] Course Files - edit\n      manage_files_delete          -- [ TADo] Course Files - delete\n  manage_grades                    -- [ TA  ] Grades - edit\n  Manage Groups granular permissions\n      manage_groups_add            -- [ TAD ] Groups - add\n      manage_groups_delete         -- [ TAD ] Groups - delete\n      manage_groups_manage         -- [ TAD ] Groups - manage\n  manage_interaction_alerts        -- [ Ta  ] Alerts - add / edit / delete\n  manage_outcomes                  -- [sTaDo] Learning Outcomes - add / edit / delete\n  manage_proficiency_calculations  -- [ t d ] Outcome Proficiency Calculations - add / edit / delete\n  manage_proficiency_scales        -- [ t d ] Outcome Proficiency/Mastery Scales - add / edit / delete\n  Manage Sections granular permissions\n      manage_sections_add          -- [ TaD ] Course Sections - add\n      manage_sections_edit         -- [ TaD ] Course Sections - edit\n      manage_sections_delete       -- [ TaD ] Course Sections - delete\n  manage_students                  -- [ TAD ] Users - manage students in courses\n  manage_user_notes                -- [ TA  ] Faculty Journal - manage entries\n  manage_rubrics                   -- [ TAD ] Rubrics - add / edit / delete\n  Manage Pages granular permissions\n      manage_wiki_create           -- [ TADo] Pages - create\n      manage_wiki_delete           -- [ TADo] Pages - delete\n      manage_wiki_update           -- [ TADo] Pages - update\n  moderate_forum                   -- [sTADo] Discussions - moderate\n  post_to_forum                    -- [STADo] Discussions - post\n  read_announcements               -- [STADO] Announcements - view\n  read_email_addresses             -- [sTAdo] Users - view primary email address\n  read_forum                       -- [STADO] Discussions - view\n  read_question_banks              -- [ TADo] Question banks - view and link\n  read_reports                     -- [ TAD ] Courses - view usage reports\n  read_roster                      -- [STADo] Users - view list\n  read_sis                         -- [sTa  ] SIS Data - read\n  select_final_grade               -- [ TA  ] Grades - select final grade for moderation\n  send_messages                    -- [STADo] Conversations - send messages to individual course members\n  send_messages_all                -- [sTADo] Conversations - send messages to entire class\n  Users - Teacher granular permissions\n      add_teacher_to_course        -- [ Tad ] Add a teacher enrollment to a course\n      remove_teacher_from_course   -- [ Tad ] Remove a Teacher enrollment from a course\n  Users - TA granular permissions\n      add_ta_to_course             -- [ Tad ] Add a TA enrollment to a course\n      remove_ta_from_course        -- [ Tad ] Remove a TA enrollment from a course\n  Users - Designer granular permissions\n      add_designer_to_course       -- [ Tad ] Add a designer enrollment to a course\n      remove_designer_from_course  -- [ Tad ] Remove a designer enrollment from a course\n  Users - Observer granular permissions\n      add_observer_to_course       -- [ Tad ] Add an observer enrollment to a course\n      remove_observer_from_course  -- [ Tad ] Remove an observer enrollment from a course\n  Users - Student granular permissions\n      add_student_to_course        -- [ Tad ] Add a student enrollment to a course\n      remove_student_from_course   -- [ Tad ] Remove a student enrollment from a course\n  view_all_grades                  -- [ TAd ] Grades - view all grades\n  view_analytics                   -- [sTA  ] Analytics - view pages\n  view_audit_trail                 -- [ t   ] Grades - view audit trail\n  view_group_pages                 -- [sTADo] Groups - view all student groups\n  view_user_logins                 -- [ TA  ] Users - view login IDs\n\nSome of these permissions are applicable only for roles on the site admin\naccount, on a root account, or for course-level roles with a particular base role type;\nif a specified permission is inapplicable, it will be ignored.\n\nAdditional permissions may exist based on installed plugins.\n\nA comprehensive list of all permissions are available:\n\nCourse Permissions PDF: http://bit.ly/cnvs-course-permissions\n\nAccount Permissions PDF: http://bit.ly/cnvs-acct-permissions",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "permissions[<X>][locked]",
              "description": "If the value is 1, permission <X> will be locked downstream (new roles in\nsubaccounts cannot override the setting). For any other value, permission\n<X> is left unlocked. Ignored if permission <X> is already locked\nupstream. May occur multiple times with unique values for <X>.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "permissions[<X>][applies_to_self]",
              "description": "If the value is 1, permission <X> applies to the account this role is in.\nThe default value is 1. Must be true if applies_to_descendants is false.\nThis value is only returned if enabled is true.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "permissions[<X>][applies_to_descendants]",
              "description": "If the value is 1, permission <X> cascades down to sub accounts of the\naccount this role is in. The default value is 1.  Must be true if\napplies_to_self is false.This value is only returned if enabled is true.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "Role"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/roles/{id}",
      "description": "Deactivates a custom role.  This hides it in the user interface and prevents it\nfrom being assigned to new users.  Existing users assigned to the role will\ncontinue to function with the same permissions they had previously.\nBuilt-in roles cannot be deactivated.",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Deactivate a role",
          "notes": "Deactivates a custom role.  This hides it in the user interface and prevents it\nfrom being assigned to new users.  Existing users assigned to the role will\ncontinue to function with the same permissions they had previously.\nBuilt-in roles cannot be deactivated.",
          "nickname": "deactivate_role",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "query",
              "name": "role_id",
              "description": "The unique identifier for the role",
              "type": "integer",
              "format": "int64",
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "query",
              "name": "role",
              "description": "The name for the role",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "Role"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/roles/{id}/activate",
      "description": "Re-activates an inactive role (allowing it to be assigned to new users)",
      "operations": [
        {
          "method": "POST",
          "summary": "Activate a role",
          "notes": "Re-activates an inactive role (allowing it to be assigned to new users)",
          "nickname": "activate_role",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "role_id",
              "description": "The unique identifier for the role",
              "type": "integer",
              "format": "int64",
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "role",
              "description": "The name for the role",
              "type": "Deprecated",
              "format": null,
              "required": false,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "Role"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/roles/{id}",
      "description": "Update permissions for an existing role.\n\nRecognized roles are:\n* TeacherEnrollment\n* StudentEnrollment\n* TaEnrollment\n* ObserverEnrollment\n* DesignerEnrollment\n* AccountAdmin\n* Any previously created custom role",
      "operations": [
        {
          "method": "PUT",
          "summary": "Update a role",
          "notes": "Update permissions for an existing role.\n\nRecognized roles are:\n* TeacherEnrollment\n* StudentEnrollment\n* TaEnrollment\n* ObserverEnrollment\n* DesignerEnrollment\n* AccountAdmin\n* Any previously created custom role",
          "nickname": "update_role",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "label",
              "description": "The label for the role. Can only change the label of a custom role that belongs directly to the account.",
              "type": "string",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "permissions[<X>][explicit]",
              "description": "no description",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "permissions[<X>][enabled]",
              "description": "These arguments are described in the documentation for the\n{api:RoleOverridesController#add_role add_role method}.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "permissions[<X>][applies_to_self]",
              "description": "If the value is 1, permission <X> applies to the account this role is in.\nThe default value is 1. Must be true if applies_to_descendants is false.\nThis value is only returned if enabled is true.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            },
            {
              "paramType": "form",
              "name": "permissions[<X>][applies_to_descendants]",
              "description": "If the value is 1, permission <X> cascades down to sub accounts of the\naccount this role is in. The default value is 1.  Must be true if\napplies_to_self is false.This value is only returned if enabled is true.",
              "type": "boolean",
              "format": null,
              "required": false,
              "deprecated": false
            }
          ],
          "response_fields": [],
          "deprecated": false,
          "deprecation_description": "",
          "type": "Role"
        }
      ]
    }
  ],
  "models": {
    "RolePermissions": {
      "id": "RolePermissions",
      "description": "",
      "required": [],
      "deprecated": false,
      "deprecation_description": null,
      "properties": {
        "enabled": {
          "description": "Whether the role has the permission",
          "example": true,
          "type": "boolean"
        },
        "locked": {
          "description": "Whether the permission is locked by this role",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "applies_to_self": {
          "description": "Whether the permission applies to the account this role is in. Only present if enabled is true",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "applies_to_descendants": {
          "description": "Whether the permission cascades down to sub accounts of the account this role is in. Only present if enabled is true",
          "example": false,
          "type": "boolean",
          "default": true
        },
        "readonly": {
          "description": "Whether the permission can be modified in this role (i.e. whether the permission is locked by an upstream role).",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "explicit": {
          "description": "Whether the value of enabled is specified explicitly by this role, or inherited from an upstream role.",
          "example": true,
          "type": "boolean",
          "default": false
        },
        "prior_default": {
          "description": "The value that would have been inherited from upstream if the role had not explicitly set a value. Only present if explicit is true.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Role": {
      "id": "Role",
      "description": "",
      "required": [],
      "deprecated": false,
      "deprecation_description": null,
      "properties": {
        "label": {
          "description": "The label of the role.",
          "example": "New Role",
          "type": "string"
        },
        "role": {
          "description": "The label of the role. (Deprecated alias for 'label')",
          "example": "New Role",
          "type": "string"
        },
        "base_role_type": {
          "description": "The role type that is being used as a base for this role. For account-level roles, this is 'AccountMembership'. For course-level roles, it is an enrollment type.",
          "example": "AccountMembership",
          "type": "string"
        },
        "account": {
          "description": "JSON representation of the account the role is in.",
          "example": {
            "id": 1019,
            "name": "CGNU",
            "parent_account_id": 73,
            "root_account_id": 1,
            "sis_account_id": "cgnu"
          },
          "type": "object",
          "$ref": "Account"
        },
        "workflow_state": {
          "description": "The state of the role: 'active', 'inactive', or 'built_in'",
          "example": "active",
          "type": "string"
        },
        "permissions": {
          "description": "A dictionary of permissions keyed by name (see permissions input parameter in the 'Create a role' API).",
          "example": {
            "read_course_content": {
              "enabled": true,
              "locked": false,
              "readonly": false,
              "explicit": true,
              "prior_default": false
            },
            "read_course_list": {
              "enabled": true,
              "locked": true,
              "readonly": true,
              "explicit": false
            },
            "read_question_banks": {
              "enabled": false,
              "locked": true,
              "readonly": false,
              "explicit": true,
              "prior_default": false
            },
            "read_reports": {
              "enabled": true,
              "locked": false,
              "readonly": false,
              "explicit": false
            }
          },
          "type": "object",
          "key": {
            "type": "string"
          },
          "value": {
            "$ref": "RolePermissions"
          }
        }
      }
    }
  }
}
