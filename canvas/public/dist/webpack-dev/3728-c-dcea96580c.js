(window["canvasWebpackJsonp"] = window["canvasWebpackJsonp"] || []).push([[3728],{

/***/ "8IHO":
/*!******************************************************************!*\
  !*** ./ui/shared/lti/jquery/subjects/requestFullWindowLaunch.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectSpread2 */ \"VTBJ\");\n/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messages */ \"jFoo\");\n\n\n/*\n * Copyright (C) 2019 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nconst parseData = data => {\n  const defaults = {\n    display: 'borderless',\n    launchType: 'same_window',\n    launchOptions: {}\n  };\n\n  if (typeof data === 'string') {\n    return Object(_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n      url: data\n    }, defaults);\n  } else if (typeof data === 'object' && !(data instanceof Array)) {\n    if (!data.url) {\n      throw new Error('message must contain a `url` property');\n    }\n\n    return Object(_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Object(_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, defaults), data);\n  } else {\n    throw new Error('message contents must either be a string or an object');\n  }\n};\n\nconst buildLaunchUrl = (messageUrl, placement, display) => {\n  let context = ENV.context_asset_string.replace('_', 's/');\n\n  if (!(context.startsWith('account') || context.startsWith('course'))) {\n    context = 'accounts/' + ENV.DOMAIN_ROOT_ACCOUNT_ID;\n  }\n\n  const baseUrl = `${window.location.origin}/${context}/external_tools/retrieve?display=${display}`;\n  const toolLaunchUrl = new URL(messageUrl);\n  const clientId = toolLaunchUrl.searchParams.get('client_id');\n  const clientIdParam = clientId ? `&client_id=${clientId}` : '';\n  const placementParam = placement ? `&placement=${placement}` : '';\n  const assignmentId = toolLaunchUrl.searchParams.get('assignment_id');\n  const assignmentParam = assignmentId ? `&assignment_id=${assignmentId}` : ''; // xsslint safeString.property window.location\n\n  toolLaunchUrl.searchParams.append('platform_redirect_url', window.location);\n  toolLaunchUrl.searchParams.append('full_win_launch_requested', '1');\n  const encodedToolLaunchUrl = encodeURIComponent(toolLaunchUrl.toString());\n  return `${baseUrl}&url=${encodedToolLaunchUrl}${clientIdParam}${placementParam}${assignmentParam}`;\n};\n\nconst handler = ({\n  message\n}) => {\n  const _parseData = parseData(message.data),\n        url = _parseData.url,\n        launchType = _parseData.launchType,\n        launchOptions = _parseData.launchOptions,\n        placement = _parseData.placement,\n        display = _parseData.display;\n\n  const launchUrl = buildLaunchUrl(url, placement, display);\n  let proxy;\n\n  switch (launchType) {\n    case 'popup':\n      {\n        const width = launchOptions.width || 800;\n        const height = launchOptions.height || 600;\n        proxy = window.open(launchUrl, 'popupLaunch', `toolbar=no,menubar=no,location=no,status=no,resizable,scrollbars,width=${width},height=${height}`);\n        break;\n      }\n\n    case 'new_window':\n      {\n        proxy = window.open(launchUrl, 'newWindowLaunch');\n        break;\n      }\n\n    case 'same_window':\n      {\n        window.location.assign(launchUrl);\n        break;\n      }\n\n    default:\n      {\n        throw new Error(\"unknown launchType, must be 'popup', 'new_window', 'same_window'\");\n      }\n  } // keep a reference to close later\n\n\n  _messages__WEBPACK_IMPORTED_MODULE_1__[\"ltiState\"].fullWindowProxy = proxy;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (handler);\n\n//# sourceURL=webpack:///./ui/shared/lti/jquery/subjects/requestFullWindowLaunch.js?");

/***/ }),

/***/ "o6ta":
/*!*********************************************************************************!*\
  !*** ./ui/shared/lti/jquery/subjects/__tests__/requestFullWindowLaunch.test.js ***!
  \*********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requestFullWindowLaunch */ \"8IHO\");\n/*\n * Copyright (C) 2018 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\ndescribe('requestFullWindowLaunch', () => {\n  const assign = window.location.assign;\n  const open = window.open;\n  beforeEach(() => {\n    delete window.open;\n    delete window.location;\n    window.location = {\n      assign: jest.fn(),\n      origin: 'http://localhost'\n    };\n    window.open = jest.fn();\n    ENV.context_asset_string = 'account_1';\n  });\n  afterEach(() => {\n    window.location.assign = assign;\n    window.open = open;\n  });\n  describe('with string provided', () => {\n    it('uses launch type same_window', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: 'http://localhost/test'\n        }\n      });\n      expect(window.location.assign).toHaveBeenCalled();\n    });\n    it('pulls out client_id if provided', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: 'http://localhost/test?client_id=hello'\n        }\n      });\n      const launch_url = new URL(window.location.assign.mock.calls[0][0]);\n      expect(launch_url.searchParams.get('client_id')).toEqual('hello');\n    });\n    it('pulls out assignment_id if provided', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: 'http://localhost/test?client_id=hello&assignment_id=50'\n        }\n      });\n      const launch_url = new URL(window.location.assign.mock.calls[0][0]);\n      expect(launch_url.searchParams.get('assignment_id')).toEqual('50');\n    });\n  });\n  describe('with object provided', () => {\n    it('must contain a `url` property', () => {\n      expect(() => Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: {\n            foo: 'bar'\n          }\n        }\n      })).toThrow('message must contain a `url` property');\n    });\n    it('uses launch type same_window by default', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: {\n            url: 'http://localhost/test'\n          }\n        }\n      });\n      expect(window.location.assign).toHaveBeenCalled();\n    });\n    it('opens launch type new_window in a new tab', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: {\n            url: 'http://localhost/test',\n            launchType: 'new_window'\n          }\n        }\n      });\n      expect(window.open).toHaveBeenCalled();\n    });\n    it('opens launch type popup in a popup window', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: {\n            url: 'http://localhost/test',\n            launchType: 'popup'\n          }\n        }\n      });\n      expect(window.open).toHaveBeenCalledWith(expect.any(String), 'popupLaunch', expect.stringMatching(/toolbar/));\n    });\n    it('errors on unknown launch type', () => {\n      expect(() => Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: {\n            url: 'http://localhost/test',\n            launchType: 'fake'\n          }\n        }\n      })).toThrow(\"unknown launchType, must be 'popup', 'new_window', 'same_window'\");\n    });\n    it('uses placement to add to launch url', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: {\n            url: 'http://localhost/test',\n            placement: 'course_navigation'\n          }\n        }\n      });\n      expect(window.location.assign).toHaveBeenCalledWith(expect.stringContaining('&placement=course_navigation'));\n    });\n    it('uses launchOptions to add width and height to popup', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: {\n            url: 'http://localhost/test',\n            launchType: 'popup',\n            launchOptions: {\n              width: 420,\n              height: 400\n            }\n          }\n        }\n      });\n      expect(window.open).toHaveBeenCalledWith(expect.any(String), 'popupLaunch', expect.stringContaining('width=420,height=400'));\n    });\n    it('uses display type borderless by default', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: {\n            url: 'http://localhost/test'\n          }\n        }\n      });\n      const launch_url = new URL(window.location.assign.mock.calls[0][0]);\n      expect(launch_url.searchParams.get('display')).toEqual('borderless');\n    });\n    it('allows display type to be overridden', () => {\n      Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: {\n            url: 'http://localhost/test',\n            display: 'full_width_in_context'\n          }\n        }\n      });\n      const launch_url = new URL(window.location.assign.mock.calls[0][0]);\n      expect(launch_url.searchParams.get('display')).toEqual('full_width_in_context');\n    });\n  });\n  describe('with anything other than a string or object provided', () => {\n    it('errors', () => {\n      expect(() => Object(_requestFullWindowLaunch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        message: {\n          data: ['foo', 'bar']\n        }\n      })).toThrow('message contents must either be a string or an object');\n    });\n  });\n});\n\n//# sourceURL=webpack:///./ui/shared/lti/jquery/subjects/__tests__/requestFullWindowLaunch.test.js?");

/***/ })

}]);