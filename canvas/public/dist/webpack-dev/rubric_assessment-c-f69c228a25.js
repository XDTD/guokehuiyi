(window["canvasWebpackJsonp"] = window["canvasWebpackJsonp"] || []).push([["rubric_assessment"],{

/***/ "FdVj":
/*!****************************************!*\
  !*** ./ui/shared/i18n/numberHelper.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var parse_decimal_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parse-decimal-number */ \"qJBq\");\n/* harmony import */ var parse_decimal_number__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(parse_decimal_number__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _i18nObj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./i18nObj */ \"HGxv\");\n/*\n * Copyright (C) 2016 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nconst helper = {\n  _parseNumber: parse_decimal_number__WEBPACK_IMPORTED_MODULE_0___default.a,\n\n  parse(input) {\n    if (input == null) {\n      return NaN;\n    } else if (typeof input === 'number') {\n      return input;\n    }\n\n    let num = helper._parseNumber(input.toString(), {\n      thousands: _i18nObj__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lookup('number.format.delimiter'),\n      decimal: _i18nObj__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lookup('number.format.separator')\n    }); // fallback to default delimiters if invalid with locale specific ones\n\n\n    if (isNaN(num)) {\n      num = helper._parseNumber(input);\n    } // final fallback to old parseFloat - this allows us to still support scientific 'e' notation\n\n\n    if (input.toString().match(/e/) && isNaN(num)) {\n      num = parseFloat(input);\n    }\n\n    return num;\n  },\n\n  validate(input) {\n    return !isNaN(helper.parse(input));\n  }\n\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (helper);\n\n//# sourceURL=webpack:///./ui/shared/i18n/numberHelper.js?");

/***/ }),

/***/ "fQsH":
/*!************************************************!*\
  !*** ./ui/features/rubric_assessment/index.js ***!
  \************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"q1tI\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"i8i4\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _canvas_rubrics_react_Rubric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @canvas/rubrics/react/Rubric */ \"kv/t\");\n/* harmony import */ var _canvas_rubrics_react_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @canvas/rubrics/react/helpers */ \"aLXX\");\n/* harmony import */ var _instructure_ready__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @instructure/ready */ \"3lLS\");\n/* harmony import */ var _instructure_ready__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_instructure_ready__WEBPACK_IMPORTED_MODULE_4__);\n/*\n * Copyright (C) 2011 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\n\n\nconst findRubric = id => {\n  if (ENV.rubrics) {\n    return ENV.rubrics.find(r => r.id === id);\n  }\n\n  return null;\n};\n\nconst findRubricAssessment = id => {\n  if (ENV.rubric_assessments) {\n    return ENV.rubric_assessments.find(r => r.id === id);\n  }\n\n  return null;\n};\n\n_instructure_ready__WEBPACK_IMPORTED_MODULE_4___default()(() => {\n  const rubricElements = document.querySelectorAll('.react_rubric_container');\n  Array.prototype.forEach.call(rubricElements, rubricElement => {\n    const rubric = findRubric(rubricElement.dataset.rubricId);\n    const assessment = findRubricAssessment(rubricElement.dataset.rubricAssessmentId);\n    react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_canvas_rubrics_react_Rubric__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      rubric: rubric,\n      rubricAssessment: Object(_canvas_rubrics_react_helpers__WEBPACK_IMPORTED_MODULE_3__[\"fillAssessment\"])(rubric, assessment || {}),\n      rubricAssociation: assessment.rubric_association,\n      customRatings: ENV.outcome_proficiency ? ENV.outcome_proficiency.ratings : [],\n      flexWidth: ENV.gradebook_non_scoring_rubrics_enabled\n    }), rubricElement);\n  });\n});\n\n//# sourceURL=webpack:///./ui/features/rubric_assessment/index.js?");

/***/ }),

/***/ "qJBq":
/*!************************************************************************!*\
  !*** ./node_modules/parse-decimal-number/dist/parse-decimal-number.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() {\n  var options, parseDecimalNumber, patterns;\n\n  patterns = [];\n\n  options = {};\n\n  module.exports = parseDecimalNumber = function(value, inOptions, enforceGroupSize) {\n    var decimal, fractionPart, groupMinSize, integerPart, number, pattern, patternIndex, result, thousands;\n    if (enforceGroupSize == null) {\n      enforceGroupSize = true;\n    }\n    if (typeof inOptions === 'string') {\n      if (inOptions.length !== 2) {\n        throw {\n          name: 'ArgumentException',\n          message: 'The format for string options is \\'<thousands><decimal>\\' (exactly two characters)'\n        };\n      }\n      thousands = inOptions[0], decimal = inOptions[1];\n    } else if (Array.isArray(inOptions)) {\n      if (inOptions.length !== 2) {\n        throw {\n          name: 'ArgumentException',\n          message: 'The format for array options is [\\'<thousands>\\',\\'[<decimal>\\'] (exactly two elements)'\n        };\n      }\n      thousands = inOptions[0], decimal = inOptions[1];\n    } else {\n      thousands = (inOptions != null ? inOptions.thousands : void 0) || (inOptions != null ? inOptions.group : void 0) || options.thousands;\n      decimal = (inOptions != null ? inOptions.decimal : void 0) || options.decimal;\n    }\n    patternIndex = \"\" + thousands + decimal + enforceGroupSize;\n    pattern = patterns[patternIndex];\n    if (pattern == null) {\n      groupMinSize = enforceGroupSize ? 3 : 1;\n      pattern = patterns[patternIndex] = new RegExp(\"^\\\\s*([+\\-]?(?:(?:\\\\d{1,3}(?:\\\\\" + thousands + \"\\\\d{\" + groupMinSize + \",3})+)|\\\\d*))(?:\\\\\" + decimal + \"(\\\\d*))?\\\\s*$\");\n    }\n    result = value.match(pattern);\n    if (!((result != null) && result.length === 3)) {\n      return 0/0;\n    }\n    integerPart = result[1].replace(new RegExp(\"\\\\\" + thousands, 'g'), '');\n    fractionPart = result[2];\n    number = parseFloat(integerPart + \".\" + fractionPart);\n    return number;\n  };\n\n  module.exports.setOptions = function(newOptions) {\n    var key, value;\n    for (key in newOptions) {\n      value = newOptions[key];\n      options[key] = value;\n    }\n  };\n\n  module.exports.factoryReset = function() {\n    options = {\n      thousands: ',',\n      decimal: '.'\n    };\n  };\n\n  module.exports.withOptions = function(options, enforceGroupSize) {\n    if (enforceGroupSize == null) {\n      enforceGroupSize = true;\n    }\n    return function(value) {\n      return parseDecimalNumber(value, options, enforceGroupSize);\n    };\n  };\n\n  module.exports.factoryReset();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/parse-decimal-number/dist/parse-decimal-number.js?");

/***/ })

}]);