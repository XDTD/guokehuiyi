(window["canvasWebpackJsonp"] = window["canvasWebpackJsonp"] || []).push([[75],{

/***/ "WROG":
/*!***************************************************!*\
  !*** ./ui/shared/instui-bindings/react/Select.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CanvasSelect; });\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutProperties */ \"Ff2n\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"q1tI\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"17x9\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ \"LvDl\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var i18n_app_shared_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! i18n!app_shared_components */ \"HQFi\");\n/* harmony import */ var _instructure_ui_select__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @instructure/ui-select */ \"U+cR\");\n/* harmony import */ var _instructure_ui_alerts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @instructure/ui-alerts */ \"spba\");\n/* harmony import */ var _instructure_ui_react_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @instructure/ui-react-utils */ \"e2P+\");\n\nconst _excluded = [\"id\", \"label\", \"value\", \"onChange\", \"children\", \"noOptionsLabel\"],\n      _excluded2 = [\"id\", \"children\"],\n      _excluded3 = [\"id\", \"label\"];\n\n/*\n * Copyright (C) 2019 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/*\n---\n  CanvasSelect is a wrapper on the new (as of instui 5 or 6 or so) controlled-only Select\n  While CanvasSelect is also controlled-only, it has a simpler api and is almost a drop-in\n  replacement for the old instui Select used throughout canvas at this time. One big difference\n  is the need to pass in an options property rather than rendering <Options> children\n\n  It does not currently support old-Select's allowCustom property\n  (see https://instructure.design/#DeprecatedSelect)\n\n  It only handles single-select. Multi-select will likely have to be in a separate component\n\n  <CanvasSelect\n    id=\"your-id\"\n    label=\"select's label\"\n    value={value}             // should match the ID of the selected option\n    onChange={handleChange}   // function(event, selectedOption)\n    {...otherPropsPassedToTheUnderlyingSelect}  // if you need to (width=\"100%\" is a popular one)\n  >\n    <CanvasSelect.Option key=\"1\" id=\"1\" value=\"1\">one</CanvasSelect.Option>\n    <CanvasSelect.Option key=\"2\" id=\"2\" value=\"2\">two</CanvasSelect.Option>\n    <CanvasSelect.Option key=\"3\" id=\"3\" value=\"3\">three</CanvasSelect.Option>\n  </CanvasSelect>\n---\n*/\n\n\n\n\n\n\n\nconst noOptionsOptionId = '_noOptionsOption'; // CanvasSelectOption and CanvasSelectGroup are components our client can create thru CanvasSelect\n// to pass us our options. They are never rendered themselves, but get transformed into INSTUI's\n// Select.Option and Select.Group on rendering CanvasSelect. See renderChildren below.\n\nfunction CanvasSelectOption() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", null);\n}\n\nCanvasSelectOption.propTypes = {\n  id: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"string\"].isRequired,\n  // eslint-disable-line react/no-unused-prop-types\n  value: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"string\"].isRequired // eslint-disable-line react/no-unused-prop-types\n\n};\n\nfunction CanvasSelectGroup() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", null);\n}\n\nCanvasSelectGroup.propTypes = {\n  label: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"string\"].isRequired // eslint-disable-line react/no-unused-prop-types\n\n};\nclass CanvasSelect extends react__WEBPACK_IMPORTED_MODULE_1___default.a.Component {\n  constructor(props) {\n    super(props);\n    this.backupKey = 0;\n\n    this.handleBlur = _event => {\n      this.setState({\n        highlightedOptionId: null\n      });\n    };\n\n    this.handleShowOptions = () => {\n      this.setState({\n        isShowingOptions: true\n      });\n    };\n\n    this.handleHideOptions = _event => {\n      this.setState(state => {\n        const text = this.getOptionLabelById(state.selectedOptionId);\n        return {\n          isShowingOptions: false,\n          highlightedOptionId: null,\n          inputValue: text,\n          announcement: i18n_app_shared_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t('List collapsed.')\n        };\n      });\n    };\n\n    this.handleHighlightOption = (event, {\n      id\n    }) => {\n      if (id === noOptionsOptionId) return;\n      const text = this.getOptionLabelById(id);\n      const nowOpen = this.state.isShowingOptions ? '' : i18n_app_shared_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t('List expanded.');\n      const inputValue = event.type === 'keydown' ? text : this.state.inputValue;\n      this.setState({\n        highlightedOptionId: id,\n        inputValue,\n        announcement: `${text} ${nowOpen}`\n      });\n    };\n\n    this.handleSelectOption = (event, {\n      id\n    }) => {\n      if (id === noOptionsOptionId) {\n        this.setState({\n          isShowingOptions: false,\n          announcement: i18n_app_shared_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t('List collapsed')\n        });\n      } else {\n        const text = this.getOptionLabelById(id);\n        const prevSelection = this.state.selectedOptionId;\n        this.setState({\n          selectedOptionId: id,\n          inputValue: text,\n          isShowingOptions: false,\n          announcement: i18n_app_shared_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t('%{option} selected. List collapsed.', {\n            option: text\n          })\n        });\n        const option = this.getOptionByFieldValue('id', id);\n\n        if (prevSelection !== id) {\n          this.props.onChange(event, option.props.value);\n        }\n      }\n    };\n\n    const _option = this.getOptionByFieldValue('value', props.value);\n\n    this.state = {\n      inputValue: _option ? _option.props.children : '',\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      selectedOptionId: _option ? _option.props.id : null,\n      announcement: null\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value || !Object(lodash__WEBPACK_IMPORTED_MODULE_3__[\"isEqual\"])(this.props.children, prevProps.children)) {\n      const option = this.getOptionByFieldValue('value', this.props.value); // eslint-disable-next-line react/no-did-update-set-state\n\n      this.setState({\n        inputValue: option ? option.props.children : '',\n        selectedOptionId: option ? option.props.id : ''\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          label = _this$props.label,\n          value = _this$props.value,\n          onChange = _this$props.onChange,\n          children = _this$props.children,\n          noOptionsLabel = _this$props.noOptionsLabel,\n          otherProps = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_this$props, _excluded);\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_instructure_ui_select__WEBPACK_IMPORTED_MODULE_5__[\"Select\"], Object.assign({\n      id: id,\n      renderLabel: () => label,\n      assistiveText: i18n_app_shared_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].t('Use arrow keys to navigate options.'),\n      inputValue: this.state.inputValue,\n      isShowingOptions: this.state.isShowingOptions,\n      onBlur: this.handleBlur,\n      onRequestShowOptions: this.handleShowOptions,\n      onRequestHideOptions: this.handleHideOptions,\n      onRequestHighlightOption: this.handleHighlightOption,\n      onRequestSelectOption: this.handleSelectOption\n    }, otherProps), this.renderChildren(children)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_instructure_ui_alerts__WEBPACK_IMPORTED_MODULE_6__[\"Alert\"], {\n      liveRegion: () => document.getElementById('flash_screenreader_holder'),\n      liveRegionPoliteness: \"assertive\",\n      screenReaderOnly: true\n    }, this.state.announcement));\n  }\n\n  renderChildren(children) {\n    if (!Array.isArray(children)) {\n      // children is 1 child\n      if (Object(_instructure_ui_react_utils__WEBPACK_IMPORTED_MODULE_7__[\"matchComponentTypes\"])(children, [CanvasSelectOption])) {\n        return this.renderOption(children);\n      } else if (Object(_instructure_ui_react_utils__WEBPACK_IMPORTED_MODULE_7__[\"matchComponentTypes\"])(children, [CanvasSelectGroup])) {\n        return this.renderGroup(children);\n      } else {\n        return this.renderNoOptionsOption();\n      }\n    }\n\n    const opts = children.map(child => {\n      if (Array.isArray(child)) {\n        return this.renderChildren(child);\n      } else if (Object(_instructure_ui_react_utils__WEBPACK_IMPORTED_MODULE_7__[\"matchComponentTypes\"])(child, [CanvasSelectOption])) {\n        return this.renderOption(child);\n      } else if (Object(_instructure_ui_react_utils__WEBPACK_IMPORTED_MODULE_7__[\"matchComponentTypes\"])(child, [CanvasSelectGroup])) {\n        return this.renderGroup(child);\n      }\n\n      return null;\n    }).filter(child => !!child); // instui Select blows up on undefined options\n\n    if (opts.length === 0) {\n      return this.renderNoOptionsOption();\n    }\n\n    return opts;\n  }\n\n  renderOption(option) {\n    const _option$props = option.props,\n          id = _option$props.id,\n          children = _option$props.children,\n          optionProps = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_option$props, _excluded2);\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_instructure_ui_select__WEBPACK_IMPORTED_MODULE_5__[\"Select\"].Option, Object.assign({\n      id: id,\n      key: option.key || id || ++this.backupKey,\n      isHighlighted: id === this.state.highlightedOptionId,\n      isSelected: id === this.state.selectedOptionId\n    }, optionProps), children);\n  }\n\n  renderGroup(group) {\n    const _group$props = group.props,\n          id = _group$props.id,\n          label = _group$props.label,\n          otherProps = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_group$props, _excluded3);\n\n    const children = Object(lodash__WEBPACK_IMPORTED_MODULE_3__[\"compact\"])(Object(lodash__WEBPACK_IMPORTED_MODULE_3__[\"castArray\"])(group.props.children));\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_instructure_ui_select__WEBPACK_IMPORTED_MODULE_5__[\"Select\"].Group, Object.assign({\n      \"data-testid\": `Group:${label}`,\n      renderLabel: () => label,\n      key: group.key || id || ++this.backupKey\n    }, otherProps), children.map(c => this.renderOption(c)));\n  }\n\n  renderNoOptionsOption() {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_instructure_ui_select__WEBPACK_IMPORTED_MODULE_5__[\"Select\"].Option, {\n      id: noOptionsOptionId,\n      isHighlighted: false,\n      isSelected: false\n    }, this.props.noOptionsLabel);\n  }\n\n  getOptionLabelById(oid) {\n    const option = this.getOptionByFieldValue('id', oid);\n    return option ? option.props.children : '';\n  }\n\n  getOptionByFieldValue(field, value, options = Object(lodash__WEBPACK_IMPORTED_MODULE_3__[\"castArray\"])(this.props.children)) {\n    if (!this.props.children) return null;\n    let foundOpt = null;\n\n    for (let i = 0; i < options.length; ++i) {\n      const o = options[i];\n\n      if (Array.isArray(o)) {\n        foundOpt = this.getOptionByFieldValue(field, value, o);\n      } else if (Object(_instructure_ui_react_utils__WEBPACK_IMPORTED_MODULE_7__[\"matchComponentTypes\"])(o, [CanvasSelectOption])) {\n        if (o.props[field] === value) {\n          foundOpt = o;\n        }\n      } else if (Object(_instructure_ui_react_utils__WEBPACK_IMPORTED_MODULE_7__[\"matchComponentTypes\"])(o, [CanvasSelectGroup])) {\n        const groupOptions = Object(lodash__WEBPACK_IMPORTED_MODULE_3__[\"castArray\"])(o.props.children);\n\n        for (let j = 0; j < groupOptions.length; ++j) {\n          const o2 = groupOptions[j];\n\n          if (o2.props[field] === value) {\n            foundOpt = o2;\n            break;\n          }\n        }\n      }\n\n      if (foundOpt) {\n        break;\n      }\n    }\n\n    return foundOpt;\n  }\n\n}\nCanvasSelect.Option = CanvasSelectOption;\nCanvasSelect.Group = CanvasSelectGroup;\nCanvasSelect.propTypes = {\n  id: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"string\"],\n  label: Object(prop_types__WEBPACK_IMPORTED_MODULE_2__[\"oneOfType\"])([prop_types__WEBPACK_IMPORTED_MODULE_2__[\"node\"], prop_types__WEBPACK_IMPORTED_MODULE_2__[\"func\"]]).isRequired,\n  value: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"string\"],\n  onChange: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"func\"].isRequired,\n  children: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"node\"],\n  noOptionsLabel: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"string\"] // unselectable option to display when there are no options\n\n};\nCanvasSelect.defaultProps = {\n  noOptionsLabel: '---'\n};\n\n//# sourceURL=webpack:///./ui/shared/instui-bindings/react/Select.js?");

/***/ })

}]);