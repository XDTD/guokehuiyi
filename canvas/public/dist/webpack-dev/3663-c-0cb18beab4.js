(window["canvasWebpackJsonp"] = window["canvasWebpackJsonp"] || []).push([[3663],{

/***/ "3hzt":
/*!*********************************************************!*\
  !*** ./ui/shared/rce/jst/EquationEditorView.handlebars ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var handlebars_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! handlebars/runtime */ \"3O+N\");\n/* harmony import */ var handlebars_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(handlebars_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var i18n_tinymce_equation_editor_view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! i18n!tinymce.equation_editor_view */ \"QKdO\");\n/* harmony import */ var _canvas_handlebars_helpers_index_coffee__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @canvas/handlebars-helpers/index.coffee */ \"BGrI\");\n/* harmony import */ var _canvas_brandable_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @canvas/brandable-css */ \"dbrX\");\n\n    \n    var Handlebars = handlebars_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.default;\n    \n\n\n    var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\n    var name = '/home/td/workspace/canvas/ui/shared/rce/jst/EquationEditorView';\n    templates[name] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div id=\\\"mathquill-view\\\">\\n  <p class=\\\"screenreader-only\\\" role=\\\"alert\\\">\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_editor_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.screen_reader_tip\", \"Screen reader users: The most accessible way to use this editor is to switch to the advanced view, and then either enter LaTeX directly, or use the toolbar to assist you in doing so. The link to switch to the advanced view can be found near the end of this dialog, directly before the edit field.\", options) : helperMissing.call(depth0, \"t\", \"#editor.screen_reader_tip\", \"Screen reader users: The most accessible way to use this editor is to switch to the advanced view, and then either enter LaTeX directly, or use the toolbar to assist you in doing so. The link to switch to the advanced view can be found near the end of this dialog, directly before the edit field.\", options)))\n    + \"</p>\\n  <div class='mathquill-toolbar'>\\n  </div>\\n  <div class='math-toggle'>\\n    <a href=\\\"#\\\" class='math-toggle-link'>\\n      \"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_editor_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.switch_to_mathquill\", \"Switch View to Advanced\", options) : helperMissing.call(depth0, \"t\", \"#editor.switch_to_mathquill\", \"Switch View to Advanced\", options)))\n    + \"\\n    </a>\\n  </div>\\n  <div id=\\\"mathquill-container\\\">\\n  </div>\\n</div>\\n<div id=\\\"mathjax-view\\\">\\n  <div class='mathquill-toolbar'>\\n  </div>\\n  <div class='math-toggle'>\\n    <a href=\\\"#\\\" class='math-toggle-link'>\\n      \"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_editor_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.switch_to_mathjax\", \"Switch View to Basic\", options) : helperMissing.call(depth0, \"t\", \"#editor.switch_to_mathjax\", \"Switch View to Basic\", options)))\n    + \"\\n    </a>\\n  </div>\\n  <textarea id='mathjax-editor'\\n    aria-label=\\\"\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_editor_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.mathjax_text_entry_field_label\", \"Enter the equation as LaTeX.\", options) : helperMissing.call(depth0, \"t\", \"#editor.mathjax_text_entry_field_label\", \"Enter the equation as LaTeX.\", options)))\n    + \"\\\"\\n  >\\n  </textarea>\\n  <br/>\\n  <span id='mathjax-preview'>\\n  </span>\\n  <div id=\\\"mathjax-message\\\">\\n  </div>\\n</div>\\n\";\n  return buffer;\n  });\n    ;\n    \n    \n\n    _canvas_brandable_css__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadStylesheetForJST({\n      id: '64',\n      bundle: 'jst/tinymce/EquationEditorView'\n    });\n  ;\n    /* harmony default export */ __webpack_exports__[\"default\"] = (templates[name]);\n  \n\n//# sourceURL=webpack:///./ui/shared/rce/jst/EquationEditorView.handlebars?");

/***/ }),

/***/ "EzVb":
/*!**************************************!*\
  !*** ./ui/shared/mathquill/index.js ***!
  \**************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var i18n_mathquill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! i18n!mathquill */ \"nkPg\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"ouhR\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var html_escape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! html-escape */ \"gI0r\");\n/*\n * Copyright (C) 2011 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Instructure tweaks/additions:\n *  * wysiwyg toolbar and misc fixes, i.e. https://github.com/jenseng/mathquill/tree/fancyeditor2\n *  * AMD-ified\n *  * I18n'd toolbar tabs\n */\n// xsslint jqueryObject.identifier contents textareaSpan\n// xsslint jqueryObject.property jQ\n\n/**\n * Copyleft 2010-2011 Jay and Han (laughinghan@gmail.com)\n *   under the GNU Lesser General Public License\n *     http://www.gnu.org/licenses/lgpl.html\n * Project Website: http://mathquill.com\n */\n\n\n\n\nvar undefined,\n    _,\n    //temp variable of prototypes\njQueryDataKey = '[[mathquill internal data]]',\n    min = Math.min,\n    max = Math.max;\n/*************************************************\n * Abstract base classes of blocks and commands.\n ************************************************/\n\n/**\n * MathElement is the core Math DOM tree node prototype.\n * Both MathBlock's and MathCommand's descend from it.\n */\n\n\nfunction MathElement() {}\n\n_ = MathElement.prototype;\n_.prev = 0;\n_.next = 0;\n_.parent = 0;\n_.firstChild = 0;\n_.lastChild = 0;\n\n_.eachChild = function (fn) {\n  for (var child = this.firstChild; child; child = child.next) if (fn.call(this, child) === false) break;\n\n  return this;\n};\n\n_.foldChildren = function (fold, fn) {\n  this.eachChild(function (child) {\n    fold = fn.call(this, fold, child);\n  });\n  return fold;\n};\n\n_.keydown = function (e) {\n  return this.parent.keydown(e);\n};\n\n_.textInput = function (ch) {\n  return this.parent.textInput(ch);\n};\n/**\n * Commands and operators, like subscripts, exponents, or fractions.\n * Descendant commands are organized into blocks.\n * May be passed a MathFragment that's being replaced.\n */\n\n\nfunction MathCommand() {}\n\n_ = MathCommand.prototype = new MathElement();\n\n_.init = function (cmd, html_template, text_template, replacedFragment) {\n  var self = this; // minifier optimization\n\n  if (cmd) self.cmd = cmd;\n  if (html_template) self.html_template = html_template;\n  if (text_template) self.text_template = text_template;\n  self.jQ = jquery__WEBPACK_IMPORTED_MODULE_1___default()(self.html_template[0]).data(jQueryDataKey, {\n    cmd: self\n  });\n  self.initBlocks(replacedFragment);\n};\n\n_.initBlocks = function (replacedFragment) {\n  var self = this; //single-block commands\n\n  if (self.html_template.length === 1) {\n    self.firstChild = self.lastChild = self.jQ.data(jQueryDataKey).block = replacedFragment && replacedFragment.blockify() || new MathBlock();\n    self.firstChild.parent = self;\n    self.firstChild.jQ = self.jQ.append(self.firstChild.jQ);\n    return;\n  } //otherwise, the succeeding elements of html_template should be child blocks\n\n\n  var newBlock,\n      prev,\n      num_blocks = self.html_template.length;\n  this.firstChild = newBlock = prev = replacedFragment && replacedFragment.blockify() || new MathBlock();\n  newBlock.parent = self;\n  newBlock.jQ = jquery__WEBPACK_IMPORTED_MODULE_1___default()(self.html_template[1]).data(jQueryDataKey, {\n    block: newBlock\n  }).append(newBlock.jQ).appendTo(self.jQ);\n  newBlock.blur();\n\n  for (var i = 2; i < num_blocks; i += 1) {\n    newBlock = new MathBlock();\n    newBlock.parent = self;\n    newBlock.prev = prev;\n    prev.next = newBlock;\n    prev = newBlock;\n    newBlock.jQ = jquery__WEBPACK_IMPORTED_MODULE_1___default()(self.html_template[i]).data(jQueryDataKey, {\n      block: newBlock\n    }).appendTo(self.jQ);\n    newBlock.blur();\n  }\n\n  self.lastChild = newBlock;\n};\n\n_.latex = function () {\n  return this.foldChildren(this.cmd, (latex, child) => latex + '{' + (child.latex() || ' ') + '}');\n};\n\n_.text_template = [''];\n\n_.text = function () {\n  var i = 0;\n  return this.foldChildren(this.text_template[i], function (text, child) {\n    i += 1;\n    var child_text = child.text();\n    if (text && this.text_template[i] === '(' && child_text[0] === '(' && child_text.slice(-1) === ')') return text + child_text.slice(1, -1) + this.text_template[i];\n    return text + child.text() + (this.text_template[i] || '');\n  });\n};\n\n_.insertAt = function (cursor) {\n  var cmd = this;\n  cmd.parent = cursor.parent;\n  cmd.next = cursor.next;\n  cmd.prev = cursor.prev;\n  if (cursor.prev) cursor.prev.next = cmd;else cursor.parent.firstChild = cmd;\n  if (cursor.next) cursor.next.prev = cmd;else cursor.parent.lastChild = cmd;\n  cursor.prev = cmd;\n  cmd.jQ.insertBefore(cursor.jQ); //adjust context-sensitive spacing\n\n  cmd.respace();\n  if (cmd.next) cmd.next.respace();\n  if (cmd.prev) cmd.prev.respace();\n  cmd.placeCursor(cursor);\n  cursor.redraw(); //this will soon be cmd.trigger('redraw')\n};\n\n_.respace = jquery__WEBPACK_IMPORTED_MODULE_1___default.a.noop; //placeholder for context-sensitive spacing\n\n_.placeCursor = function (cursor) {\n  //append the cursor to the first empty child, or if none empty, the last one\n  cursor.appendTo(this.foldChildren(this.firstChild, (prev, child) => prev.isEmpty() ? prev : child));\n};\n\n_.isEmpty = function () {\n  return this.foldChildren(true, (isEmpty, child) => isEmpty && child.isEmpty());\n};\n\n_.remove = function () {\n  var self = this,\n      prev = self.prev,\n      next = self.next,\n      parent = self.parent;\n  if (prev) prev.next = next;else parent.firstChild = next;\n  if (next) next.prev = prev;else parent.lastChild = prev;\n  self.jQ.remove();\n  return self;\n};\n/**\n * Lightweight command without blocks or children.\n */\n\n\nfunction Symbol(cmd, html, text) {\n  this.init(cmd, [html], [text || (cmd && cmd.length > 1 ? cmd.slice(1) : cmd)]);\n}\n\n_ = Symbol.prototype = new MathCommand();\n_.initBlocks = jquery__WEBPACK_IMPORTED_MODULE_1___default.a.noop;\n\n_.latex = function () {\n  return this.cmd;\n};\n\n_.text = function () {\n  return this.text_template;\n};\n\n_.placeCursor = jquery__WEBPACK_IMPORTED_MODULE_1___default.a.noop;\n\n_.isEmpty = function () {\n  return true;\n};\n/**\n * Children and parent of MathCommand's. Basically partitions all the\n * symbols and operators that descend (in the Math DOM tree) from\n * ancestor operators.\n */\n\n\nfunction MathBlock() {}\n\n_ = MathBlock.prototype = new MathElement();\n\n_.latex = function () {\n  return this.foldChildren('', (latex, child) => latex + child.latex());\n};\n\n_.text = function () {\n  return this.firstChild === this.lastChild ? this.firstChild.text() : this.foldChildren('(', (text, child) => text + child.text()) + ')';\n};\n\n_.isEmpty = function () {\n  return this.firstChild === 0 && this.lastChild === 0;\n};\n\n_.focus = function () {\n  this.jQ.addClass('hasCursor');\n  if (this.isEmpty()) this.jQ.removeClass('empty');\n  return this;\n};\n\n_.blur = function () {\n  this.jQ.removeClass('hasCursor');\n  if (this.isEmpty()) this.jQ.addClass('empty');\n  return this;\n};\n/**\n * An entity outside the Math DOM tree with one-way pointers (so it's only\n * a \"view\" of part of the tree, not an actual node/entity in the tree)\n * that delimit a list of symbols and operators.\n */\n\n\nfunction MathFragment(parent, prev, next) {\n  if (!arguments.length) return;\n  var self = this;\n  self.parent = parent;\n  self.prev = prev || 0; //so you can do 'new MathFragment(block)' without\n\n  self.next = next || 0; //ending up with this.prev or this.next === undefined\n\n  self.jQinit(self.fold(jquery__WEBPACK_IMPORTED_MODULE_1___default()(), (jQ, child) => child.jQ.add(jQ)));\n}\n\n_ = MathFragment.prototype;\n_.remove = MathCommand.prototype.remove;\n\n_.jQinit = function (children) {\n  this.jQ = children;\n};\n\n_.each = function (fn) {\n  for (var el = this.prev.next || this.parent.firstChild; el !== this.next; el = el.next) if (fn.call(this, el) === false) break;\n\n  return this;\n};\n\n_.fold = function (fold, fn) {\n  this.each(function (el) {\n    fold = fn.call(this, fold, el);\n  });\n  return fold;\n};\n\n_.latex = function () {\n  return this.fold('', (latex, el) => latex + el.latex());\n};\n\n_.blockify = function () {\n  var self = this,\n      prev = self.prev,\n      next = self.next,\n      parent = self.parent,\n      newBlock = new MathBlock(),\n      newFirstChild = newBlock.firstChild = prev.next || parent.firstChild,\n      newLastChild = newBlock.lastChild = next.prev || parent.lastChild;\n  if (prev) prev.next = next;else parent.firstChild = next;\n  if (next) next.prev = prev;else parent.lastChild = prev;\n  newFirstChild.prev = self.prev = 0;\n  newLastChild.next = self.next = 0;\n  self.parent = newBlock;\n  self.each(el => {\n    el.parent = newBlock;\n  });\n  newBlock.jQ = self.jQ;\n  return newBlock;\n};\n/*********************************************\n * Root math elements with event delegation.\n ********************************************/\n\n\nfunction createRoot(jQ, root, textbox, editable, include_toolbar) {\n  var contents = jQ.contents().detach();\n  if (!textbox) jQ.addClass('mathquill-rendered-math');\n  root.jQ = jQ.data(jQueryDataKey, {\n    block: root,\n    revert: function () {\n      jQ.empty().unbind('.mathquill').removeClass('mathquill-rendered-math mathquill-editable mathquill-textbox mathquill-editor').append(contents);\n    }\n  });\n  var cursor = root.cursor = new Cursor(root);\n  root.renderLatex(contents.text()); //textarea stuff\n\n  var textareaSpan = root.textarea = jquery__WEBPACK_IMPORTED_MODULE_1___default()('<span class=\"textarea\"><textarea></textarea></span>'),\n      textarea = textareaSpan.children();\n  if (include_toolbar) addToolbar(root, jQ);\n  var textareaSelectionTimeout;\n\n  root.selectionChanged = function () {\n    if (textareaSelectionTimeout === void 0) textareaSelectionTimeout = setTimeout(setTextareaSelection);\n    forceIERedraw(jQ[0]);\n  };\n\n  function setTextareaSelection() {\n    textareaSelectionTimeout = void 0;\n    var latex = cursor.selection ? '$' + cursor.selection.latex() + '$' : '';\n    textarea.val(latex);\n\n    if (latex) {\n      if (textarea[0].select) textarea[0].select();else if (document.selection) {\n        var range = textarea[0].createTextRange();\n        range.expand('textedit');\n        range.select();\n      }\n    }\n  }\n\n  ; //prevent native selection except textarea\n\n  jQ.bind('selectstart.mathquill', e => {\n    if (e.target !== textarea[0]) e.preventDefault();\n    e.stopPropagation();\n  }); //drag-to-select event handling\n\n  var anticursor,\n      blink = cursor.blink;\n  jQ.bind('mousedown.mathquill', e => {\n    cursor.blink = jquery__WEBPACK_IMPORTED_MODULE_1___default.a.noop;\n    cursor.seek(jquery__WEBPACK_IMPORTED_MODULE_1___default()(e.target), e.pageX, e.pageY);\n    anticursor = new MathFragment(cursor.parent, cursor.prev, cursor.next);\n    if (!editable) jQ.prepend(textareaSpan);\n    jQ.mousemove(mousemove);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).mousemove(docmousemove).mouseup(mouseup);\n    e.stopPropagation();\n  });\n\n  function mousemove(e) {\n    cursor.seek(jquery__WEBPACK_IMPORTED_MODULE_1___default()(e.target), e.pageX, e.pageY);\n    if (cursor.prev !== anticursor.prev || cursor.parent !== anticursor.parent) cursor.selectFrom(anticursor);\n    return false;\n  }\n\n  function docmousemove(e) {\n    delete e.target;\n    return mousemove(e);\n  }\n\n  function mouseup(e) {\n    anticursor = void 0;\n    cursor.blink = blink;\n\n    if (!cursor.selection) {\n      if (editable) cursor.show();else textareaSpan.detach();\n    }\n\n    jQ.unbind('mousemove', mousemove);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).unbind('mousemove', docmousemove).unbind('mouseup', mouseup);\n  }\n\n  if (!editable) {\n    jQ.bind('cut paste', false).bind('copy', setTextareaSelection).prepend('<span class=\"selectable\">$' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(root.latex()) + '$</span>');\n    textarea.blur(() => {\n      cursor.clearSelection();\n      setTimeout(function detach() {\n        textareaSpan.detach();\n      }); //detaching during blur explodes in WebKit\n    });\n    return;\n  }\n\n  jQ.prepend(textareaSpan); //root CSS classes\n\n  jQ.addClass('mathquill-editable');\n  if (textbox) jQ.addClass('mathquill-textbox'); //focus and blur handling\n\n  textarea.focus(e => {\n    if (!cursor.parent) cursor.appendTo(root);\n    cursor.parent.jQ.addClass('hasCursor');\n\n    if (cursor.selection) {\n      cursor.selection.jQ.removeClass('blur');\n      setTimeout(root.selectionChanged); //select textarea after focus\n    } else cursor.show();\n\n    e.stopPropagation();\n  }).blur(e => {\n    cursor.hide().parent.blur();\n    if (cursor.selection) cursor.selection.jQ.addClass('blur');\n    e.stopPropagation();\n  });\n  jQ.bind('focus.mathquill blur.mathquill', e => {\n    textarea.trigger(e);\n  }).bind('mousedown.mathquill', () => {\n    setTimeout(focus);\n  }).bind('click.mathquill', focus) //stupid Mobile Safari\n  .blur();\n\n  function focus() {\n    textarea.focus();\n  } //clipboard event handling\n\n\n  jQ.bind('cut', e => {\n    setTextareaSelection();\n    if (cursor.selection) setTimeout(() => {\n      cursor.deleteSelection();\n      cursor.redraw();\n    });\n    e.stopPropagation();\n  }).bind('copy', e => {\n    setTextareaSelection();\n    skipTextInput = true;\n    e.stopPropagation();\n  }).bind('paste', e => {\n    skipTextInput = true;\n    setTimeout(paste);\n    e.stopPropagation();\n  });\n\n  function paste() {\n    //FIXME HACK the parser in RootTextBlock needs to be moved to\n    //Cursor::writeLatex or something so this'll work with MathQuill textboxes\n    var latex = textarea.val();\n    if (latex.slice(0, 1) === '$' && latex.slice(-1) === '$') latex = latex.slice(1, -1);else if (!latex.match(/^\\\\/)) // make it text if it doesn't look like latex\n      latex = '\\\\text{' + latex + '}';\n    cursor.writeLatex(latex).show();\n    textarea.val('');\n  } //keyboard events and text input, see Wiki page \"Keyboard Events\"\n\n\n  var lastKeydn,\n      lastKeydnHappened,\n      lastKeypressWhich,\n      skipTextInput = false;\n  jQ.bind('keydown.mathquill', e => {\n    lastKeydn = e;\n    lastKeydnHappened = true;\n    if (cursor.parent.keydown(e) === false) e.preventDefault();\n  }).bind('keypress.mathquill', e => {\n    if (lastKeydnHappened) lastKeydnHappened = false;else {\n      //there's two ways keypress might be triggered without a keydown happening first:\n      if (lastKeypressWhich !== e.which) //all browsers do that if this textarea is given focus during the keydown of\n        //a different focusable element, i.e. by that element's keydown event handler.\n        //No way of knowing original keydown, so ignore this keypress\n        return;else //some browsers do that when auto-repeating key events, replay the keydown\n        cursor.parent.keydown(lastKeydn);\n    }\n    lastKeypressWhich = e.which;\n    if (textareaSelectionTimeout !== void 0) clearTimeout(textareaSelectionTimeout); //after keypress event, trigger virtual textInput event if text was\n    //input to textarea\n\n    skipTextInput = false;\n    setTimeout(textInput);\n  });\n\n  function textInput() {\n    if (skipTextInput) return;\n    var text = textarea.val();\n\n    if (text) {\n      textarea.val('');\n\n      for (var i = 0; i < text.length; i += 1) {\n        cursor.parent.textInput(text.charAt(i));\n      }\n    } else {\n      if (cursor.selection || textareaSelectionTimeout !== void 0) setTextareaSelection();\n    }\n  }\n}\n\nfunction addToolbar(root, jQ) {\n  // the button groups include most LatexCmds, de-duped and categorized.\n  // functions like \"log\" are excluded, since we have some fu to auto-convert\n  // them as they are typed (i.e. you can just type \"log\", don't need the \\ )\n  var button_tabs = [{\n    name: i18n_mathquill__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('tabs.basic', 'Basic'),\n    example: '+',\n    button_groups: [[\"subscript\", \"supscript\", \"frac\", \"sqrt\", \"nthroot\", \"langle\", \"binomial\", \"vector\", \"f\", \"prime\"], [\"+\", \"-\", \"pm\", \"mp\", \"cdot\", \"=\", \"times\", \"div\", \"ast\"], [\"therefore\", \"because\"], [\"sum\", \"prod\", \"coprod\", \"int\"], [\"N\", \"P\", \"Z\", \"Q\", \"R\", \"C\", \"H\"]]\n  }, {\n    name: i18n_mathquill__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('tabs.greek', 'Greek'),\n    example: 'π',\n    button_groups: [[\"alpha\", \"beta\", \"gamma\", \"delta\", \"epsilon\", \"zeta\", \"eta\", \"theta\", \"iota\", \"kappa\", \"lambda\", \"mu\", \"nu\", \"xi\", \"pi\", \"rho\", \"sigma\", \"tau\", \"upsilon\", \"phi\", \"chi\", \"psi\", \"omega\"], [\"digamma\", \"varepsilon\", \"vartheta\", \"varkappa\", \"varpi\", \"varrho\", \"varsigma\", \"varphi\"], [\"Gamma\", \"Delta\", \"Theta\", \"Lambda\", \"Xi\", \"Pi\", \"Sigma\", \"Upsilon\", \"Phi\", \"Psi\", \"Omega\"]]\n  }, {\n    name: i18n_mathquill__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('tabs.operators', 'Operators'),\n    example: '⊕',\n    button_groups: [[\"wedge\", \"vee\", \"cup\", \"cap\", \"diamond\", \"bigtriangleup\", \"ominus\", \"uplus\", \"otimes\", \"oplus\", \"bigtriangledown\", \"sqcap\", \"triangleleft\", \"sqcup\", \"triangleright\", \"odot\", \"bigcirc\", \"dagger\", \"ddagger\", \"wr\", \"amalg\"]]\n  }, {\n    name: i18n_mathquill__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('tabs.relationships', 'Relationships'),\n    example: '≤',\n    button_groups: [[\"<\", \">\", \"equiv\", \"cong\", \"sim\", \"notin\", \"ne\", \"propto\", \"approx\", \"le\", \"ge\", \"in\", \"ni\", \"notni\", \"subset\", \"supset\", \"notsubset\", \"notsupset\", \"subseteq\", \"supseteq\", \"notsubseteq\", \"notsupseteq\", \"models\", \"prec\", \"succ\", \"preceq\", \"succeq\", \"simeq\", \"mid\", \"ll\", \"gg\", \"parallel\", \"bowtie\", \"sqsubset\", \"sqsupset\", \"smile\", \"sqsubseteq\", \"sqsupseteq\", \"doteq\", \"frown\", \"vdash\", \"dashv\", \"exists\", \"varnothing\"]]\n  }, {\n    name: i18n_mathquill__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('tabs.arrows', 'Arrows'),\n    example: '⇔',\n    button_groups: [[\"longleftarrow\", \"longrightarrow\", \"Longleftarrow\", \"Longrightarrow\", \"longleftrightarrow\", \"updownarrow\", \"Longleftrightarrow\", \"Updownarrow\", \"mapsto\", \"nearrow\", \"hookleftarrow\", \"hookrightarrow\", \"searrow\", \"leftharpoonup\", \"rightharpoonup\", \"swarrow\", \"leftharpoondown\", \"rightharpoondown\", \"nwarrow\", \"downarrow\", \"Downarrow\", \"uparrow\", \"Uparrow\", \"rightarrow\", \"Rightarrow\", \"leftarrow\", \"lArr\", \"leftrightarrow\", \"Leftrightarrow\"]]\n  }, {\n    name: i18n_mathquill__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('tabs.delimiters', 'Delimiters'),\n    example: '{',\n    button_groups: [[\"lfloor\", \"rfloor\", \"lceil\", \"rceil\", \"slash\", \"lbrace\", \"rbrace\"]]\n  }, {\n    name: i18n_mathquill__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('tabs.miscellaneous', 'Misc'),\n    example: '∞',\n    button_groups: [[\"forall\", \"ldots\", \"cdots\", \"vdots\", \"ddots\", \"surd\", \"triangle\", \"ell\", \"top\", \"flat\", \"natural\", \"sharp\", \"wp\", \"bot\", \"clubsuit\", \"diamondsuit\", \"heartsuit\", \"spadesuit\", \"caret\", \"underscore\", \"backslash\", \"vert\", \"perp\", \"nabla\", \"hbar\", \"AA\", \"circ\", \"bullet\", \"setminus\", \"neg\", \"dots\", \"Re\", \"Im\", \"partial\", \"infty\", \"aleph\", \"deg\", \"angle\"]]\n  }]; //some html_templates aren't very pretty/useful, so we override them.\n\n  var html_template_overrides = {\n    binomial: '<span style=\"font-size: 0.48em\"><span class=\"paren\" style=\"font-size: 2.087912087912088em; \">(</span><span class=\"array\"><span><var>n</var></span><span><var>m</var></span></span><span class=\"paren\" style=\"font-size: 2.087912087912088em; \">)</span></span>',\n    frac: '<span style=\"font-size: 0.55em; vertical-align: middle\" class=\"fraction\"><span class=\"numerator\"><var>n</var></span><span class=\"denominator\"><var>m</var></span><span style=\"width:0\"></span></span>',\n    sqrt: '<span class=\"block\"><span class=\"sqrt-prefix\">&radic;</span><span class=\"sqrt-stem\">&nbsp;</span></span>',\n    nthroot: '<span style=\"font-size: 0.7em\"><sup class=\"nthroot\"><var>n</var></sup><span class=\"block\"><span class=\"sqrt-prefix\">&radic;</span><span class=\"sqrt-stem\">&nbsp;</span></span></span>',\n    supscript: '<sup style=\"font-size: 0.6em\">sup</sup>',\n    subscript: '<sub style=\"font-size: 0.6em; line-height: 3.5;\">sub</sub>',\n    vector: '<span class=\"array\" style=\"vertical-align: middle; font-size: 0.4em; line-height: 0.9em\"><span>1</span><span>2</span><span>3</span></span>'\n  };\n  var tabs = [];\n  var panes = [];\n  jquery__WEBPACK_IMPORTED_MODULE_1___default.a.each(button_tabs, (index, tab) => {\n    tabs.push('<li><a href=\"#' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tab.name) + '_tab\" role=\"tab\" tabindex=\"-1\" aria-controls=\"' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tab.name) + '_tab\">' + '  <span class=\"mathquill-rendered-math\">' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tab.example) + '</span>' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tab.name) + '</a></li>');\n    var buttons = [];\n    jquery__WEBPACK_IMPORTED_MODULE_1___default.a.each(tab.button_groups, (index, group) => {\n      jquery__WEBPACK_IMPORTED_MODULE_1___default.a.each(group, (index, cmd) => {\n        var obj = new LatexCmds[cmd](void 0, cmd);\n        buttons.push('<li><a class=\"mathquill-rendered-math\" href=\"#\" title=\"' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cmd.match(/^[a-z]+$/i) ? '\\\\' + cmd : cmd) + '\">' + jquery__WEBPACK_IMPORTED_MODULE_1___default.a.raw(html_template_overrides[cmd] ? html_template_overrides[cmd] : '<span style=\"line-height: 1.5em\">' + jquery__WEBPACK_IMPORTED_MODULE_1___default.a.raw(obj.html_template.join('')) + '</span>') + '</a></li>');\n      });\n      buttons.push('<li class=\"mathquill-button-spacer\"></li>');\n    });\n    panes.push('<div class=\"mathquill-tab-pane\" id=\"' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tab.name) + '_tab\" role=\"tabpanel\"><ul>' + jquery__WEBPACK_IMPORTED_MODULE_1___default.a.raw(buttons.join('')) + '</ul></div>');\n  });\n  root.toolbar = jquery__WEBPACK_IMPORTED_MODULE_1___default()('#mathquill-view .mathquill-toolbar').html('<ul class=\"mathquill-tab-bar\" role=\"tablist\">' + jquery__WEBPACK_IMPORTED_MODULE_1___default.a.raw(tabs.join('')) + '</ul><div class=\"mathquill-toolbar-panes\">' + jquery__WEBPACK_IMPORTED_MODULE_1___default.a.raw(panes.join('')) + '</div>');\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()('#mathquill-view .mathquill-tab-bar li a').click(function (e) {\n    e.preventDefault();\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()('#mathquill-view .mathquill-tab-bar li').removeClass('mathquill-tab-selected').find('a').attr('tabindex', '-1').attr('aria-selected', 'false');\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()('#mathquill-view .mathquill-tab-pane').removeClass('mathquill-tab-pane-selected');\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr('tabindex', '0').attr('aria-selected', 'true').focus().parent().addClass('mathquill-tab-selected');\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this.getAttribute('href')).addClass('mathquill-tab-pane-selected');\n  }).keydown(function (e) {\n    var direction, listIndex, $tabLinks;\n\n    switch (e.keyCode) {\n      case 37:\n        direction = 'l';\n        break;\n\n      case 39:\n        direction = 'r';\n        break;\n\n      default:\n        return true;\n    }\n\n    e.preventDefault();\n    $tabLinks = jquery__WEBPACK_IMPORTED_MODULE_1___default()('#mathquill-view .mathquill-tab-bar li a');\n    listIndex = $tabLinks.index(this);\n\n    if (listIndex === $tabLinks.length - 1 && direction === 'r') {\n      listIndex = -1;\n    }\n\n    direction === 'r' ? listIndex++ : listIndex--;\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()($tabLinks.get(listIndex)).focus().click();\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()('#mathquill-view .mathquill-tab-bar li:first-child a').click();\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()('#mathquill-view a.mathquill-rendered-math').mousedown(e => {\n    e.stopPropagation();\n  }).click(function () {\n    root.cursor.writeLatex(this.title, true);\n    jQ.focus();\n  });\n}\n\nfunction RootMathBlock() {}\n\n_ = RootMathBlock.prototype = new MathBlock();\n\n_.latex = function () {\n  return MathBlock.prototype.latex.call(this).replace(/(\\\\[a-z]+) (?![a-z])/ig, '$1');\n};\n\n_.text = function () {\n  return this.foldChildren('', (text, child) => text + child.text());\n};\n\n_.renderLatex = function (latex) {\n  this.jQ.children().slice(1).remove();\n  this.firstChild = this.lastChild = 0;\n  this.cursor.appendTo(this).writeLatex(latex);\n  this.blur();\n};\n\n_.keydown = function (e) {\n  e.ctrlKey = e.ctrlKey || e.metaKey;\n\n  switch (e.originalEvent && e.originalEvent.keyIdentifier || e.which) {\n    case 8: //backspace\n\n    case 'Backspace':\n    case 'U+0008':\n      if (e.ctrlKey) while (this.cursor.prev || this.cursor.selection) this.cursor.backspace();else this.cursor.backspace();\n      break;\n\n    case 27: //may as well be the same as tab until we figure out what to do with it\n\n    case 'Esc':\n    case 'U+001B':\n    case 9: //tab\n\n    case 'Tab':\n    case 'U+0009':\n      if (e.ctrlKey) break;\n      var parent = this.cursor.parent;\n\n      if (e.shiftKey) {\n        //shift+Tab = go one block left if it exists, else escape left.\n        if (parent === this.cursor.root) //cursor is in root editable, continue default\n          return this.skipTextInput = true;else if (parent.prev) //go one block left\n          this.cursor.appendTo(parent.prev);else //get out of the block\n          this.cursor.insertBefore(parent.parent);\n      } else {\n        //plain Tab = go one block right if it exists, else escape right.\n        if (parent === this.cursor.root) //cursor is in root editable, continue default\n          return this.skipTextInput = true;else if (parent.next) //go one block right\n          this.cursor.prependTo(parent.next);else //get out of the block\n          this.cursor.insertAfter(parent.parent);\n      }\n\n      this.cursor.clearSelection();\n      break;\n\n    case 13: //enter\n\n    case 'Enter':\n      break;\n\n    case 35: //end\n\n    case 'End':\n      if (e.shiftKey) while (this.cursor.next || e.ctrlKey && this.cursor.parent !== this) this.cursor.selectRight();else //move to the end of the root block or the current block.\n        this.cursor.clearSelection().appendTo(e.ctrlKey ? this : this.cursor.parent);\n      break;\n\n    case 36: //home\n\n    case 'Home':\n      if (e.shiftKey) while (this.cursor.prev || e.ctrlKey && this.cursor.parent !== this) this.cursor.selectLeft();else //move to the start of the root block or the current block.\n        this.cursor.clearSelection().prependTo(e.ctrlKey ? this : this.cursor.parent);\n      break;\n\n    case 37: //left\n\n    case 'Left':\n      if (e.ctrlKey) break;\n      if (e.shiftKey) this.cursor.selectLeft();else this.cursor.moveLeft();\n      break;\n\n    case 38: //up\n\n    case 'Up':\n      if (e.ctrlKey) break;\n\n      if (e.shiftKey) {\n        if (this.cursor.prev) while (this.cursor.prev) this.cursor.selectLeft();else this.cursor.selectLeft();\n      } else if (this.cursor.parent.prev) this.cursor.clearSelection().appendTo(this.cursor.parent.prev);else if (this.cursor.prev) this.cursor.clearSelection().prependTo(this.cursor.parent);else if (this.cursor.parent !== this) this.cursor.clearSelection().insertBefore(this.cursor.parent.parent);\n\n      break;\n\n    case 39: //right\n\n    case 'Right':\n      if (e.ctrlKey) break;\n      if (e.shiftKey) this.cursor.selectRight();else this.cursor.moveRight();\n      break;\n\n    case 40: //down\n\n    case 'Down':\n      if (e.ctrlKey) break;\n\n      if (e.shiftKey) {\n        if (this.cursor.next) while (this.cursor.next) this.cursor.selectRight();else this.cursor.selectRight();\n      } else if (this.cursor.parent.next) this.cursor.clearSelection().prependTo(this.cursor.parent.next);else if (this.cursor.next) this.cursor.clearSelection().appendTo(this.cursor.parent);else if (this.cursor.parent !== this) this.cursor.clearSelection().insertAfter(this.cursor.parent.parent);\n\n      break;\n\n    case 46: //delete\n\n    case 'Del':\n    case 'U+007F':\n      if (e.ctrlKey) while (this.cursor.next || this.cursor.selection) this.cursor.deleteForward();else this.cursor.deleteForward();\n      break;\n\n    case 65: //the 'A' key, as in Ctrl+A Select All\n\n    case 'A':\n    case 'U+0041':\n      if (e.ctrlKey && !e.shiftKey && !e.altKey) {\n        if (this !== this.cursor.root) //so not stopPropagation'd at RootMathCommand\n          return this.parent.keydown(e);\n        this.cursor.clearSelection().appendTo(this);\n\n        while (this.cursor.prev) this.cursor.selectLeft();\n\n        break;\n      }\n\n    default:\n      this.skipTextInput = false;\n      return true;\n  }\n\n  this.skipTextInput = true;\n  return false;\n};\n\n_.textInput = function (ch) {\n  if (!this.skipTextInput) this.cursor.write(ch);\n};\n\nfunction RootMathCommand(cursor) {\n  this.init('$');\n  this.firstChild.cursor = cursor;\n\n  this.firstChild.textInput = function (ch) {\n    if (this.skipTextInput) return;\n    if (ch !== '$' || cursor.parent !== this) cursor.write(ch);else if (this.isEmpty()) {\n      cursor.insertAfter(this.parent).backspace().insertNew(new VanillaSymbol('\\\\$', '$')).show();\n    } else if (!cursor.next) cursor.insertAfter(this.parent);else if (!cursor.prev) cursor.insertBefore(this.parent);else cursor.write(ch);\n  };\n}\n\n_ = RootMathCommand.prototype = new MathCommand();\n_.html_template = ['<span class=\"mathquill-rendered-math\"></span>'];\n\n_.initBlocks = function () {\n  this.firstChild = this.lastChild = this.jQ.data(jQueryDataKey).block = new RootMathBlock();\n  this.firstChild.parent = this;\n  this.firstChild.jQ = this.jQ;\n};\n\n_.latex = function () {\n  return '$' + this.firstChild.latex() + '$';\n};\n\nfunction RootTextBlock() {}\n\n_ = RootTextBlock.prototype = new MathBlock();\n\n_.renderLatex = function (latex) {\n  var self = this,\n      cursor = self.cursor;\n  self.jQ.children().slice(1).remove();\n  self.firstChild = self.lastChild = 0;\n  cursor.show().appendTo(self);\n  latex = latex.match(/(?:\\\\\\$|[^$])+|\\$(?:\\\\\\$|[^$])*\\$|\\$(?:\\\\\\$|[^$])*$/g) || '';\n\n  for (var i = 0; i < latex.length; i += 1) {\n    var chunk = latex[i];\n\n    if (chunk[0] === '$') {\n      if (chunk[-1 + chunk.length] === '$' && chunk[-2 + chunk.length] !== '\\\\') chunk = chunk.slice(1, -1);else chunk = chunk.slice(1);\n      var root = new RootMathCommand(cursor);\n      cursor.insertNew(root);\n      root.firstChild.renderLatex(chunk);\n      cursor.show().insertAfter(root);\n    } else {\n      for (var j = 0; j < chunk.length; j += 1) this.cursor.insertNew(new VanillaSymbol(chunk[j]));\n    }\n  }\n};\n\n_.keydown = RootMathBlock.prototype.keydown;\n\n_.textInput = function (ch) {\n  if (this.skipTextInput) return;\n  this.cursor.deleteSelection();\n  if (ch === '$') this.cursor.insertNew(new RootMathCommand(this.cursor));else this.cursor.insertNew(new VanillaSymbol(ch));\n};\n/***************************\n * Commands and Operators.\n **************************/\n\n\nvar CharCmds = {},\n    LatexCmds = {}; //single character commands, LaTeX commands\n\nvar scale,\n    // = function(jQ, x, y) { ... }\n//will use a CSS 2D transform to scale the jQuery-wrapped HTML elements,\n//or the filter matrix transform fallback for IE 5.5-8, or gracefully degrade to\n//increasing the fontSize to match the vertical Y scaling factor.\n//ideas from http://github.com/louisremi/jquery.transform.js\n//see also http://msdn.microsoft.com/en-us/library/ms533014(v=vs.85).aspx\nforceIERedraw = jquery__WEBPACK_IMPORTED_MODULE_1___default.a.noop,\n    div = document.createElement('div'),\n    div_style = div.style,\n    transformPropNames = {\n  transform: 1,\n  WebkitTransform: 1,\n  MozTransform: 1,\n  OTransform: 1,\n  msTransform: 1\n},\n    transformPropName;\n\nfor (var prop in transformPropNames) {\n  if (prop in div_style) {\n    transformPropName = prop;\n    break;\n  }\n}\n\nif (transformPropName) {\n  scale = function (jQ, x, y) {\n    jQ.css(transformPropName, 'scale(' + x + ',' + y + ')');\n  };\n} else if ('filter' in div_style) {\n  //IE 6, 7, & 8 fallback, see https://github.com/laughinghan/mathquill/wiki/Transforms\n  forceIERedraw = function (el) {\n    el.className = el.className;\n  };\n\n  scale = function (jQ, x, y) {\n    //NOTE: assumes y > x\n    x /= 1 + (y - 1) / 2;\n    jQ.addClass('matrixed').css({\n      fontSize: y + 'em',\n      marginTop: '-.1em',\n      filter: 'progid:DXImageTransform.Microsoft' + '.Matrix(M11=' + x + \",SizingMethod='auto expand')\"\n    });\n\n    function calculateMarginRight() {\n      jQ.css('marginRight', (1 + jQ.width()) * (x - 1) / x + 'px');\n    }\n\n    calculateMarginRight();\n    var intervalId = setInterval(calculateMarginRight);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).load(() => {\n      clearTimeout(intervalId);\n      calculateMarginRight();\n    });\n  };\n} else {\n  scale = function (jQ, x, y) {\n    jQ.css('fontSize', y + 'em');\n  };\n}\n\nfunction proto(parent, child) {\n  //shorthand for prototyping\n  child.prototype = parent.prototype;\n  return child;\n}\n\nfunction bind(cons) {\n  //shorthand for binding arguments to constructor\n  var args = Array.prototype.slice.call(arguments, 1);\n  return proto(cons, function () {\n    cons.apply(this, Array.prototype.concat.apply(args, arguments));\n  });\n} //because I miss the <font> tag\n//(that's a joke, I hate this, it's like actively *fighting*\n// separation of presentation and content and everything HTML and CSS\n// are about, but it's an intrinsic problem with WYSIWYG)\n//TODO: WYSIWYM?\n\n\nfunction Style(cmd, html_template, replacedFragment) {\n  this.init(cmd, [html_template], void 0, replacedFragment);\n}\n\nproto(MathCommand, Style); //fonts\n\nLatexCmds.mathrm = bind(Style, '\\\\mathrm', '<span class=\"roman font\"></span>');\nLatexCmds.mathit = bind(Style, '\\\\mathit', '<i class=\"font\"></i>');\nLatexCmds.mathbf = bind(Style, '\\\\mathbf', '<b class=\"font\"></b>');\nLatexCmds.mathsf = bind(Style, '\\\\mathsf', '<span class=\"sans-serif font\"></span>');\nLatexCmds.mathtt = bind(Style, '\\\\mathtt', '<span class=\"monospace font\"></span>'); //text-decoration\n\nLatexCmds.underline = bind(Style, '\\\\underline', '<span class=\"underline\"></span>');\nLatexCmds.overline = LatexCmds.bar = bind(Style, '\\\\overline', '<span class=\"overline\"></span>');\n\nfunction SupSub(cmd, html, text, replacedFragment) {\n  this.init(cmd, [html], [text], replacedFragment);\n}\n\n_ = SupSub.prototype = new MathCommand();\n\n_.latex = function () {\n  var latex = this.firstChild.latex();\n  if (latex.length === 1) return this.cmd + latex;else return this.cmd + '{' + (latex || ' ') + '}';\n};\n\n_.redraw = function () {\n  if (this.prev) this.prev.respace(); //SupSub::respace recursively calls respace on all the following SupSubs\n  //so if prev is a SupSub, no need to call respace on this or following nodes\n\n  if (!(this.prev instanceof SupSub)) {\n    this.respace(); //and if next is a SupSub, then this.respace() will have already called\n    //this.next.respace()\n\n    if (this.next && !(this.next instanceof SupSub)) this.next.respace();\n  }\n};\n\n_.respace = function () {\n  if (this.prev.cmd === '\\\\int ' || this.prev instanceof SupSub && this.prev.cmd != this.cmd && this.prev.prev && this.prev.prev.cmd === '\\\\int ') {\n    if (!this.limit) {\n      this.limit = true;\n      this.jQ.addClass('limit');\n    }\n  } else {\n    if (this.limit) {\n      this.limit = false;\n      this.jQ.removeClass('limit');\n    }\n  }\n\n  this.respaced = this.prev instanceof SupSub && this.prev.cmd != this.cmd && !this.prev.respaced;\n\n  if (this.respaced) {\n    var fontSize = +this.jQ.css('fontSize').slice(0, -2),\n        prevWidth = this.prev.jQ.outerWidth(),\n        thisWidth = this.jQ.outerWidth();\n    this.jQ.css({\n      left: (this.limit && this.cmd === '_' ? -.25 : 0) - prevWidth / fontSize + 'em',\n      marginRight: .1 - min(thisWidth, prevWidth) / fontSize + 'em' //1px extra so it doesn't wrap in retarded browsers (Firefox 2, I think)\n\n    });\n  } else if (this.limit && this.cmd === '_') {\n    this.jQ.css({\n      left: '-.25em',\n      marginRight: ''\n    });\n  } else {\n    this.jQ.css({\n      left: '',\n      marginRight: ''\n    });\n  }\n\n  if (this.next instanceof SupSub) this.next.respace();\n  return this;\n};\n\nLatexCmds.subscript = LatexCmds._ = proto(SupSub, function (replacedFragment) {\n  SupSub.call(this, '_', '<sub></sub>', '_', replacedFragment);\n});\nLatexCmds.superscript = LatexCmds.supscript = LatexCmds['^'] = proto(SupSub, function (replacedFragment) {\n  SupSub.call(this, '^', '<sup></sup>', '**', replacedFragment);\n});\n\nfunction Fraction(replacedFragment) {\n  this.init('\\\\frac', void 0, void 0, replacedFragment);\n  this.jQ.append('<span style=\"display:inline-block;width:0\">&nbsp;</span>');\n}\n\n_ = Fraction.prototype = new MathCommand();\n_.html_template = ['<span class=\"fraction\"></span>', '<span class=\"numerator\"></span>', '<span class=\"denominator\"></span>'];\n_.text_template = ['(', '/', ')'];\nLatexCmds.frac = LatexCmds.dfrac = LatexCmds.cfrac = LatexCmds.fraction = Fraction;\n\nfunction LiveFraction() {\n  Fraction.apply(this, arguments);\n}\n\n_ = LiveFraction.prototype = new Fraction();\n\n_.placeCursor = function (cursor) {\n  //TODO: better architecture so this can be done more cleanly, highjacking MathCommand::placeCursor doesn't seem like the right place to do this\n  if (this.firstChild.isEmpty()) {\n    var prev = this.prev;\n\n    while (prev && !(prev instanceof BinaryOperator || prev instanceof TextBlock || prev instanceof BigSymbol) //lookbehind for operator\n    ) prev = prev.prev;\n\n    if (prev instanceof BigSymbol && prev.next instanceof SupSub) {\n      prev = prev.next;\n      if (prev.next instanceof SupSub && prev.next.cmd != prev.cmd) prev = prev.next;\n    }\n\n    if (prev !== this.prev) {\n      //FIXME: major Law of Demeter violation, shouldn't know here that MathCommand::initBlocks does some initialization that MathFragment::blockify doesn't\n      var newBlock = new MathFragment(this.parent, prev, this).blockify();\n      newBlock.jQ = this.firstChild.jQ.empty().removeClass('empty').append(newBlock.jQ).data(jQueryDataKey, {\n        block: newBlock\n      });\n      newBlock.next = this.lastChild;\n      newBlock.parent = this;\n      this.firstChild = this.lastChild.prev = newBlock;\n    }\n  }\n\n  cursor.appendTo(this.lastChild);\n};\n\nLatexCmds.over = CharCmds['/'] = LiveFraction;\n\nfunction SquareRoot(replacedFragment) {\n  this.init('\\\\sqrt', void 0, void 0, replacedFragment);\n}\n\n_ = SquareRoot.prototype = new MathCommand();\n_.html_template = ['<span class=\"block\"><span class=\"sqrt-prefix\">&radic;</span></span>', '<span class=\"sqrt-stem\"></span>'];\n_.text_template = ['sqrt(', ')'];\n\n_.redraw = function () {\n  var block = this.lastChild.jQ;\n  scale(block.prev(), 1, block.innerHeight() / +block.css('fontSize').slice(0, -2) - .1);\n};\n\n_.optional_arg_command = 'nthroot';\nLatexCmds.sqrt = LatexCmds['√'] = SquareRoot;\n\nfunction NthRoot(replacedFragment) {\n  SquareRoot.call(this, replacedFragment);\n  this.jQ = this.firstChild.jQ.detach().add(this.jQ);\n}\n\n_ = NthRoot.prototype = new SquareRoot();\n_.html_template = ['<span class=\"block\"><span class=\"sqrt-prefix\">&radic;</span></span>', '<sup class=\"nthroot\"></sup>', '<span class=\"sqrt-stem\"></span>'];\n_.text_template = ['sqrt[', '](', ')'];\n\n_.latex = function () {\n  return '\\\\sqrt[' + this.firstChild.latex() + ']{' + this.lastChild.latex() + '}';\n};\n\nLatexCmds.nthroot = NthRoot; // Round/Square/Curly/Angle Brackets (aka Parens/Brackets/Braces)\n\nfunction Bracket(open, close, cmd, end, replacedFragment) {\n  this.init('\\\\left' + cmd, ['<span class=\"block\"><span class=\"paren\">' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(open) + '</span><span class=\"block\"></span><span class=\"paren\">' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(close) + '</span></span>'], [open, close], replacedFragment);\n  this.end = '\\\\right' + end;\n}\n\n_ = Bracket.prototype = new MathCommand();\n\n_.initBlocks = function (replacedFragment) {\n  //FIXME: possible Law of Demeter violation, hardcore MathCommand::initBlocks knowledge needed here\n  this.firstChild = this.lastChild = replacedFragment && replacedFragment.blockify() || new MathBlock();\n  this.firstChild.parent = this;\n  this.firstChild.jQ = this.jQ.children(':eq(1)').data(jQueryDataKey, {\n    block: this.firstChild\n  }).append(this.firstChild.jQ);\n  var block = this.blockjQ = this.firstChild.jQ;\n  this.bracketjQs = block.prev().add(block.next());\n};\n\n_.latex = function () {\n  return this.cmd + this.firstChild.latex() + this.end;\n};\n\n_.redraw = function () {\n  var height = this.blockjQ.outerHeight() / +this.blockjQ.css('fontSize').slice(0, -2);\n  scale(this.bracketjQs, min(1 + .2 * (height - 1), 1.2), 1.05 * height);\n};\n\nCharCmds['{'] = proto(Bracket, function (replacedFragment) {\n  Bracket.call(this, '{', '}', '\\\\{', '\\\\}', replacedFragment);\n});\nLatexCmds.langle = LatexCmds.lang = proto(Bracket, function (replacedFragment) {\n  Bracket.call(this, '&lang;', '&rang;', '\\\\langle ', '\\\\rangle ', replacedFragment);\n}); // Closing bracket matching opening bracket above\n\nfunction CloseBracket(open, close, cmd, end, replacedFragment) {\n  Bracket.apply(this, arguments);\n}\n\n_ = CloseBracket.prototype = new Bracket();\n\n_.placeCursor = function (cursor) {\n  //if I'm at the end of my parent who is a matching open-paren, and I was not passed\n  //  a selection fragment, get rid of me and put cursor after my parent\n  if (!this.next && this.parent.parent && this.parent.parent.end === this.end && this.firstChild.isEmpty()) cursor.backspace().insertAfter(this.parent.parent);else {\n    this.firstChild.blur();\n    this.redraw();\n  }\n};\n\nCharCmds['}'] = proto(CloseBracket, function (replacedFragment) {\n  CloseBracket.call(this, '{', '}', '\\\\{', '\\\\}', replacedFragment);\n});\nLatexCmds.rangle = LatexCmds.rang = proto(CloseBracket, function (replacedFragment) {\n  CloseBracket.call(this, '&lang;', '&rang;', '\\\\langle ', '\\\\rangle ', replacedFragment);\n});\n\nfunction Paren(open, close, replacedFragment) {\n  Bracket.call(this, open, close, open, close, replacedFragment);\n}\n\nParen.prototype = Bracket.prototype;\nLatexCmds.lparen = CharCmds['('] = proto(Paren, function (replacedFragment) {\n  Paren.call(this, '(', ')', replacedFragment);\n});\nLatexCmds.lbrack = LatexCmds.lbracket = CharCmds['['] = proto(Paren, function (replacedFragment) {\n  Paren.call(this, '[', ']', replacedFragment);\n});\n\nfunction CloseParen(open, close, replacedFragment) {\n  CloseBracket.call(this, open, close, open, close, replacedFragment);\n}\n\nCloseParen.prototype = CloseBracket.prototype;\nLatexCmds.rparen = CharCmds[')'] = proto(CloseParen, function (replacedFragment) {\n  CloseParen.call(this, '(', ')', replacedFragment);\n});\nLatexCmds.rbrack = LatexCmds.rbracket = CharCmds[']'] = proto(CloseParen, function (replacedFragment) {\n  CloseParen.call(this, '[', ']', replacedFragment);\n});\n\nfunction Pipes(replacedFragment) {\n  Paren.call(this, '|', '|', replacedFragment);\n}\n\n_ = Pipes.prototype = new Paren();\n\n_.placeCursor = function (cursor) {\n  if (!this.next && this.parent.parent && this.parent.parent.end === this.end && this.firstChild.isEmpty()) cursor.backspace().insertAfter(this.parent.parent);else cursor.appendTo(this.firstChild);\n};\n\nLatexCmds.lpipe = LatexCmds.rpipe = CharCmds['|'] = Pipes;\n\nfunction TextBlock(replacedText) {\n  if (replacedText instanceof MathFragment) this.replacedText = replacedText.remove().jQ.text();else if (typeof replacedText === 'string') this.replacedText = replacedText;\n  this.init();\n}\n\n_ = TextBlock.prototype = new MathCommand();\n_.cmd = '\\\\text';\n_.html_template = ['<span class=\"text\"></span>'];\n_.text_template = ['\"', '\"'];\n\n_.initBlocks = function () {\n  //FIXME: another possible Law of Demeter violation, but this seems much cleaner, like it was supposed to be done this way\n  this.firstChild = this.lastChild = this.jQ.data(jQueryDataKey).block = new InnerTextBlock();\n  this.firstChild.parent = this;\n  this.firstChild.jQ = this.jQ.append(this.firstChild.jQ);\n};\n\n_.placeCursor = function (cursor) {\n  //TODO: this should be done in the constructor that's passed replacedFragment, but you need the cursor to create new characters and insert them\n  (this.cursor = cursor).appendTo(this.firstChild);\n  if (this.replacedText) for (var i = 0; i < this.replacedText.length; i += 1) this.write(this.replacedText.charAt(i));\n};\n\n_.write = function (ch) {\n  this.cursor.insertNew(new VanillaSymbol(ch));\n};\n\n_.keydown = function (e) {\n  //backspace and delete and ends of block don't unwrap\n  if (!this.cursor.selection && (e.which === 8 && !this.cursor.prev || e.which === 46 && !this.cursor.next)) {\n    if (this.isEmpty()) this.cursor.insertAfter(this);\n    return false;\n  }\n\n  return this.parent.keydown(e);\n};\n\n_.textInput = function (ch) {\n  this.cursor.deleteSelection();\n  if (ch !== '$') this.write(ch);else if (this.isEmpty()) this.cursor.insertAfter(this).backspace().insertNew(new VanillaSymbol('\\\\$', '$'));else if (!this.cursor.next) this.cursor.insertAfter(this);else if (!this.cursor.prev) this.cursor.insertBefore(this);else {\n    //split apart\n    var next = new TextBlock(new MathFragment(this.firstChild, this.cursor.prev));\n\n    next.placeCursor = function (cursor) {\n      //FIXME HACK: pretend no prev so they don't get merged\n      this.prev = 0;\n      delete this.placeCursor;\n      this.placeCursor(cursor);\n    };\n\n    next.firstChild.focus = function () {\n      return this;\n    };\n\n    this.cursor.insertAfter(this).insertNew(next);\n    next.prev = this;\n    this.cursor.insertBefore(next);\n    delete next.firstChild.focus;\n  }\n};\n\nfunction InnerTextBlock() {}\n\n_ = InnerTextBlock.prototype = new MathBlock();\n\n_.blur = function () {\n  this.jQ.removeClass('hasCursor');\n\n  if (this.isEmpty()) {\n    var textblock = this.parent,\n        cursor = textblock.cursor;\n    if (cursor.parent === this) this.jQ.addClass('empty');else {\n      cursor.hide();\n      textblock.remove();\n      if (cursor.next === textblock) cursor.next = textblock.next;else if (cursor.prev === textblock) cursor.prev = textblock.prev;\n      cursor.show().redraw();\n    }\n  }\n\n  return this;\n};\n\n_.focus = function () {\n  MathBlock.prototype.focus.call(this);\n  var textblock = this.parent;\n\n  if (textblock.next.cmd === textblock.cmd) {\n    //TODO: seems like there should be a better way to move MathElements around\n    var innerblock = this,\n        cursor = textblock.cursor,\n        next = textblock.next.firstChild;\n    next.eachChild(child => {\n      child.parent = innerblock;\n      child.jQ.appendTo(innerblock.jQ);\n    });\n    if (this.lastChild) this.lastChild.next = next.firstChild;else this.firstChild = next.firstChild;\n    next.firstChild.prev = this.lastChild;\n    this.lastChild = next.lastChild;\n    next.parent.remove();\n    if (cursor.prev) cursor.insertAfter(cursor.prev);else cursor.prependTo(this);\n    cursor.redraw();\n  } else if (textblock.prev.cmd === textblock.cmd) {\n    var cursor = textblock.cursor;\n    if (cursor.prev) textblock.prev.firstChild.focus();else cursor.appendTo(textblock.prev.firstChild);\n  }\n\n  return this;\n};\n\nCharCmds.$ = LatexCmds.text = LatexCmds.textnormal = LatexCmds.textrm = LatexCmds.textup = LatexCmds.textmd = TextBlock;\n\nfunction makeTextBlock(latex, html) {\n  function SomeTextBlock() {\n    TextBlock.apply(this, arguments);\n  }\n\n  _ = SomeTextBlock.prototype = new TextBlock();\n  _.cmd = latex;\n  _.html_template = [html];\n  return SomeTextBlock;\n}\n\nLatexCmds.em = LatexCmds.italic = LatexCmds.italics = LatexCmds.emph = LatexCmds.textit = LatexCmds.textsl = makeTextBlock('\\\\textit', '<i class=\"text\"></i>');\nLatexCmds.strong = LatexCmds.bold = LatexCmds.textbf = makeTextBlock('\\\\textbf', '<b class=\"text\"></b>');\nLatexCmds.sf = LatexCmds.textsf = makeTextBlock('\\\\textsf', '<span class=\"sans-serif text\"></span>');\nLatexCmds.tt = LatexCmds.texttt = makeTextBlock('\\\\texttt', '<span class=\"monospace text\"></span>');\nLatexCmds.textsc = makeTextBlock('\\\\textsc', '<span style=\"font-variant:small-caps\" class=\"text\"></span>');\nLatexCmds.uppercase = makeTextBlock('\\\\uppercase', '<span style=\"text-transform:uppercase\" class=\"text\"></span>');\nLatexCmds.lowercase = makeTextBlock('\\\\lowercase', '<span style=\"text-transform:lowercase\" class=\"text\"></span>'); // input box to type a variety of LaTeX commands beginning with a backslash\n\nfunction LatexCommandInput(replacedFragment) {\n  this.init('\\\\');\n\n  if (replacedFragment) {\n    this.replacedFragment = replacedFragment.detach();\n\n    this.isEmpty = function () {\n      return false;\n    };\n  }\n}\n\n_ = LatexCommandInput.prototype = new MathCommand();\n_.html_template = ['<span class=\"latex-command-input\">\\\\</span>'];\n_.text_template = ['\\\\'];\n\n_.placeCursor = function (cursor) {\n  //TODO: better architecture, better place for this to be done, and more cleanly\n  this.cursor = cursor.appendTo(this.firstChild);\n  if (this.replacedFragment) this.jQ = this.jQ.add(this.replacedFragment.jQ.addClass('blur').bind('mousedown mousemove', //FIXME: is monkey-patching the mousedown and mousemove handlers the right way to do this?\n  function (e) {\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(e.target = this.nextSibling).trigger(e);\n    return false;\n  }).insertBefore(this.jQ));\n};\n\n_.latex = function () {\n  return '\\\\' + this.firstChild.latex() + ' ';\n};\n\n_.keydown = function (e) {\n  if (e.which === 9 || e.which === 13) {\n    //tab or enter\n    this.renderCommand();\n    return false;\n  }\n\n  return this.parent.keydown(e);\n};\n\n_.textInput = function (ch) {\n  if (ch.match(/[a-z:]/i)) {\n    this.cursor.deleteSelection();\n    this.cursor.insertNew(new VanillaSymbol(ch));\n    return;\n  }\n\n  this.renderCommand();\n  if (ch === ' ' || ch === '\\\\' && this.firstChild.isEmpty()) return;\n  this.cursor.parent.textInput(ch);\n};\n\n_.renderCommand = function () {\n  this.jQ = this.jQ.last();\n  this.remove();\n  if (this.next) this.cursor.insertBefore(this.next);else this.cursor.appendTo(this.parent);\n  var latex = this.firstChild.latex();\n  if (latex) this.cursor.insertCmd(latex, this.replacedFragment);else {\n    var cmd = new VanillaSymbol('\\\\backslash ', '\\\\');\n    this.cursor.insertNew(cmd);\n    if (this.replacedFragment) this.replacedFragment.remove();\n  }\n};\n\nCharCmds['\\\\'] = LatexCommandInput;\n\nfunction Binomial(replacedFragment) {\n  this.init('\\\\binom', void 0, void 0, replacedFragment);\n  this.jQ.wrapInner('<span class=\"array\"></span>');\n  this.blockjQ = this.jQ.children();\n  this.bracketjQs = jquery__WEBPACK_IMPORTED_MODULE_1___default()('<span class=\"paren\">(</span>').prependTo(this.jQ).add(jquery__WEBPACK_IMPORTED_MODULE_1___default()('<span class=\"paren\">)</span>').appendTo(this.jQ));\n}\n\n_ = Binomial.prototype = new MathCommand();\n_.html_template = ['<span class=\"block\"></span>', '<span></span>', '<span></span>'];\n_.text_template = ['choose(', ',', ')'];\n_.redraw = Bracket.prototype.redraw;\nLatexCmds.binom = LatexCmds.binomial = Binomial;\n\nfunction Choose() {\n  Binomial.apply(this, arguments);\n}\n\n_ = Choose.prototype = new Binomial();\n_.placeCursor = LiveFraction.prototype.placeCursor;\nLatexCmds.choose = Choose;\n\nfunction Vector(replacedFragment) {\n  this.init('\\\\vector', void 0, void 0, replacedFragment);\n}\n\n_ = Vector.prototype = new MathCommand();\n_.html_template = ['<span class=\"array\"></span>', '<span></span>'];\n\n_.latex = function () {\n  return '\\\\begin{matrix}' + this.foldChildren([], (latex, child) => {\n    latex.push(child.latex());\n    return latex;\n  }).join('\\\\\\\\') + '\\\\end{matrix}';\n};\n\n_.text = function () {\n  return '[' + this.foldChildren([], (text, child) => {\n    text.push(child.text());\n    return text;\n  }).join() + ']';\n};\n\n_.placeCursor = function (cursor) {\n  this.cursor = cursor.appendTo(this.firstChild);\n};\n\n_.keydown = function (e) {\n  var currentBlock = this.cursor.parent;\n\n  if (currentBlock.parent === this) {\n    if (e.which === 13) {\n      //enter\n      var newBlock = new MathBlock();\n      newBlock.parent = this;\n      newBlock.jQ = jquery__WEBPACK_IMPORTED_MODULE_1___default()('<span></span>').data(jQueryDataKey, {\n        block: newBlock\n      }).insertAfter(currentBlock.jQ);\n      if (currentBlock.next) currentBlock.next.prev = newBlock;else this.lastChild = newBlock;\n      newBlock.next = currentBlock.next;\n      currentBlock.next = newBlock;\n      newBlock.prev = currentBlock;\n      this.cursor.appendTo(newBlock).redraw();\n      return false;\n    } else if (e.which === 9 && !e.shiftKey && !currentBlock.next) {\n      //tab\n      if (currentBlock.isEmpty()) {\n        if (currentBlock.prev) {\n          this.cursor.insertAfter(this);\n          delete currentBlock.prev.next;\n          this.lastChild = currentBlock.prev;\n          currentBlock.jQ.remove();\n          this.cursor.redraw();\n          return false;\n        } else return this.parent.keydown(e);\n      }\n\n      var newBlock = new MathBlock();\n      newBlock.parent = this;\n      newBlock.jQ = jquery__WEBPACK_IMPORTED_MODULE_1___default()('<span></span>').data(jQueryDataKey, {\n        block: newBlock\n      }).appendTo(this.jQ);\n      this.lastChild = newBlock;\n      currentBlock.next = newBlock;\n      newBlock.prev = currentBlock;\n      this.cursor.appendTo(newBlock).redraw();\n      return false;\n    } else if (e.which === 8) {\n      //backspace\n      if (currentBlock.isEmpty()) {\n        if (currentBlock.prev) {\n          this.cursor.appendTo(currentBlock.prev);\n          currentBlock.prev.next = currentBlock.next;\n        } else {\n          this.cursor.insertBefore(this);\n          this.firstChild = currentBlock.next;\n        }\n\n        if (currentBlock.next) currentBlock.next.prev = currentBlock.prev;else this.lastChild = currentBlock.prev;\n        currentBlock.jQ.remove();\n        if (this.isEmpty()) this.cursor.deleteForward();else this.cursor.redraw();\n        return false;\n      } else if (!this.cursor.prev) return false;\n    }\n  }\n\n  return this.parent.keydown(e);\n};\n\nLatexCmds.vector = Vector;\nLatexCmds.editable = proto(RootMathCommand, function () {\n  this.init('\\\\editable');\n  createRoot(this.jQ, this.firstChild, false, true);\n  var cursor;\n\n  this.placeCursor = function (c) {\n    cursor = c.appendTo(this.firstChild);\n  };\n\n  this.firstChild.blur = function () {\n    if (cursor.prev !== this.parent) return; //when cursor is inserted after editable, append own cursor FIXME HACK\n\n    delete this.blur;\n    this.cursor.appendTo(this);\n    MathBlock.prototype.blur.call(this);\n  };\n\n  this.latex = function () {\n    return this.firstChild.latex();\n  };\n\n  this.text = function () {\n    return this.firstChild.text();\n  };\n});\n/**********************************\n * Symbols and Special Characters\n *********************************/\n\nLatexCmds.f = bind(Symbol, 'f', '<var class=\"florin\">&fnof;</var><span style=\"display:inline-block;width:0\">&nbsp;</span>');\n\nfunction Variable(ch, html) {\n  Symbol.call(this, ch, '<var>' + jquery__WEBPACK_IMPORTED_MODULE_1___default.a.raw(html || Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ch)) + '</var>');\n}\n\n_ = Variable.prototype = new Symbol();\n\n_.text = function () {\n  var text = this.cmd;\n  if (this.prev && !(this.prev instanceof Variable) && !(this.prev instanceof BinaryOperator)) text = '*' + text;\n  if (this.next && !(this.next instanceof BinaryOperator) && !(this.next.cmd === '^')) text += '*';\n  return text;\n};\n\nfunction VanillaSymbol(ch, html) {\n  Symbol.call(this, ch, '<span>' + jquery__WEBPACK_IMPORTED_MODULE_1___default.a.raw(html || Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ch)) + '</span>');\n}\n\nVanillaSymbol.prototype = Symbol.prototype;\nLatexCmds[':'] = CharCmds[' '] = bind(VanillaSymbol, '\\\\:', ' ');\nLatexCmds.prime = CharCmds[\"'\"] = bind(VanillaSymbol, \"'\", '&prime;');\n\nfunction NonSymbolaSymbol(ch, html) {\n  //does not use Symbola font\n  Symbol.call(this, ch, '<span class=\"nonSymbola\">' + jquery__WEBPACK_IMPORTED_MODULE_1___default.a.raw(html || Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ch)) + '</span>');\n}\n\nNonSymbolaSymbol.prototype = Symbol.prototype;\nLatexCmds['@'] = NonSymbolaSymbol;\nLatexCmds['&'] = bind(NonSymbolaSymbol, '\\\\&', '&');\nLatexCmds['%'] = bind(NonSymbolaSymbol, '\\\\%', '%'); //the following are all Greek to me, but this helped a lot: http://www.ams.org/STIX/ion/stixsig03.html\n//lowercase Greek letter variables\n\nLatexCmds.alpha = LatexCmds.beta = LatexCmds.gamma = LatexCmds.delta = LatexCmds.zeta = LatexCmds.eta = LatexCmds.theta = LatexCmds.iota = LatexCmds.kappa = LatexCmds.mu = LatexCmds.nu = LatexCmds.xi = LatexCmds.rho = LatexCmds.sigma = LatexCmds.tau = LatexCmds.chi = LatexCmds.psi = LatexCmds.omega = proto(Symbol, function (replacedFragment, latex) {\n  Variable.call(this, '\\\\' + latex + ' ', '&' + latex + ';');\n}); //why can't anybody FUCKING agree on these\n\nLatexCmds.phi = //W3C or Unicode?\nbind(Variable, '\\\\phi ', '&#981;');\nLatexCmds.phiv = //Elsevier and 9573-13\nLatexCmds.varphi = //AMS and LaTeX\nbind(Variable, '\\\\varphi ', '&phi;');\nLatexCmds.epsilon = //W3C or Unicode?\nbind(Variable, '\\\\epsilon ', '&#1013;');\nLatexCmds.epsiv = //Elsevier and 9573-13\nLatexCmds.varepsilon = //AMS and LaTeX\nbind(Variable, '\\\\varepsilon ', '&epsilon;');\nLatexCmds.piv = //W3C/Unicode and Elsevier and 9573-13\nLatexCmds.varpi = //AMS and LaTeX\nbind(Variable, '\\\\varpi ', '&piv;');\nLatexCmds.sigmaf = //W3C/Unicode\nLatexCmds.sigmav = //Elsevier\nLatexCmds.varsigma = //LaTeX\nbind(Variable, '\\\\varsigma ', '&sigmaf;');\nLatexCmds.thetav = //Elsevier and 9573-13\nLatexCmds.vartheta = //AMS and LaTeX\nLatexCmds.thetasym = //W3C/Unicode\nbind(Variable, '\\\\vartheta ', '&thetasym;');\nLatexCmds.upsilon = //AMS and LaTeX and W3C/Unicode\nLatexCmds.upsi = //Elsevier and 9573-13\nbind(Variable, '\\\\upsilon ', '&upsilon;'); //these aren't even mentioned in the HTML character entity references\n\nLatexCmds.gammad = //Elsevier\nLatexCmds.Gammad = //9573-13 -- WTF, right? I dunno if this was a typo in the reference (see above)\nLatexCmds.digamma = //LaTeX\nbind(Variable, '\\\\digamma ', '&#989;');\nLatexCmds.kappav = //Elsevier\nLatexCmds.varkappa = //AMS and LaTeX\nbind(Variable, '\\\\varkappa ', '&#1008;');\nLatexCmds.rhov = //Elsevier and 9573-13\nLatexCmds.varrho = //AMS and LaTeX\nbind(Variable, '\\\\varrho ', '&#1009;'); //Greek constants, look best in un-italicised Times New Roman\n\nLatexCmds.pi = LatexCmds['π'] = bind(NonSymbolaSymbol, '\\\\pi ', '&pi;');\nLatexCmds.lambda = bind(NonSymbolaSymbol, '\\\\lambda ', '&lambda;'); //uppercase greek letters\n\nLatexCmds.Upsilon = //LaTeX\nLatexCmds.Upsi = //Elsevier and 9573-13\nLatexCmds.upsih = //W3C/Unicode \"upsilon with hook\"\nLatexCmds.Upsih = //'cos it makes sense to me\nbind(Symbol, '\\\\Upsilon ', '<var style=\"font-family: serif\">&upsih;</var>'); //Symbola's 'upsilon with a hook' is a capital Y without hooks :(\n\nLatexCmds.Gamma = LatexCmds.Delta = LatexCmds.Theta = LatexCmds.Lambda = LatexCmds.Xi = LatexCmds.Pi = LatexCmds.Sigma = LatexCmds.Phi = LatexCmds.Psi = LatexCmds.Omega = //other symbols with the same LaTeX command and HTML character entity reference\nLatexCmds.forall = proto(Symbol, function (replacedFragment, latex) {\n  VanillaSymbol.call(this, '\\\\' + latex + ' ', '&' + latex + ';');\n});\n\nfunction BinaryOperator(cmd, html, text) {\n  Symbol.call(this, cmd, '<span class=\"binary-operator\">' + html + '</span>', text);\n}\n\nBinaryOperator.prototype = new Symbol(); //so instanceof will work\n\nfunction PlusMinus(cmd, html) {\n  VanillaSymbol.apply(this, arguments);\n}\n\n_ = PlusMinus.prototype = new BinaryOperator(); //so instanceof will work\n\n_.respace = function () {\n  if (!this.prev) {\n    this.jQ[0].className = '';\n  } else if (this.prev instanceof BinaryOperator && this.next && !(this.next instanceof BinaryOperator)) {\n    this.jQ[0].className = 'unary-operator';\n  } else {\n    this.jQ[0].className = 'binary-operator';\n  }\n\n  return this;\n};\n\nLatexCmds['+'] = bind(PlusMinus, '+', '+'); //yes, these are different dashes, I think one is an en dash and the other is a hyphen\n\nLatexCmds['–'] = LatexCmds['-'] = bind(PlusMinus, '-', '&minus;');\nLatexCmds['±'] = LatexCmds.pm = LatexCmds.plusmn = LatexCmds.plusminus = bind(PlusMinus, '\\\\pm ', '&plusmn;');\nLatexCmds.mp = LatexCmds.mnplus = LatexCmds.minusplus = bind(PlusMinus, '\\\\mp ', '&#8723;');\nCharCmds['*'] = LatexCmds.sdot = LatexCmds.cdot = bind(BinaryOperator, '\\\\cdot ', '&middot;'); //semantically should be &sdot;, but &middot; looks better\n\nLatexCmds['='] = bind(BinaryOperator, '=', '=');\nLatexCmds['<'] = bind(BinaryOperator, '<', '&lt;');\nLatexCmds['>'] = bind(BinaryOperator, '>', '&gt;');\nLatexCmds.notin = LatexCmds.sim = LatexCmds.cong = LatexCmds.equiv = LatexCmds.oplus = LatexCmds.otimes = proto(BinaryOperator, function (replacedFragment, latex) {\n  BinaryOperator.call(this, '\\\\' + latex + ' ', '&' + latex + ';');\n});\nLatexCmds.times = proto(BinaryOperator, function (replacedFragment, latex) {\n  BinaryOperator.call(this, '\\\\times ', '&times;', '[x]');\n});\nLatexCmds['÷'] = LatexCmds.div = LatexCmds.divide = LatexCmds.divides = bind(BinaryOperator, '\\\\div ', '&divide;', '[/]');\nLatexCmds['≠'] = LatexCmds.ne = LatexCmds.neq = bind(BinaryOperator, '\\\\ne ', '&ne;');\nLatexCmds.ast = LatexCmds.star = LatexCmds.loast = LatexCmds.lowast = bind(BinaryOperator, '\\\\ast ', '&lowast;'); //case 'there4 = // a special exception for this one, perhaps?\n\nLatexCmds.therefor = LatexCmds.therefore = bind(BinaryOperator, '\\\\therefore ', '&there4;');\nLatexCmds.cuz = // l33t\nLatexCmds.because = bind(BinaryOperator, '\\\\because ', '&#8757;');\nLatexCmds.prop = LatexCmds.propto = bind(BinaryOperator, '\\\\propto ', '&prop;');\nLatexCmds['≈'] = LatexCmds.asymp = LatexCmds.approx = bind(BinaryOperator, '\\\\approx ', '&asymp;');\nLatexCmds.lt = bind(BinaryOperator, '<', '&lt;');\nLatexCmds.gt = bind(BinaryOperator, '>', '&gt;');\nLatexCmds['≤'] = LatexCmds.le = LatexCmds.leq = bind(BinaryOperator, '\\\\le ', '&le;');\nLatexCmds['≥'] = LatexCmds.ge = LatexCmds.geq = bind(BinaryOperator, '\\\\ge ', '&ge;');\nLatexCmds.isin = LatexCmds['in'] = bind(BinaryOperator, '\\\\in ', '&isin;');\nLatexCmds.ni = LatexCmds.contains = bind(BinaryOperator, '\\\\ni ', '&ni;');\nLatexCmds.notni = LatexCmds.niton = LatexCmds.notcontains = LatexCmds.doesnotcontain = bind(BinaryOperator, '\\\\not\\\\ni ', '&#8716;');\nLatexCmds.sub = LatexCmds.subset = bind(BinaryOperator, '\\\\subset ', '&sub;');\nLatexCmds.sup = LatexCmds.supset = LatexCmds.superset = bind(BinaryOperator, '\\\\supset ', '&sup;');\nLatexCmds.nsub = LatexCmds.notsub = LatexCmds.nsubset = LatexCmds.notsubset = bind(BinaryOperator, '\\\\not\\\\subset ', '&#8836;');\nLatexCmds.nsup = LatexCmds.notsup = LatexCmds.nsupset = LatexCmds.notsupset = LatexCmds.nsuperset = LatexCmds.notsuperset = bind(BinaryOperator, '\\\\not\\\\supset ', '&#8837;');\nLatexCmds.sube = LatexCmds.subeq = LatexCmds.subsete = LatexCmds.subseteq = bind(BinaryOperator, '\\\\subseteq ', '&sube;');\nLatexCmds.supe = LatexCmds.supeq = LatexCmds.supsete = LatexCmds.supseteq = LatexCmds.supersete = LatexCmds.superseteq = bind(BinaryOperator, '\\\\supseteq ', '&supe;');\nLatexCmds.nsube = LatexCmds.nsubeq = LatexCmds.notsube = LatexCmds.notsubeq = LatexCmds.nsubsete = LatexCmds.nsubseteq = LatexCmds.notsubsete = LatexCmds.notsubseteq = bind(BinaryOperator, '\\\\not\\\\subseteq ', '&#8840;');\nLatexCmds.nsupe = LatexCmds.nsupeq = LatexCmds.notsupe = LatexCmds.notsupeq = LatexCmds.nsupsete = LatexCmds.nsupseteq = LatexCmds.notsupsete = LatexCmds.notsupseteq = LatexCmds.nsupersete = LatexCmds.nsuperseteq = LatexCmds.notsupersete = LatexCmds.notsuperseteq = bind(BinaryOperator, '\\\\not\\\\supseteq ', '&#8841;'); //sum, product, coproduct, integral\n\nfunction BigSymbol(ch, html) {\n  Symbol.call(this, ch, '<big>' + html + '</big>');\n}\n\nBigSymbol.prototype = new Symbol(); //so instanceof will work\n\nLatexCmds['∑'] = LatexCmds.sum = LatexCmds.summation = bind(BigSymbol, '\\\\sum ', '&sum;');\nLatexCmds['∏'] = LatexCmds.prod = LatexCmds.product = bind(BigSymbol, '\\\\prod ', '&prod;');\nLatexCmds.coprod = LatexCmds.coproduct = bind(BigSymbol, '\\\\coprod ', '&#8720;');\nLatexCmds['∫'] = LatexCmds['int'] = LatexCmds.integral = bind(BigSymbol, '\\\\int ', '&int;'); //the canonical sets of numbers\n\nLatexCmds.N = LatexCmds.naturals = LatexCmds.Naturals = bind(VanillaSymbol, '\\\\mathbb{N}', '&#8469;');\nLatexCmds.P = LatexCmds.primes = LatexCmds.Primes = LatexCmds.projective = LatexCmds.Projective = LatexCmds.probability = LatexCmds.Probability = bind(VanillaSymbol, '\\\\mathbb{P}', '&#8473;');\nLatexCmds.Z = LatexCmds.integers = LatexCmds.Integers = bind(VanillaSymbol, '\\\\mathbb{Z}', '&#8484;');\nLatexCmds.Q = LatexCmds.rationals = LatexCmds.Rationals = bind(VanillaSymbol, '\\\\mathbb{Q}', '&#8474;');\nLatexCmds.R = LatexCmds.reals = LatexCmds.Reals = bind(VanillaSymbol, '\\\\mathbb{R}', '&#8477;');\nLatexCmds.C = LatexCmds.complex = LatexCmds.Complex = LatexCmds.complexes = LatexCmds.Complexes = LatexCmds.complexplane = LatexCmds.Complexplane = LatexCmds.ComplexPlane = bind(VanillaSymbol, '\\\\mathbb{C}', '&#8450;');\nLatexCmds.H = LatexCmds.Hamiltonian = LatexCmds.quaternions = LatexCmds.Quaternions = bind(VanillaSymbol, '\\\\mathbb{H}', '&#8461;'); //spacing\n\nLatexCmds.quad = LatexCmds.emsp = bind(VanillaSymbol, '\\\\quad ', '    ');\nLatexCmds.qquad = bind(VanillaSymbol, '\\\\qquad ', '        ');\n/* spacing special characters, gonna have to implement this in LatexCommandInput::textInput somehow\ncase ',':\n  return new VanillaSymbol('\\\\, ',' ');\ncase ':':\n  return new VanillaSymbol('\\\\: ','  ');\ncase ';':\n  return new VanillaSymbol('\\\\; ','   ');\ncase '!':\n  return new Symbol('\\\\! ','<span style=\"margin-right:-.2em\"></span>');\n*/\n//binary operators\n\nLatexCmds.diamond = bind(VanillaSymbol, '\\\\diamond ', '&#9671;');\nLatexCmds.bigtriangleup = bind(VanillaSymbol, '\\\\bigtriangleup ', '&#9651;');\nLatexCmds.ominus = bind(VanillaSymbol, '\\\\ominus ', '&#8854;');\nLatexCmds.uplus = bind(VanillaSymbol, '\\\\uplus ', '&#8846;');\nLatexCmds.bigtriangledown = bind(VanillaSymbol, '\\\\bigtriangledown ', '&#9661;');\nLatexCmds.sqcap = bind(VanillaSymbol, '\\\\sqcap ', '&#8851;');\nLatexCmds.triangleleft = bind(VanillaSymbol, '\\\\triangleleft ', '&#8882;');\nLatexCmds.sqcup = bind(VanillaSymbol, '\\\\sqcup ', '&#8852;');\nLatexCmds.triangleright = bind(VanillaSymbol, '\\\\triangleright ', '&#8883;');\nLatexCmds.odot = bind(VanillaSymbol, '\\\\odot ', '&#8857;');\nLatexCmds.bigcirc = bind(VanillaSymbol, '\\\\bigcirc ', '&#9711;');\nLatexCmds.dagger = bind(VanillaSymbol, '\\\\dagger ', '&#0134;');\nLatexCmds.ddagger = bind(VanillaSymbol, '\\\\ddagger ', '&#135;');\nLatexCmds.wr = bind(VanillaSymbol, '\\\\wr ', '&#8768;');\nLatexCmds.amalg = bind(VanillaSymbol, '\\\\amalg ', '&#8720;'); //relationship symbols\n\nLatexCmds.models = bind(VanillaSymbol, '\\\\models ', '&#8872;');\nLatexCmds.prec = bind(VanillaSymbol, '\\\\prec ', '&#8826;');\nLatexCmds.succ = bind(VanillaSymbol, '\\\\succ ', '&#8827;');\nLatexCmds.preceq = bind(VanillaSymbol, '\\\\preceq ', '&#8828;');\nLatexCmds.succeq = bind(VanillaSymbol, '\\\\succeq ', '&#8829;');\nLatexCmds.simeq = bind(VanillaSymbol, '\\\\simeq ', '&#8771;');\nLatexCmds.mid = bind(VanillaSymbol, '\\\\mid ', '&#8739;');\nLatexCmds.ll = bind(VanillaSymbol, '\\\\ll ', '&#8810;');\nLatexCmds.gg = bind(VanillaSymbol, '\\\\gg ', '&#8811;');\nLatexCmds.parallel = bind(VanillaSymbol, '\\\\parallel ', '&#8741;');\nLatexCmds.bowtie = bind(VanillaSymbol, '\\\\bowtie ', '&#8904;');\nLatexCmds.sqsubset = bind(VanillaSymbol, '\\\\sqsubset ', '&#8847;');\nLatexCmds.sqsupset = bind(VanillaSymbol, '\\\\sqsupset ', '&#8848;');\nLatexCmds.smile = bind(VanillaSymbol, '\\\\smile ', '&#8995;');\nLatexCmds.sqsubseteq = bind(VanillaSymbol, '\\\\sqsubseteq ', '&#8849;');\nLatexCmds.sqsupseteq = bind(VanillaSymbol, '\\\\sqsupseteq ', '&#8850;');\nLatexCmds.doteq = bind(VanillaSymbol, '\\\\doteq ', '&#8784;');\nLatexCmds.frown = bind(VanillaSymbol, '\\\\frown ', '&#8994;');\nLatexCmds.vdash = bind(VanillaSymbol, '\\\\vdash ', '&#8870;');\nLatexCmds.dashv = bind(VanillaSymbol, '\\\\dashv ', '&#8867;'); //arrows\n\nLatexCmds.longleftarrow = bind(VanillaSymbol, '\\\\longleftarrow ', '&#8592;');\nLatexCmds.longrightarrow = bind(VanillaSymbol, '\\\\longrightarrow ', '&#8594;');\nLatexCmds.Longleftarrow = bind(VanillaSymbol, '\\\\Longleftarrow ', '&#8656;');\nLatexCmds.Longrightarrow = bind(VanillaSymbol, '\\\\Longrightarrow ', '&#8658;');\nLatexCmds.longleftrightarrow = bind(VanillaSymbol, '\\\\longleftrightarrow ', '&#8596;');\nLatexCmds.updownarrow = bind(VanillaSymbol, '\\\\updownarrow ', '&#8597;');\nLatexCmds.Longleftrightarrow = bind(VanillaSymbol, '\\\\Longleftrightarrow ', '&#8660;');\nLatexCmds.Updownarrow = bind(VanillaSymbol, '\\\\Updownarrow ', '&#8661;');\nLatexCmds.mapsto = bind(VanillaSymbol, '\\\\mapsto ', '&#8614;');\nLatexCmds.nearrow = bind(VanillaSymbol, '\\\\nearrow ', '&#8599;');\nLatexCmds.hookleftarrow = bind(VanillaSymbol, '\\\\hookleftarrow ', '&#8617;');\nLatexCmds.hookrightarrow = bind(VanillaSymbol, '\\\\hookrightarrow ', '&#8618;');\nLatexCmds.searrow = bind(VanillaSymbol, '\\\\searrow ', '&#8600;');\nLatexCmds.leftharpoonup = bind(VanillaSymbol, '\\\\leftharpoonup ', '&#8636;');\nLatexCmds.rightharpoonup = bind(VanillaSymbol, '\\\\rightharpoonup ', '&#8640;');\nLatexCmds.swarrow = bind(VanillaSymbol, '\\\\swarrow ', '&#8601;');\nLatexCmds.leftharpoondown = bind(VanillaSymbol, '\\\\leftharpoondown ', '&#8637;');\nLatexCmds.rightharpoondown = bind(VanillaSymbol, '\\\\rightharpoondown ', '&#8641;');\nLatexCmds.nwarrow = bind(VanillaSymbol, '\\\\nwarrow ', '&#8598;'); //Misc\n\nLatexCmds.ldots = bind(VanillaSymbol, '\\\\ldots ', '&#8230;');\nLatexCmds.cdots = bind(VanillaSymbol, '\\\\cdots ', '&#8943;');\nLatexCmds.vdots = bind(VanillaSymbol, '\\\\vdots ', '&#8942;');\nLatexCmds.ddots = bind(VanillaSymbol, '\\\\ddots ', '&#8944;');\nLatexCmds.surd = bind(VanillaSymbol, '\\\\surd ', '&#8730;');\nLatexCmds.triangle = bind(VanillaSymbol, '\\\\triangle ', '&#9653;');\nLatexCmds.ell = bind(VanillaSymbol, '\\\\ell ', '&#8467;');\nLatexCmds.top = bind(VanillaSymbol, '\\\\top ', '&#8868;');\nLatexCmds.flat = bind(VanillaSymbol, '\\\\flat ', '&#9837;');\nLatexCmds.natural = bind(VanillaSymbol, '\\\\natural ', '&#9838;');\nLatexCmds.sharp = bind(VanillaSymbol, '\\\\sharp ', '&#9839;');\nLatexCmds.wp = bind(VanillaSymbol, '\\\\wp ', '&#8472;');\nLatexCmds.bot = bind(VanillaSymbol, '\\\\bot ', '&#8869;');\nLatexCmds.clubsuit = bind(VanillaSymbol, '\\\\clubsuit ', '&#9827;');\nLatexCmds.diamondsuit = bind(VanillaSymbol, '\\\\diamondsuit ', '&#9826;');\nLatexCmds.heartsuit = bind(VanillaSymbol, '\\\\heartsuit ', '&#9825;');\nLatexCmds.spadesuit = bind(VanillaSymbol, '\\\\spadesuit ', '&#9824;'); //variable-sized\n\nLatexCmds.oint = bind(VanillaSymbol, '\\\\oint ', '&#8750;');\nLatexCmds.bigcap = bind(VanillaSymbol, '\\\\bigcap ', '&#8745;');\nLatexCmds.bigcup = bind(VanillaSymbol, '\\\\bigcup ', '&#8746;');\nLatexCmds.bigsqcup = bind(VanillaSymbol, '\\\\bigsqcup ', '&#8852;');\nLatexCmds.bigvee = bind(VanillaSymbol, '\\\\bigvee ', '&#8744;');\nLatexCmds.bigwedge = bind(VanillaSymbol, '\\\\bigwedge ', '&#8743;');\nLatexCmds.bigodot = bind(VanillaSymbol, '\\\\bigodot ', '&#8857;');\nLatexCmds.bigotimes = bind(VanillaSymbol, '\\\\bigotimes ', '&#8855;');\nLatexCmds.bigoplus = bind(VanillaSymbol, '\\\\bigoplus ', '&#8853;');\nLatexCmds.biguplus = bind(VanillaSymbol, '\\\\biguplus ', '&#8846;'); //delimiters\n\nLatexCmds.lfloor = bind(VanillaSymbol, '\\\\lfloor ', '&#8970;');\nLatexCmds.rfloor = bind(VanillaSymbol, '\\\\rfloor ', '&#8971;');\nLatexCmds.lceil = bind(VanillaSymbol, '\\\\lceil ', '&#8968;');\nLatexCmds.rceil = bind(VanillaSymbol, '\\\\rceil ', '&#8969;');\nLatexCmds.slash = bind(VanillaSymbol, '/');\nLatexCmds.lbrace = bind(VanillaSymbol, '\\\\lbrace ', '&#123;');\nLatexCmds.rbrace = bind(VanillaSymbol, '\\\\rbrace ', '&#125;'); //various symbols\n\nLatexCmds.caret = bind(VanillaSymbol, '\\\\caret ', '^');\nLatexCmds.underscore = bind(VanillaSymbol, '\\\\underscore ', '_');\nLatexCmds.backslash = bind(VanillaSymbol, '\\\\backslash ', '\\\\');\nLatexCmds.vert = bind(VanillaSymbol, '|');\nLatexCmds.perp = LatexCmds.perpendicular = bind(VanillaSymbol, '\\\\perp ', '&perp;');\nLatexCmds.nabla = LatexCmds.del = bind(VanillaSymbol, '\\\\nabla ', '&nabla;');\nLatexCmds.hbar = bind(VanillaSymbol, '\\\\hbar ', '&#8463;');\nLatexCmds.AA = LatexCmds.Angstrom = LatexCmds.angstrom = bind(VanillaSymbol, '\\\\text\\\\AA ', '&#8491;');\nLatexCmds.ring = LatexCmds.circ = LatexCmds.circle = bind(VanillaSymbol, '\\\\circ ', '&#8728;');\nLatexCmds.bull = LatexCmds.bullet = bind(VanillaSymbol, '\\\\bullet ', '&bull;');\nLatexCmds.setminus = LatexCmds.smallsetminus = bind(VanillaSymbol, '\\\\setminus ', '&#8726;');\nLatexCmds.not = //bind(Symbol,'\\\\not ','<span class=\"not\">/</span>');\nLatexCmds['¬'] = LatexCmds.neg = bind(VanillaSymbol, '\\\\neg ', '&not;');\nLatexCmds['…'] = LatexCmds.dots = LatexCmds.ellip = LatexCmds.hellip = LatexCmds.ellipsis = LatexCmds.hellipsis = bind(VanillaSymbol, '\\\\dots ', '&hellip;');\nLatexCmds.converges = LatexCmds.darr = LatexCmds.dnarr = LatexCmds.dnarrow = LatexCmds.downarrow = bind(VanillaSymbol, '\\\\downarrow ', '&darr;');\nLatexCmds.dArr = LatexCmds.dnArr = LatexCmds.dnArrow = LatexCmds.Downarrow = bind(VanillaSymbol, '\\\\Downarrow ', '&dArr;');\nLatexCmds.diverges = LatexCmds.uarr = LatexCmds.uparrow = bind(VanillaSymbol, '\\\\uparrow ', '&uarr;');\nLatexCmds.uArr = LatexCmds.Uparrow = bind(VanillaSymbol, '\\\\Uparrow ', '&uArr;');\nLatexCmds.to = bind(BinaryOperator, '\\\\to ', '&rarr;');\nLatexCmds.rarr = LatexCmds.rightarrow = bind(VanillaSymbol, '\\\\rightarrow ', '&rarr;');\nLatexCmds.implies = bind(BinaryOperator, '\\\\Rightarrow ', '&rArr;');\nLatexCmds.rArr = LatexCmds.Rightarrow = bind(VanillaSymbol, '\\\\Rightarrow ', '&rArr;');\nLatexCmds.gets = bind(BinaryOperator, '\\\\gets ', '&larr;');\nLatexCmds.larr = LatexCmds.leftarrow = bind(VanillaSymbol, '\\\\leftarrow ', '&larr;');\nLatexCmds.impliedby = bind(BinaryOperator, '\\\\Leftarrow ', '&lArr;');\nLatexCmds.lArr = LatexCmds.Leftarrow = bind(VanillaSymbol, '\\\\Leftarrow ', '&lArr;');\nLatexCmds.harr = LatexCmds.lrarr = LatexCmds.leftrightarrow = bind(VanillaSymbol, '\\\\leftrightarrow ', '&harr;');\nLatexCmds.iff = bind(BinaryOperator, '\\\\Leftrightarrow ', '&hArr;');\nLatexCmds.hArr = LatexCmds.lrArr = LatexCmds.Leftrightarrow = bind(VanillaSymbol, '\\\\Leftrightarrow ', '&hArr;');\nLatexCmds.Re = LatexCmds.Real = LatexCmds.real = bind(VanillaSymbol, '\\\\Re ', '&real;');\nLatexCmds.Im = LatexCmds.imag = LatexCmds.image = LatexCmds.imagin = LatexCmds.imaginary = LatexCmds.Imaginary = bind(VanillaSymbol, '\\\\Im ', '&image;');\nLatexCmds.part = LatexCmds.partial = bind(VanillaSymbol, '\\\\partial ', '&part;');\nLatexCmds.inf = LatexCmds.infin = LatexCmds.infty = LatexCmds.infinity = bind(VanillaSymbol, '\\\\infty ', '&infin;');\nLatexCmds.alef = LatexCmds.alefsym = LatexCmds.aleph = LatexCmds.alephsym = bind(VanillaSymbol, '\\\\aleph ', '&alefsym;');\nLatexCmds.xist = //LOL\nLatexCmds.xists = LatexCmds.exist = LatexCmds.exists = bind(VanillaSymbol, '\\\\exists ', '&exist;');\nLatexCmds.and = LatexCmds.land = LatexCmds.wedge = bind(VanillaSymbol, '\\\\wedge ', '&and;');\nLatexCmds.or = LatexCmds.lor = LatexCmds.vee = bind(VanillaSymbol, '\\\\vee ', '&or;');\nLatexCmds.o = LatexCmds.O = LatexCmds.empty = LatexCmds.emptyset = LatexCmds.oslash = LatexCmds.Oslash = LatexCmds.nothing = LatexCmds.varnothing = bind(BinaryOperator, '\\\\varnothing ', '&empty;');\nLatexCmds.cup = LatexCmds.union = bind(VanillaSymbol, '\\\\cup ', '&cup;');\nLatexCmds.cap = LatexCmds.intersect = LatexCmds.intersection = bind(VanillaSymbol, '\\\\cap ', '&cap;');\nLatexCmds.deg = LatexCmds.degree = bind(VanillaSymbol, '^\\\\circ ', '&deg;');\nLatexCmds.ang = LatexCmds.angle = bind(VanillaSymbol, '\\\\angle ', '&ang;');\n\nfunction NonItalicizedFunction(replacedFragment, fn) {\n  Symbol.call(this, '\\\\' + fn + ' ', '<span>' + Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(fn) + '</span>');\n}\n\n_ = NonItalicizedFunction.prototype = new Symbol();\n\n_.respace = function () {\n  this.jQ[0].className = this.next instanceof SupSub || this.next instanceof Bracket ? '' : 'non-italicized-function';\n};\n\nLatexCmds.ln = LatexCmds.lg = LatexCmds.log = LatexCmds.span = LatexCmds.proj = LatexCmds.det = LatexCmds.dim = LatexCmds.min = LatexCmds.max = LatexCmds.mod = LatexCmds.lcm = LatexCmds.gcd = LatexCmds.gcf = LatexCmds.hcf = LatexCmds.lim = NonItalicizedFunction;\n\n(function () {\n  var trig = ['sin', 'cos', 'tan', 'sec', 'cosec', 'csc', 'cotan', 'cot'];\n\n  for (var i in trig) {\n    LatexCmds[trig[i]] = LatexCmds[trig[i] + 'h'] = LatexCmds['a' + trig[i]] = LatexCmds['arc' + trig[i]] = LatexCmds['a' + trig[i] + 'h'] = LatexCmds['arc' + trig[i] + 'h'] = NonItalicizedFunction;\n  }\n})();\n/********************************************\n * Cursor and Selection \"singleton\" classes\n *******************************************/\n\n/* The main thing that manipulates the Math DOM. Makes sure to manipulate the\nHTML DOM to match. */\n\n/* Sort of singletons, since there should only be one per editable math\ntextbox, but any one HTML document can contain many such textboxes, so any one\nJS environment could actually contain many instances. */\n//A fake cursor in the fake textbox that the math is rendered in.\n\n\nfunction Cursor(root) {\n  this.parent = this.root = root;\n  var jQ = this.jQ = this._jQ = jquery__WEBPACK_IMPORTED_MODULE_1___default()('<span class=\"cursor\">&zwj;</span>'); //closured for setInterval\n\n  this.blink = function () {\n    jQ.toggleClass('blink');\n  };\n}\n\n_ = Cursor.prototype;\n_.prev = 0;\n_.next = 0;\n_.parent = 0;\n\n_.show = function () {\n  this.jQ = this._jQ.removeClass('blink');\n  if ('intervalId' in this) //already was shown, just restart interval\n    clearInterval(this.intervalId);else {\n    //was hidden and detached, insert this.jQ back into HTML DOM\n    if (this.next) {\n      if (this.selection && this.selection.prev === this.prev) this.jQ.insertBefore(this.selection.jQ);else this.jQ.insertBefore(this.next.jQ.first());\n    } else this.jQ.appendTo(this.parent.jQ);\n\n    this.parent.focus();\n  }\n  this.intervalId = setInterval(this.blink, 500);\n  return this;\n};\n\n_.hide = function () {\n  if ('intervalId' in this) clearInterval(this.intervalId);\n  delete this.intervalId;\n  this.jQ.detach();\n  this.jQ = jquery__WEBPACK_IMPORTED_MODULE_1___default()();\n  return this;\n};\n\n_.redraw = function () {\n  for (var ancestor = this.parent; ancestor; ancestor = ancestor.parent) if (ancestor.redraw) ancestor.redraw();\n};\n\n_.insertAt = function (parent, prev, next) {\n  var old_parent = this.parent;\n  this.parent = parent;\n  this.prev = prev;\n  this.next = next;\n  old_parent.blur(); //blur may need to know cursor's destination\n};\n\n_.insertBefore = function (el) {\n  this.insertAt(el.parent, el.prev, el);\n  this.parent.jQ.addClass('hasCursor');\n  this.jQ.insertBefore(el.jQ.first());\n  return this;\n};\n\n_.insertAfter = function (el) {\n  this.insertAt(el.parent, el, el.next);\n  this.parent.jQ.addClass('hasCursor');\n  this.jQ.insertAfter(el.jQ.last());\n  return this;\n};\n\n_.prependTo = function (el) {\n  this.insertAt(el, 0, el.firstChild);\n  if (el.textarea) //never insert before textarea\n    this.jQ.insertAfter(el.textarea);else this.jQ.prependTo(el.jQ);\n  el.focus();\n  return this;\n};\n\n_.appendTo = function (el) {\n  this.insertAt(el, el.lastChild, 0);\n  this.jQ.appendTo(el.jQ);\n  el.focus();\n  return this;\n};\n\n_.hopLeft = function () {\n  this.jQ.insertBefore(this.prev.jQ.first());\n  this.next = this.prev;\n  this.prev = this.prev.prev;\n  return this;\n};\n\n_.hopRight = function () {\n  this.jQ.insertAfter(this.next.jQ.last());\n  this.prev = this.next;\n  this.next = this.next.next;\n  return this;\n};\n\n_.moveLeft = function () {\n  if (this.selection) this.insertBefore(this.selection.prev.next || this.parent.firstChild).clearSelection();else {\n    if (this.prev) {\n      if (this.prev.lastChild) this.appendTo(this.prev.lastChild);else this.hopLeft();\n    } else {\n      //we're at the beginning of a block\n      if (this.parent.prev) this.appendTo(this.parent.prev);else if (this.parent !== this.root) this.insertBefore(this.parent.parent); //else we're at the beginning of the root, so do nothing.\n    }\n  }\n  return this.show();\n};\n\n_.moveRight = function () {\n  if (this.selection) this.insertAfter(this.selection.next.prev || this.parent.lastChild).clearSelection();else {\n    if (this.next) {\n      if (this.next.firstChild) this.prependTo(this.next.firstChild);else this.hopRight();\n    } else {\n      //we're at the end of a block\n      if (this.parent.next) this.prependTo(this.parent.next);else if (this.parent !== this.root) this.insertAfter(this.parent.parent); //else we're at the end of the root, so do nothing.\n    }\n  }\n  return this.show();\n};\n\n_.seek = function (target, pageX, pageY) {\n  var cursor = this.clearSelection();\n\n  if (target.hasClass('empty')) {\n    cursor.prependTo(target.data(jQueryDataKey).block);\n    return cursor;\n  }\n\n  var data = target.data(jQueryDataKey);\n\n  if (data) {\n    //if clicked a symbol, insert at whichever side is closer\n    if (data.cmd && !data.block) {\n      if (target.outerWidth() > 2 * (pageX - target.offset().left)) cursor.insertBefore(data.cmd);else cursor.insertAfter(data.cmd);\n      return cursor;\n    }\n  } //if no MathQuill data, try parent, if still no, forget it\n  else {\n    target = target.parent();\n    data = target.data(jQueryDataKey);\n    if (!data) data = {\n      block: cursor.root\n    };\n  }\n\n  if (data.cmd) cursor.insertAfter(data.cmd);else cursor.appendTo(data.block); //move cursor to position closest to click\n\n  var dist = cursor.jQ.offset().left - pageX,\n      prevDist;\n\n  do {\n    cursor.moveLeft();\n    prevDist = dist;\n    dist = cursor.jQ.offset().left - pageX;\n  } while (dist > 0 && (cursor.prev || cursor.parent !== cursor.root));\n\n  if (-dist > prevDist) cursor.moveRight();\n  return cursor;\n};\n\n_.resolveNonItalicizedFunctions = function () {\n  var node = this.prev;\n  var raw = node ? node.latex().replace(/ $/, '') : null;\n  var count = 0;\n  var functions = {\n    ln: 1,\n    lg: 1,\n    log: 1,\n    span: 1,\n    proj: 1,\n    det: 1,\n    dim: 1,\n    min: 1,\n    max: 1,\n    mod: 1,\n    lcm: 1,\n    gcd: 1,\n    gcf: 1,\n    hcf: 1,\n    lim: 1,\n    sin: 1,\n    sinh: 1,\n    asin: 1,\n    arcsin: 1,\n    asinh: 1,\n    arcsinh: 1,\n    cos: 1,\n    cosh: 1,\n    acos: 1,\n    arccos: 1,\n    acosh: 1,\n    arccosh: 1,\n    tan: 1,\n    tanh: 1,\n    atan: 1,\n    arctan: 1,\n    atanh: 1,\n    arctanh: 1,\n    sec: 1,\n    sech: 1,\n    asec: 1,\n    arcsec: 1,\n    asech: 1,\n    arcsech: 1,\n    cosec: 1,\n    cosech: 1,\n    acosec: 1,\n    arccosec: 1,\n    acosech: 1,\n    arccosech: 1,\n    csc: 1,\n    csch: 1,\n    acsc: 1,\n    arccsc: 1,\n    acsch: 1,\n    arccsch: 1,\n    cotan: 1,\n    cotanh: 1,\n    acotan: 1,\n    arccotan: 1,\n    acotanh: 1,\n    arccotanh: 1,\n    cot: 1,\n    coth: 1,\n    acot: 1,\n    arccot: 1,\n    acoth: 1,\n    arccoth: 1\n  };\n  var latex = '';\n\n  while (node && raw) {\n    var single_char = raw.match(/^[a-z]$/);\n\n    if (single_char || latex && raw[0] == '\\\\' && functions[raw.substring(1)] && functions[(raw + latex).substring(1)]) {\n      count++;\n      latex = raw.replace(/\\\\/, '') + latex;\n      node = node.prev;\n      raw = node ? node.latex().replace(/ $/, '') : null;\n\n      if (!single_char || (!node || !raw.match(/^[a-z]$/)) && functions[latex]) {\n        for (var i = 0; i < count; i++) {\n          this.selectLeft();\n        }\n\n        this.writeLatex(\"\\\\\" + latex);\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n};\n\n_.writeLatex = function (latex, noMoveCursor) {\n  this.deleteSelection();\n  latex = latex && latex.match(/\\\\text\\{([^}]|\\\\\\})*\\}|\\\\:|\\\\[a-z]*|[^\\s]/ig) || 0;\n\n  (function writeLatexBlock(cursor) {\n    while (latex.length) {\n      var token = latex.shift(); //pop first item\n\n      if (!token || token === '}' || token === ']') return;\n      var cmd;\n\n      if (token.slice(0, 6) === '\\\\text{') {\n        cmd = new TextBlock(token.slice(6, -1));\n        cursor.insertNew(cmd).insertAfter(cmd);\n        continue; //skip recursing through children\n      } else if (token === '\\\\left' || token === '\\\\right') {\n        //FIXME HACK: implement real \\left and \\right LaTeX commands, rather than special casing them here\n        token = latex.shift();\n        if (token === '\\\\') token = latex.shift();\n        cursor.insertCh(token);\n        cmd = cursor.prev || cursor.parent.parent;\n        if (cursor.prev) //was a close-paren, so break recursion\n          return;else //was an open-paren, hack to put the following latex\n          latex.unshift('{'); //in the ParenBlock in the math DOM\n      } else if (/^\\\\[a-z:]+$/i.test(token)) {\n        token = token.slice(1);\n        var cmd = LatexCmds[token];\n\n        if (cmd) {\n          cmd = new cmd(void 0, token);\n\n          if (latex[0] === '[' && cmd.optional_arg_command) {\n            //e.g. \\sqrt{m} -> SquareRoot, \\sqrt[n]{m} -> NthRoot\n            token = cmd.optional_arg_command;\n            cmd = new LatexCmds[token](void 0, token);\n          }\n\n          cursor.insertNew(cmd);\n        } else {\n          cmd = new TextBlock(token);\n          cursor.insertNew(cmd).insertAfter(cmd);\n          continue; //skip recursing through children\n        }\n      } else {\n        if (token.match(/[a-eg-zA-Z]/)) //exclude f because want florin\n          cmd = new Variable(token);else if (cmd = LatexCmds[token]) cmd = new cmd();else cmd = new VanillaSymbol(token);\n        cursor.insertNew(cmd);\n      }\n\n      cmd.eachChild(child => {\n        cursor.appendTo(child);\n        var token = latex.shift();\n        if (!token) return false;\n        if (token === '{' || token === '[') writeLatexBlock(cursor);else cursor.insertCh(token);\n      });\n      if (!noMoveCursor) cursor.insertAfter(cmd);\n    }\n  })(this);\n\n  return this.hide();\n};\n\n_.write = function (ch) {\n  var ret = this.show().insertCh(ch);\n  if (this.root.toolbar) this.resolveNonItalicizedFunctions();\n  return ret;\n};\n\n_.insertCh = function (ch) {\n  if (this.selection) {\n    //gotta do this before this.selection is mutated by 'new cmd(this.selection)'\n    this.prev = this.selection.prev;\n    this.next = this.selection.next;\n  }\n\n  var cmd;\n  if (ch.match(/^[a-eg-zA-Z]$/)) //exclude f because want florin\n    cmd = new Variable(ch);else if (cmd = CharCmds[ch] || LatexCmds[ch]) cmd = new cmd(this.selection, ch);else cmd = new VanillaSymbol(ch);\n\n  if (this.selection) {\n    if (cmd instanceof Symbol) this.selection.remove();\n    delete this.selection;\n  }\n\n  return this.insertNew(cmd);\n};\n\n_.insertNew = function (cmd) {\n  cmd.insertAt(this);\n  return this;\n};\n\n_.insertCmd = function (latexCmd, replacedFragment) {\n  var cmd = LatexCmds[latexCmd];\n\n  if (cmd) {\n    cmd = new cmd(replacedFragment, latexCmd);\n    this.insertNew(cmd);\n    if (cmd instanceof Symbol && replacedFragment) replacedFragment.remove();\n  } else {\n    cmd = new TextBlock(latexCmd);\n\n    cmd.firstChild.focus = function () {\n      delete this.focus;\n      return this;\n    };\n\n    this.insertNew(cmd).insertAfter(cmd);\n    if (replacedFragment) replacedFragment.remove();\n  }\n\n  return this;\n};\n\n_.unwrapGramp = function () {\n  var gramp = this.parent.parent,\n      greatgramp = gramp.parent,\n      prev = gramp.prev,\n      cursor = this;\n  gramp.eachChild(uncle => {\n    if (uncle.isEmpty()) return;\n    uncle.eachChild(cousin => {\n      cousin.parent = greatgramp;\n      cousin.jQ.insertBefore(gramp.jQ.first());\n    });\n    uncle.firstChild.prev = prev;\n    if (prev) prev.next = uncle.firstChild;else greatgramp.firstChild = uncle.firstChild;\n    prev = uncle.lastChild;\n  });\n  prev.next = gramp.next;\n  if (gramp.next) gramp.next.prev = prev;else greatgramp.lastChild = prev;\n\n  if (!this.next) {\n    //then find something to be next to insertBefore\n    if (this.prev) this.next = this.prev.next;else {\n      while (!this.next) {\n        this.parent = this.parent.next;\n        if (this.parent) this.next = this.parent.firstChild;else {\n          this.next = gramp.next;\n          this.parent = greatgramp;\n          break;\n        }\n      }\n    }\n  }\n\n  if (this.next) this.insertBefore(this.next);else this.appendTo(greatgramp);\n  gramp.jQ.remove();\n  if (gramp.prev) gramp.prev.respace();\n  if (gramp.next) gramp.next.respace();\n};\n\n_.backspace = function () {\n  if (this.deleteSelection()) ;else if (this.prev) {\n    if (this.prev.isEmpty()) this.prev = this.prev.remove().prev;else this.selectLeft();\n  } else if (this.parent !== this.root) {\n    if (this.parent.parent.isEmpty()) return this.insertAfter(this.parent.parent).backspace();else this.unwrapGramp();\n  }\n  if (this.prev) this.prev.respace();\n  if (this.next) this.next.respace();\n  this.redraw();\n  return this;\n};\n\n_.deleteForward = function () {\n  if (this.deleteSelection()) ;else if (this.next) {\n    if (this.next.isEmpty()) this.next = this.next.remove().next;else this.selectRight();\n  } else if (this.parent !== this.root) {\n    if (this.parent.parent.isEmpty()) return this.insertBefore(this.parent.parent).deleteForward();else this.unwrapGramp();\n  }\n  if (this.prev) this.prev.respace();\n  if (this.next) this.next.respace();\n  this.redraw();\n  return this;\n};\n\n_.selectFrom = function (anticursor) {\n  //find ancestors of each with common parent\n  var oneA = this,\n      otherA = anticursor; //one ancestor, the other ancestor\n\n  loopThroughAncestors: while (true) {\n    for (var oneI = this; oneI !== oneA.parent.parent; oneI = oneI.parent.parent) //one intermediate, the other intermediate\n    if (oneI.parent === otherA.parent) {\n      left = oneI;\n      right = otherA;\n      break loopThroughAncestors;\n    }\n\n    for (var otherI = anticursor; otherI !== otherA.parent.parent; otherI = otherI.parent.parent) if (oneA.parent === otherI.parent) {\n      left = oneA;\n      right = otherI;\n      break loopThroughAncestors;\n    }\n\n    if (oneA.parent.parent) oneA = oneA.parent.parent;\n    if (otherA.parent.parent) otherA = otherA.parent.parent;\n  } //figure out which is left/prev and which is right/next\n\n\n  var left, right, leftRight;\n\n  if (left.next !== right) {\n    for (var next = left; next; next = next.next) {\n      if (next === right.prev) {\n        leftRight = true;\n        break;\n      }\n    }\n\n    if (!leftRight) {\n      leftRight = right;\n      right = left;\n      left = leftRight;\n    }\n  }\n\n  this.hide().selection = new Selection(left.parent, left.prev, right.next);\n  this.insertAfter(right.next.prev || right.parent.lastChild);\n  this.root.selectionChanged();\n};\n\n_.selectLeft = function () {\n  if (this.selection) {\n    if (this.selection.prev === this.prev) {\n      //if cursor is at left edge of selection;\n      if (this.prev) {\n        //then extend left if possible\n        this.hopLeft().next.jQ.prependTo(this.selection.jQ);\n        this.selection.prev = this.prev;\n      } else if (this.parent !== this.root) //else level up if possible\n        this.insertBefore(this.parent.parent).selection.levelUp();\n    } else {\n      //else cursor is at right edge of selection, retract left\n      this.prev.jQ.insertAfter(this.selection.jQ);\n      this.hopLeft().selection.next = this.next;\n\n      if (this.selection.prev === this.prev) {\n        this.deleteSelection();\n        return;\n      }\n    }\n  } else {\n    if (this.prev) this.hopLeft();else //end of a block\n      if (this.parent !== this.root) this.insertBefore(this.parent.parent);else return;\n    this.hide().selection = new Selection(this.parent, this.prev, this.next.next);\n  }\n\n  this.root.selectionChanged();\n};\n\n_.selectRight = function () {\n  if (this.selection) {\n    if (this.selection.next === this.next) {\n      //if cursor is at right edge of selection;\n      if (this.next) {\n        //then extend right if possible\n        this.hopRight().prev.jQ.appendTo(this.selection.jQ);\n        this.selection.next = this.next;\n      } else if (this.parent !== this.root) //else level up if possible\n        this.insertAfter(this.parent.parent).selection.levelUp();\n    } else {\n      //else cursor is at left edge of selection, retract right\n      this.next.jQ.insertBefore(this.selection.jQ);\n      this.hopRight().selection.prev = this.prev;\n\n      if (this.selection.next === this.next) {\n        this.deleteSelection();\n        return;\n      }\n    }\n  } else {\n    if (this.next) this.hopRight();else //end of a block\n      if (this.parent !== this.root) this.insertAfter(this.parent.parent);else return;\n    this.hide().selection = new Selection(this.parent, this.prev.prev, this.next);\n  }\n\n  this.root.selectionChanged();\n};\n\n_.clearSelection = function () {\n  if (this.show().selection) {\n    this.selection.clear();\n    delete this.selection;\n    this.root.selectionChanged();\n  }\n\n  return this;\n};\n\n_.deleteSelection = function () {\n  if (!this.show().selection) return false;\n  this.prev = this.selection.prev;\n  this.next = this.selection.next;\n  this.selection.remove();\n  delete this.selection;\n  this.root.selectionChanged();\n  return true;\n};\n\nfunction Selection(parent, prev, next) {\n  MathFragment.apply(this, arguments);\n}\n\n_ = Selection.prototype = new MathFragment();\n\n_.jQinit = function (children) {\n  this.jQ = children.wrapAll('<span class=\"selection\"></span>').parent(); //can't do wrapAll(this.jQ = $(...)) because wrapAll will clone it\n};\n\n_.levelUp = function () {\n  this.clear().jQinit(this.parent.parent.jQ);\n  this.prev = this.parent.parent.prev;\n  this.next = this.parent.parent.next;\n  this.parent = this.parent.parent.parent;\n  return this;\n};\n\n_.clear = function () {\n  this.jQ.replaceWith(this.jQ.children());\n  return this;\n};\n\n_.blockify = function () {\n  this.jQ.replaceWith(this.jQ = this.jQ.children());\n  return MathFragment.prototype.blockify.call(this);\n};\n\n_.detach = function () {\n  var block = MathFragment.prototype.blockify.call(this);\n\n  this.blockify = function () {\n    this.jQ.replaceWith(block.jQ = this.jQ = this.jQ.children());\n    return block;\n  };\n\n  return this;\n};\n/*********************************************************\n * The actual jQuery plugin and document ready handlers.\n ********************************************************/\n//The publicy exposed method of jQuery.prototype, available (and meant to be\n//called) on jQuery-wrapped HTML DOM elements.\n\n\njquery__WEBPACK_IMPORTED_MODULE_1___default.a.fn.mathquill = function (cmd, latex) {\n  switch (cmd) {\n    case 'redraw':\n      this.find(':not(:has(:first))').each(function () {\n        var data = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).data(jQueryDataKey);\n        if (data && (data.cmd || data.block)) Cursor.prototype.redraw.call(data.cmd || data.block);\n      });\n      return this;\n\n    case 'revert':\n      return this.each(function () {\n        var data = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).data(jQueryDataKey);\n        if (data && data.revert) data.revert();\n      });\n\n    case 'latex':\n      if (arguments.length > 1) {\n        return this.each(function () {\n          var data = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).data(jQueryDataKey);\n          if (data && data.block && data.block.renderLatex) data.block.renderLatex(latex);\n        });\n      }\n\n      var data = this.data(jQueryDataKey);\n      return data && data.block && data.block.latex();\n\n    case 'text':\n      var data = this.data(jQueryDataKey);\n      return data && data.block && data.block.text();\n\n    case 'html':\n      return this.html().replace(/ ?hasCursor|hasCursor /, '').replace(/ class=(\"\"|(?= |>))/g, '').replace(/<span class=\"?cursor( blink)?\"?><\\/span>/i, '').replace(/<span class=\"?textarea\"?><textarea><\\/textarea><\\/span>/i, '');\n\n    case 'write':\n      if (arguments.length > 1) return this.each(function () {\n        var data = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).data(jQueryDataKey),\n            block = data && data.block,\n            cursor = block && block.cursor;\n        if (cursor) cursor.writeLatex(latex).parent.blur();\n      });\n\n    case 'cmd':\n      if (arguments.length > 1) return this.each(function () {\n        var data = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).data(jQueryDataKey),\n            block = data && data.block,\n            cursor = block && block.cursor;\n\n        if (cursor) {\n          cursor.show();\n\n          if (/^\\\\[a-z]+$/i.test(latex)) {\n            if (cursor.selection) {\n              //gotta do cursor before cursor.selection is mutated by 'new cmd(cursor.selection)'\n              cursor.prev = cursor.selection.prev;\n              cursor.next = cursor.selection.next;\n            }\n\n            cursor.insertCmd(latex.slice(1), cursor.selection);\n            delete cursor.selection;\n          } else cursor.insertCh(latex);\n\n          cursor.hide().parent.blur();\n        }\n      });\n\n    default:\n      var textbox = cmd === 'textbox',\n          include_toolbar = cmd === 'editor',\n          editable = include_toolbar || textbox || cmd === 'editable',\n          RootBlock = textbox ? RootTextBlock : RootMathBlock;\n      return this.each(function () {\n        createRoot(jquery__WEBPACK_IMPORTED_MODULE_1___default()(this), new RootBlock(), textbox, editable, include_toolbar);\n      });\n  }\n}; //on document ready, mathquill-ify all `<tag class=\"mathquill-*\">latex</tag>`\n//elements according to their CSS class.\n\n\njquery__WEBPACK_IMPORTED_MODULE_1___default()(() => {\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()('.mathquill-editable:not(.mathquill-rendered-math)').mathquill('editable');\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()('.mathquill-editor').mathquill('editor');\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()('.mathquill-textbox:not(.mathquill-rendered-math)').mathquill('textbox');\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()('.mathquill-embedded-latex').mathquill();\n});\n\n//# sourceURL=webpack:///./ui/shared/mathquill/index.js?");

/***/ }),

/***/ "G3gn":
/*!*************************************************************!*\
  !*** ./ui/shared/rce/backbone/views/EquationToolbarView.js ***!
  \*************************************************************/
/*! exports provided: disableMathJaxMenu, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disableMathJaxMenu\", function() { return disableMathJaxMenu; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EquationToolbarView; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"ouhR\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _canvas_backbone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @canvas/backbone */ \"mX+G\");\n/* harmony import */ var _canvas_backbone__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_canvas_backbone__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _jst_EquationToolbarView_handlebars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../jst/EquationToolbarView.handlebars */ \"V/nX\");\n/* harmony import */ var mathml__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mathml */ \"ph9R\");\n/* harmony import */ var _canvas_mathquill__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @canvas/mathquill */ \"EzVb\");\n//\n// Copyright (C) 2013 - present Instructure, Inc.\n//\n// This file is part of Canvas.\n//\n// Canvas is free software: you can redistribute it and/or modify it under\n// the terms of the GNU Affero General Public License as published by the Free\n// Software Foundation, version 3 of the License.\n//\n// Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n// A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n// details.\n//\n// You should have received a copy of the GNU Affero General Public License along\n// with this program. If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\nfunction disableMathJaxMenu(isDisabled) {\n  var _window$MathJax;\n\n  // even with the z-index issue solved, opening the sub-menus\n  // doesn't work with the mouse. Maybe the equation editor modal\n  // is consuming the mouse events?\n  // for now, turn it off while the editor is open.\n  if ((_window$MathJax = window.MathJax) !== null && _window$MathJax !== void 0 && _window$MathJax.Hub) {\n    window.MathJax.Hub.config.showMathMenu = !isDisabled;\n    window.MathJax.Hub.config.inTabOrder = !isDisabled;\n  }\n}\nclass EquationToolbarView extends _canvas_backbone__WEBPACK_IMPORTED_MODULE_1___default.a.View {\n  static initClass() {\n    this.prototype.template = _jst_EquationToolbarView_handlebars__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    this.prototype.els = {\n      '#mathjax-view .mathquill-toolbar': '$toolbar',\n      '#mathjax-editor': '$matheditor'\n    };\n  }\n\n  render() {\n    this.cacheEls();\n    this.$toolbar.append(this.template());\n    const $tabLinks = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#mathjax-view .mathquill-tab-bar li a');\n    $tabLinks.click(function (e) {\n      e.preventDefault();\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#mathjax-view .mathquill-tab-bar li').removeClass('mathquill-tab-selected');\n      $tabLinks.attr('aria-selected', 'false').attr('tabindex', '-1');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#mathjax-view .mathquill-tab-pane').removeClass('mathquill-tab-pane-selected');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent().addClass('mathquill-tab-selected');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr('aria-selected', 'true').attr('tabindex', 0).focus();\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.href.replace(/.*#/, '#')).addClass('mathquill-tab-pane-selected');\n    }).keydown(function (e) {\n      let direction;\n\n      switch (e.keyCode) {\n        case 37:\n          direction = 'l';\n          break;\n\n        case 39:\n          direction = 'r';\n          break;\n\n        default:\n          return true;\n      }\n\n      e.preventDefault();\n      let listIndex = $tabLinks.index(this); // Don't fall off the right end of the list.\n      // No need to worry about falling off the left end, as .get accepts negative indexes.\n\n      if (listIndex === $tabLinks.length - 1 && direction === 'r') listIndex = -1;\n\n      if (direction === 'r') {\n        listIndex++;\n      } else {\n        listIndex--;\n      }\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()($tabLinks.get(listIndex)).focus().click();\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#mathjax-view .mathquill-tab-bar li:first-child').addClass('mathquill-tab-selected');\n    return mathml__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadMathJax(void 0, this.addMathJaxEvents.bind(this));\n  }\n\n  addMathJaxEvents() {\n    function renderPreview() {\n      const jax = window.MathJax.Hub.getAllJax('mathjax-preview')[0];\n\n      if (jax) {\n        const tex = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#mathjax-editor').val();\n        return window.MathJax.Hub.Queue(['Text', jax, tex]);\n      }\n    }\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#mathjax-view a.mathquill-rendered-math').mousedown(e => e.stopPropagation()).click(function (e) {\n      e.preventDefault();\n      const text = this.title + ' ';\n      const field = document.getElementById('mathjax-editor');\n\n      if (document.selection) {\n        const sel = document.selection.createRange();\n        sel.text = text;\n      } else if (field.selectionStart || field.selectionStart === '0') {\n        const s = field.selectionStart;\n        e = field.selectionEnd;\n        const val = field.value;\n        field.value = val.substring(0, s) + text + val.substring(e, val.length);\n      } else {\n        field.value += text;\n      }\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(field).focus();\n      return renderPreview();\n    });\n    this.renderPreview = renderPreview;\n    this.$matheditor.keyup(renderPreview);\n    this.$matheditor.bind('paste', renderPreview);\n    disableMathJaxMenu(true);\n  }\n\n}\nEquationToolbarView.initClass();\n\n//# sourceURL=webpack:///./ui/shared/rce/backbone/views/EquationToolbarView.js?");

/***/ }),

/***/ "QKdO":
/*!*********************************************************************************************!*\
  !*** ./frontend_build/i18n.js?tinymce.equation_editor_view!./ui/shims/dummyI18nResource.js ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @canvas/i18n/i18nObj */ \"HGxv\");\n/* harmony import */ var translations_core_en__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! translations/_core_en */ \"0sPK\");\n\n    \n    \n    \n\n    /* harmony default export */ __webpack_exports__[\"default\"] = (_canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scoped('tinymce.equation_editor_view'));\n  \n\n//# sourceURL=webpack:///./ui/shims/dummyI18nResource.js?./frontend_build/i18n.js?tinymce.equation_editor_view");

/***/ }),

/***/ "QLaP":
/*!*******************************************!*\
  !*** ./node_modules/invariant/browser.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (true) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n//# sourceURL=webpack:///./node_modules/invariant/browser.js?");

/***/ }),

/***/ "V/nX":
/*!**********************************************************!*\
  !*** ./ui/shared/rce/jst/EquationToolbarView.handlebars ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var handlebars_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! handlebars/runtime */ \"3O+N\");\n/* harmony import */ var handlebars_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(handlebars_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var i18n_tinymce_equation_toolbar_view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! i18n!tinymce.equation_toolbar_view */ \"wPxr\");\n/* harmony import */ var _canvas_handlebars_helpers_index_coffee__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @canvas/handlebars-helpers/index.coffee */ \"BGrI\");\n\n    \n    var Handlebars = handlebars_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.default;\n    \n\n\n    var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\n    var name = '/home/td/workspace/canvas/ui/shared/rce/jst/EquationToolbarView';\n    templates[name] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<ul class=\\\"mathquill-tab-bar\\\" role=\\\"tablist\\\">\\n  <li class=\\\"\\\">\\n    <a href=\\\"#basic_tab\\\" aria-controls=\\\"basic_tab\\\" aria-selected=\\\"true\\\" role=\\\"tab\\\"\\n      tabindex=\\\"0\\\" aria-label=\\\"\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.basic\", \"Basic\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.basic\", \"Basic\", options)))\n    + \"\\\"\\n    >\\n      <span class=\\\"mathquill-rendered-math\\\">+</span>\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.basic\", \"Basic\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.basic\", \"Basic\", options)))\n    + \"\\n    </a>\\n  </li>\\n  <li class=\\\"\\\">\\n    <a href=\\\"#greek_tab\\\" aria-controls=\\\"greek_tab\\\" aria-selected=\\\"false\\\" role=\\\"tab\\\"\\n      tabindex=\\\"-1\\\" aria-label=\\\"\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.greek\", \"Greek\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.greek\", \"Greek\", options)))\n    + \"\\\"\\n    >\\n      <span class=\\\"mathquill-rendered-math\\\">π</span>\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.greek\", \"Greek\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.greek\", \"Greek\", options)))\n    + \"\\n    </a>\\n  </li>\\n  <li class=\\\"\\\">\\n    <a href=\\\"#operators_tab\\\" aria-controls=\\\"operators_tab\\\" aria-selected=\\\"false\\\" role=\\\"tab\\\"\\n      tabindex=\\\"-1\\\"  aria-label=\\\"\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.operators\", \"Operators\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.operators\", \"Operators\", options)))\n    + \"\\\"\\n    >\\n      <span class=\\\"mathquill-rendered-math\\\" >⊕</span>\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.operators\", \"Operators\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.operators\", \"Operators\", options)))\n    + \"\\n    </a>\\n  </li>\\n  <li class=\\\"\\\">\\n    <a href=\\\"#relationships_tab\\\" aria-controls=\\\"relationships_tab\\\" aria-selected=\\\"false\\\" role=\\\"tab\\\"\\n      tabindex=\\\"-1\\\" aria-label=\\\"\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.relationships\", \"Relationships\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.relationships\", \"Relationships\", options)))\n    + \"\\\"\\n    >\\n      <span class=\\\"mathquill-rendered-math\\\">≤</span>\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.relationships\", \"Relationships\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.relationships\", \"Relationships\", options)))\n    + \"\\n    </a>\\n  </li>\\n  <li class=\\\"\\\">\\n    <a href=\\\"#arrows_tab\\\" aria-controls=\\\"arrows_tab\\\" aria-selected=\\\"false\\\" role=\\\"tab\\\"\\n      tabindex=\\\"-1\\\" aria-label=\\\"\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.arrows\", \"Arrows\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.arrows\", \"Arrows\", options)))\n    + \"\\\"\\n    >\\n      <span class=\\\"mathquill-rendered-math\\\">⇔</span>\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.arrows\", \"Arrows\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.arrows\", \"Arrows\", options)))\n    + \"\\n    </a>\\n  </li>\\n  <li class=\\\"\\\">\\n    <a href=\\\"#delimiters_tab\\\" aria-controls=\\\"delimiters_tab\\\" aria-selected=\\\"false\\\" role=\\\"tab\\\"\\n      tabindex=\\\"-1\\\" aria-label=\\\"\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.delimiters\", \"Delimiters\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.delimiters\", \"Delimiters\", options)))\n    + \"\\\"\\n    >\\n      <span class=\\\"mathquill-rendered-math\\\">{</span>\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.delimiters\", \"Delimiters\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.delimiters\", \"Delimiters\", options)))\n    + \"\\n    </a>\\n  </li>\\n  <li class=\\\"\\\">\\n    <a href=\\\"#misc_tab\\\" aria-controls=\\\"misc_tab\\\" aria-selected=\\\"false\\\" role=\\\"tab\\\"\\n      tabindex=\\\"-1\\\" aria-label=\\\"\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.misc\", \"Misc\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.misc\", \"Misc\", options)))\n    + \"\\\"\\n    >\\n      <span class=\\\"mathquill-rendered-math\\\" >∞</span>\"\n    + escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{\n    'scope': (\"tinymce.equation_toolbar_view\")\n  },data:data},helper ? helper.call(depth0, \"#editor.tabs.misc\", \"Misc\", options) : helperMissing.call(depth0, \"t\", \"#editor.tabs.misc\", \"Misc\", options)))\n    + \"\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"mathquill-toolbar-panes\\\">\\n  <div class=\\\"mathquill-tab-pane mathquill-tab-pane-selected\\\" id=\\\"basic_tab\\\" role=\\\"tabpanel\\\">\\n    <ul>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"_{sub}\\\" aria-label=\\\"_{sub}\\\"><sub\\n          style=\\\"font-size: 0.6em; line-height: 3.5;\\\">sub</sub></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"^{sup}\\\" aria-label=\\\"^{sup}\\\"><sup style=\\\"font-size: 0.6em\\\">sup</sup></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\frac{n}{m}\\\" aria-label=\\\"\\\\frac{n}{m}\\\"><span style=\\\"font-size: 0.55em; vertical-align: middle\\\"\\n                                                                 class=\\\"fraction\\\"><span class=\\\"numerator\\\"><var>n</var></span><span\\n          class=\\\"denominator\\\"><var>m</var></span><span style=\\\"width:0\\\"></span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sqrt{x}\\\" aria-label=\\\"\\\\sqrt{x}\\\"><span class=\\\"block\\\"><span class=\\\"sqrt-prefix\\\">√</span><span\\n          class=\\\"sqrt-stem\\\">&nbsp;</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sqrt[n]{x}\\\" aria-label=\\\"\\\\sqrt[n]{x}\\\"><span style=\\\"font-size: 0.7em\\\"><sup\\n          class=\\\"nthroot\\\"><var>n</var></sup><span class=\\\"block\\\"><span class=\\\"sqrt-prefix\\\">√</span><span\\n          class=\\\"sqrt-stem\\\">&nbsp;</span></span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\langle \\\\rangle\\\" aria-label=\\\"\\\\langle \\\\rangle\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"block\\\"><span class=\\\"paren\\\">⟨</span><span class=\\\"block\\\"></span><span\\n          class=\\\"paren\\\">⟩</span></span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\binom{n}{m}\\\" aria-label=\\\"\\\\binom{n}{m}\\\"><span style=\\\"font-size: 0.48em\\\"><span class=\\\"paren\\\"\\n                                                                                                    style=\\\"font-size: 2.087912087912088em; \\\">(</span><span\\n          class=\\\"array\\\"><span><var>n</var></span><span><var>m</var></span></span><span class=\\\"paren\\\"\\n                                                                                       style=\\\"font-size: 2.087912087912088em; \\\">)</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\begin{matrix} 1 \\\\\\\\ 2 \\\\\\\\ 3 \\\\end{matrix}\\\" aria-label=\\\"\\\\begin{matrix} 1 \\\\\\\\ 2 \\\\\\\\ 3 \\\\end{matrix}\\\"><span class=\\\"array\\\"\\n                                                                   style=\\\"vertical-align: middle; font-size: 0.4em; line-height: 0.9em\\\"><span>1</span><span>2</span><span>3</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"f\\\" aria-label=\\\"f\\\"><span style=\\\"line-height: 1.5em\\\"><var\\n          class=\\\"florin\\\">ƒ</var><span style=\\\"display:inline-block;width:0\\\">&nbsp;</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\prime\\\" aria-label=\\\"\\\\prime\\\"><span style=\\\"line-height: 1.5em\\\"><span>′</span></span></a>\\n      </li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"+\\\" aria-label=\\\"+\\\"><span style=\\\"line-height: 1.5em\\\"><span>+</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"-\\\" aria-label=\\\"-\\\"><span style=\\\"line-height: 1.5em\\\"><span>−</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\pm\\\" aria-label=\\\"\\\\pm\\\"><span style=\\\"line-height: 1.5em\\\"><span>±</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mp\\\" aria-label=\\\"\\\\mp\\\"><span style=\\\"line-height: 1.5em\\\"><span>∓</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\cdot\\\" aria-label=\\\"\\\\cdot\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">·</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"=\\\" aria-label=\\\"=\\\"><span style=\\\"line-height: 1.5em\\\"><span class=\\\"binary-operator\\\">=</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\times\\\" aria-label=\\\"\\\\times\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">×</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\div\\\" aria-label=\\\"\\\\div\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">÷</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\ast\\\" aria-label=\\\"\\\\ast\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∗</span></span></a></li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\therefore\\\" aria-label=\\\"\\\\therefore\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∴</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\because\\\" aria-label=\\\"\\\\because\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∵</span></span></a></li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sum{n}\\\" aria-label=\\\"\\\\sum{n}\\\"><span style=\\\"line-height: 1.5em\\\"><big>∑</big></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\prod{n}\\\" aria-label=\\\"\\\\prod{n}\\\"><span style=\\\"line-height: 1.5em\\\"><big>∏</big></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\coprod{n}\\\" aria-label=\\\"\\\\coprod{n}\\\"><span style=\\\"line-height: 1.5em\\\"><big>∐</big></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\int{x}\\\" aria-label=\\\"\\\\int{x}\\\"><span style=\\\"line-height: 1.5em\\\"><big>∫</big></span></a>\\n      </li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mathbb{N}\\\" aria-label=\\\"\\\\mathbb{N}\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℕ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mathbb{P}\\\" aria-label=\\\"\\\\mathbb{P}\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℙ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mathbb{Z}\\\" aria-label=\\\"\\\\mathbb{Z}\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℤ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mathbb{Q}\\\" aria-label=\\\"\\\\mathbb{Q}\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℚ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mathbb{R}\\\" aria-label=\\\"\\\\mathbb{R}\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℝ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mathbb{C}\\\" aria-label=\\\"\\\\mathbb{C}\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℂ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mathbb{H}\\\" aria-label=\\\"\\\\mathbb{H}\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℍ</span></span></a>\\n      </li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"mathquill-tab-pane\\\" id=\\\"greek_tab\\\" role=\\\"tabpanel\\\">\\n    <ul>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\alpha\\\" aria-label=\\\"\\\\alpha\\\"><span style=\\\"line-height: 1.5em\\\"><var>α</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\beta\\\" aria-label=\\\"\\\\beta\\\"><span style=\\\"line-height: 1.5em\\\"><var>β</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\gamma\\\" aria-label=\\\"\\\\gamma\\\"><span style=\\\"line-height: 1.5em\\\"><var>γ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\delta\\\" aria-label=\\\"\\\\delta\\\"><span style=\\\"line-height: 1.5em\\\"><var>δ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\epsilon\\\" aria-label=\\\"\\\\epsilon\\\"><span style=\\\"line-height: 1.5em\\\"><var>ϵ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\zeta\\\" aria-label=\\\"\\\\zeta\\\"><span style=\\\"line-height: 1.5em\\\"><var>ζ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\eta\\\" aria-label=\\\"\\\\eta\\\"><span style=\\\"line-height: 1.5em\\\"><var>η</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\theta\\\" aria-label=\\\"\\\\theta\\\"><span style=\\\"line-height: 1.5em\\\"><var>θ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\iota\\\" aria-label=\\\"\\\\iota\\\"><span style=\\\"line-height: 1.5em\\\"><var>ι</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\kappa\\\" aria-label=\\\"\\\\kappa\\\"><span style=\\\"line-height: 1.5em\\\"><var>κ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\lambda\\\" aria-label=\\\"\\\\lambda\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"nonSymbola\\\">λ</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mu\\\" aria-label=\\\"\\\\mu\\\"><span style=\\\"line-height: 1.5em\\\"><var>μ</var></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\nu\\\" aria-label=\\\"\\\\nu\\\"><span style=\\\"line-height: 1.5em\\\"><var>ν</var></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\xi\\\" aria-label=\\\"\\\\xi\\\"><span style=\\\"line-height: 1.5em\\\"><var>ξ</var></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\pi\\\" aria-label=\\\"\\\\pi\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"nonSymbola\\\">π</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\rho\\\" aria-label=\\\"\\\\rho\\\"><span style=\\\"line-height: 1.5em\\\"><var>ρ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sigma\\\" aria-label=\\\"\\\\sigma\\\"><span style=\\\"line-height: 1.5em\\\"><var>σ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\tau\\\" aria-label=\\\"\\\\tau\\\"><span style=\\\"line-height: 1.5em\\\"><var>τ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\upsilon\\\" aria-label=\\\"\\\\upsilon\\\"><span style=\\\"line-height: 1.5em\\\"><var>υ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\phi\\\" aria-label=\\\"\\\\phi\\\"><span style=\\\"line-height: 1.5em\\\"><var>ϕ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\chi\\\" aria-label=\\\"\\\\chi\\\"><span style=\\\"line-height: 1.5em\\\"><var>χ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\psi\\\" aria-label=\\\"\\\\psi\\\"><span style=\\\"line-height: 1.5em\\\"><var>ψ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\omega\\\" aria-label=\\\"\\\\omega\\\"><span style=\\\"line-height: 1.5em\\\"><var>ω</var></span></a>\\n      </li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\digamma\\\" aria-label=\\\"\\\\digamma\\\"><span style=\\\"line-height: 1.5em\\\"><var>ϝ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\varepsilon\\\" aria-label=\\\"\\\\varepsilon\\\"><span style=\\\"line-height: 1.5em\\\"><var>ε</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\vartheta\\\" aria-label=\\\"\\\\vartheta\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><var>ϑ</var></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\varkappa\\\" aria-label=\\\"\\\\varkappa\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><var>ϰ</var></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\varpi\\\" aria-label=\\\"\\\\varpi\\\"><span style=\\\"line-height: 1.5em\\\"><var>ϖ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\varrho\\\" aria-label=\\\"\\\\varrho\\\"><span style=\\\"line-height: 1.5em\\\"><var>ϱ</var></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\varsigma\\\" aria-label=\\\"\\\\varsigma\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><var>ς</var></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\varphi\\\" aria-label=\\\"\\\\varphi\\\"><span style=\\\"line-height: 1.5em\\\"><var>φ</var></span></a>\\n      </li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Gamma\\\" aria-label=\\\"\\\\Gamma\\\"><span style=\\\"line-height: 1.5em\\\"><span>Γ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Delta\\\" aria-label=\\\"\\\\Delta\\\"><span style=\\\"line-height: 1.5em\\\"><span>Δ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Theta\\\" aria-label=\\\"\\\\Theta\\\"><span style=\\\"line-height: 1.5em\\\"><span>Θ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Lambda\\\" aria-label=\\\"\\\\Lambda\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>Λ</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Xi\\\" aria-label=\\\"\\\\Xi\\\"><span style=\\\"line-height: 1.5em\\\"><span>Ξ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Pi\\\" aria-label=\\\"\\\\Pi\\\"><span style=\\\"line-height: 1.5em\\\"><span>Π</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Sigma\\\" aria-label=\\\"\\\\Sigma\\\"><span style=\\\"line-height: 1.5em\\\"><span>Σ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Upsilon\\\" aria-label=\\\"\\\\Upsilon\\\"><span style=\\\"line-height: 1.5em\\\"><var\\n          style=\\\"font-family: serif\\\">ϒ</var></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Phi\\\" aria-label=\\\"\\\\Phi\\\"><span style=\\\"line-height: 1.5em\\\"><span>Φ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Psi\\\" aria-label=\\\"\\\\Psi\\\"><span style=\\\"line-height: 1.5em\\\"><span>Ψ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Omega\\\" aria-label=\\\"\\\\Omega\\\"><span style=\\\"line-height: 1.5em\\\"><span>Ω</span></span></a>\\n      </li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"mathquill-tab-pane\\\" id=\\\"operators_tab\\\" role=\\\"tabpanel\\\">\\n    <ul>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\wedge\\\" aria-label=\\\"\\\\wedge\\\"><span style=\\\"line-height: 1.5em\\\"><span>∧</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\vee\\\" aria-label=\\\"\\\\vee\\\"><span style=\\\"line-height: 1.5em\\\"><span>∨</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\cup\\\" aria-label=\\\"\\\\cup\\\"><span style=\\\"line-height: 1.5em\\\"><span>∪</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\cap\\\" aria-label=\\\"\\\\cap\\\"><span style=\\\"line-height: 1.5em\\\"><span>∩</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\diamond\\\" aria-label=\\\"\\\\diamond\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>◇</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\bigtriangleup\\\" aria-label=\\\"\\\\bigtriangleup\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>△</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\ominus\\\" aria-label=\\\"\\\\ominus\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⊖</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\uplus\\\" aria-label=\\\"\\\\uplus\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊎</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\otimes\\\" aria-label=\\\"\\\\otimes\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊗</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\oplus\\\" aria-label=\\\"\\\\oplus\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊕</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\bigtriangledown\\\" aria-label=\\\"\\\\bigtriangledown\\\"><span style=\\\"line-height: 1.5em\\\"><span>▽</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sqcap\\\" aria-label=\\\"\\\\sqcap\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊓</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\triangleleft\\\" aria-label=\\\"\\\\triangleleft\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⊲</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sqcup\\\" aria-label=\\\"\\\\sqcup\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊔</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\triangleright\\\" aria-label=\\\"\\\\triangleright\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⊳</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\odot\\\" aria-label=\\\"\\\\odot\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊙</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\bigcirc\\\" aria-label=\\\"\\\\bigcirc\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>◯</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\dagger\\\" aria-label=\\\"\\\\dagger\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>†</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\ddagger\\\" aria-label=\\\"\\\\ddagger\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>‡</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\wr\\\" aria-label=\\\"\\\\wr\\\"><span style=\\\"line-height: 1.5em\\\"><span>≀</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\amalg\\\" aria-label=\\\"\\\\amalg\\\"><span style=\\\"line-height: 1.5em\\\"><span>∐</span></span></a>\\n      </li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"mathquill-tab-pane\\\" id=\\\"relationships_tab\\\" role=\\\"tabpanel\\\">\\n    <ul>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"&lt;\\\" aria-label=\\\"&lt;\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">&lt;</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"&gt;\\\" aria-label=\\\"&gt;\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">&gt;</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\equiv\\\" aria-label=\\\"\\\\equiv\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">≡</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\cong\\\" aria-label=\\\"\\\\cong\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">≅</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sim\\\" aria-label=\\\"\\\\sim\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∼</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\not\\\\in\\\" aria-label=\\\"\\\\not\\\\in\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∉</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\ne\\\" aria-label=\\\"\\\\ne\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">≠</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\propto\\\" aria-label=\\\"\\\\propto\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∝</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\approx\\\" aria-label=\\\"\\\\approx\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">≈</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\le\\\" aria-label=\\\"\\\\le\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">≤</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\ge\\\" aria-label=\\\"\\\\ge\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">≥</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\in\\\" aria-label=\\\"\\\\in\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∈</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\ni\\\" aria-label=\\\"\\\\ni\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∋</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\not\\\\ni\\\" aria-label=\\\"\\\\not\\\\ni\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∌</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\subset\\\" aria-label=\\\"\\\\subset\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊂</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\supset\\\" aria-label=\\\"\\\\supset\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊃</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\not\\\\subset\\\" aria-label=\\\"\\\\not\\\\subset\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊄</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\not\\\\supset\\\" aria-label=\\\"\\\\not\\\\supset\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊅</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\subseteq\\\" aria-label=\\\"\\\\subseteq\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊆</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\supseteq\\\" aria-label=\\\"\\\\supseteq\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊇</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\not\\\\subseteq\\\" aria-label=\\\"\\\\not\\\\subseteq\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊈</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\not\\\\supseteq\\\" aria-label=\\\"\\\\not\\\\supseteq\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">⊉</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\models\\\" aria-label=\\\"\\\\models\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⊨</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\prec\\\" aria-label=\\\"\\\\prec\\\"><span style=\\\"line-height: 1.5em\\\"><span>≺</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\succ\\\" aria-label=\\\"\\\\succ\\\"><span style=\\\"line-height: 1.5em\\\"><span>≻</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\preceq\\\" aria-label=\\\"\\\\preceq\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>≼</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\succeq\\\" aria-label=\\\"\\\\succeq\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>≽</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\simeq\\\" aria-label=\\\"\\\\simeq\\\"><span style=\\\"line-height: 1.5em\\\"><span>≃</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mid\\\" aria-label=\\\"\\\\mid\\\"><span style=\\\"line-height: 1.5em\\\"><span>∣</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\ll\\\" aria-label=\\\"\\\\ll\\\"><span style=\\\"line-height: 1.5em\\\"><span>≪</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\gg\\\" aria-label=\\\"\\\\gg\\\"><span style=\\\"line-height: 1.5em\\\"><span>≫</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\parallel\\\" aria-label=\\\"\\\\parallel\\\"><span style=\\\"line-height: 1.5em\\\"><span>∥</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\bowtie\\\" aria-label=\\\"\\\\bowtie\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⋈</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sqsubset\\\" aria-label=\\\"\\\\sqsubset\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊏</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sqsupset\\\" aria-label=\\\"\\\\sqsupset\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊐</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\smile\\\" aria-label=\\\"\\\\smile\\\"><span style=\\\"line-height: 1.5em\\\"><span>⌣</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sqsubseteq\\\" aria-label=\\\"\\\\sqsubseteq\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⊑</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sqsupseteq\\\" aria-label=\\\"\\\\sqsupseteq\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⊒</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\doteq\\\" aria-label=\\\"\\\\doteq\\\"><span style=\\\"line-height: 1.5em\\\"><span>≐</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\frown\\\" aria-label=\\\"\\\\frown\\\"><span style=\\\"line-height: 1.5em\\\"><span>⌢</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\vdash\\\" aria-label=\\\"\\\\vdash\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊦</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\dashv\\\" aria-label=\\\"\\\\dashv\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊣</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\exists\\\" aria-label=\\\"\\\\exists\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>∃</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\varnothing\\\" aria-label=\\\"\\\\varnothing\\\"><span style=\\\"line-height: 1.5em\\\"><span\\n          class=\\\"binary-operator\\\">∅</span></span></a></li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"mathquill-tab-pane\\\" id=\\\"arrows_tab\\\" role=\\\"tabpanel\\\">\\n    <ul>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\longleftarrow\\\" aria-label=\\\"\\\\longleftarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>←</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\longrightarrow\\\" aria-label=\\\"\\\\longrightarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>→</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Longleftarrow\\\" aria-label=\\\"\\\\Longleftarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⇐</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Longrightarrow\\\" aria-label=\\\"\\\\Longrightarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⇒</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\longleftrightarrow\\\" aria-label=\\\"\\\\longleftrightarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↔</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\updownarrow\\\" aria-label=\\\"\\\\updownarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↕</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Longleftrightarrow\\\" aria-label=\\\"\\\\Longleftrightarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⇔</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Updownarrow\\\" aria-label=\\\"\\\\Updownarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⇕</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\mapsto\\\" aria-label=\\\"\\\\mapsto\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↦</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\nearrow\\\" aria-label=\\\"\\\\nearrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↗</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\hookleftarrow\\\" aria-label=\\\"\\\\hookleftarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↩</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\hookrightarrow\\\" aria-label=\\\"\\\\hookrightarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↪</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\searrow\\\" aria-label=\\\"\\\\searrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↘</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\leftharpoonup\\\" aria-label=\\\"\\\\leftharpoonup\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↼</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\rightharpoonup\\\" aria-label=\\\"\\\\rightharpoonup\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⇀</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\swarrow\\\" aria-label=\\\"\\\\swarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↙</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\leftharpoondown\\\" aria-label=\\\"\\\\leftharpoondown\\\"><span style=\\\"line-height: 1.5em\\\"><span>↽</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\rightharpoondown\\\" aria-label=\\\"\\\\rightharpoondown\\\"><span style=\\\"line-height: 1.5em\\\"><span>⇁</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\nwarrow\\\" aria-label=\\\"\\\\nwarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↖</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\downarrow\\\" aria-label=\\\"\\\\downarrow\\\"><span style=\\\"line-height: 1.5em\\\"><span>↓</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Downarrow\\\" aria-label=\\\"\\\\Downarrow\\\"><span style=\\\"line-height: 1.5em\\\"><span>⇓</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\uparrow\\\" aria-label=\\\"\\\\uparrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↑</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Uparrow\\\" aria-label=\\\"\\\\Uparrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⇑</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\rightarrow\\\" aria-label=\\\"\\\\rightarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>→</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Rightarrow\\\" aria-label=\\\"\\\\Rightarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⇒</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\leftarrow\\\" aria-label=\\\"\\\\leftarrow\\\"><span style=\\\"line-height: 1.5em\\\"><span>←</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Leftarrow\\\" aria-label=\\\"\\\\Leftarrow\\\"><span style=\\\"line-height: 1.5em\\\"><span>⇐</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\leftrightarrow\\\" aria-label=\\\"\\\\leftrightarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>↔</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Leftrightarrow\\\" aria-label=\\\"\\\\Leftrightarrow\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⇔</span></span></a></li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"mathquill-tab-pane\\\" id=\\\"delimiters_tab\\\" role=\\\"tabpanel\\\">\\n    <ul>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\lfloor\\\" aria-label=\\\"\\\\lfloor\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⌊</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\rfloor\\\" aria-label=\\\"\\\\rfloor\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>⌋</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\lceil\\\" aria-label=\\\"\\\\lceil\\\"><span style=\\\"line-height: 1.5em\\\"><span>⌈</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\rceil\\\" aria-label=\\\"\\\\rceil\\\"><span style=\\\"line-height: 1.5em\\\"><span>⌉</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\slash\\\" aria-label=\\\"\\\\slash\\\"><span style=\\\"line-height: 1.5em\\\"><span>/</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\lbrace\\\" aria-label=\\\"\\\\lbrace\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>{</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\rbrace\\\" aria-label=\\\"\\\\rbrace\\\"><span style=\\\"line-height: 1.5em\\\"><span>}</span></span></a>\\n      </li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"mathquill-tab-pane\\\" id=\\\"misc_tab\\\" role=\\\"tabpanel\\\">\\n    <ul>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\forall\\\" aria-label=\\\"\\\\forall\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>∀</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\ldots\\\" aria-label=\\\"\\\\ldots\\\"><span style=\\\"line-height: 1.5em\\\"><span>…</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\cdots\\\" aria-label=\\\"\\\\cdots\\\"><span style=\\\"line-height: 1.5em\\\"><span>⋯</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\vdots\\\" aria-label=\\\"\\\\vdots\\\"><span style=\\\"line-height: 1.5em\\\"><span>⋮</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\unicode{8944}\\\" aria-label=\\\"\\\\unicode{8944}\\\"><span style=\\\"line-height: 1.5em\\\"><span>⋰</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\surd\\\" aria-label=\\\"\\\\surd\\\"><span style=\\\"line-height: 1.5em\\\"><span>√</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\triangle\\\" aria-label=\\\"\\\\triangle\\\"><span style=\\\"line-height: 1.5em\\\"><span>▵</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\ell\\\" aria-label=\\\"\\\\ell\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℓ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\top\\\" aria-label=\\\"\\\\top\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊤</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\flat\\\" aria-label=\\\"\\\\flat\\\"><span style=\\\"line-height: 1.5em\\\"><span>♭</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\natural\\\" aria-label=\\\"\\\\natural\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>♮</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\sharp\\\" aria-label=\\\"\\\\sharp\\\"><span style=\\\"line-height: 1.5em\\\"><span>♯</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\wp\\\" aria-label=\\\"\\\\wp\\\"><span style=\\\"line-height: 1.5em\\\"><span>℘</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\bot\\\" aria-label=\\\"\\\\bot\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊥</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\clubsuit\\\" aria-label=\\\"\\\\clubsuit\\\"><span style=\\\"line-height: 1.5em\\\"><span>♣</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\diamondsuit\\\" aria-label=\\\"\\\\diamondsuit\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>♢</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\heartsuit\\\" aria-label=\\\"\\\\heartsuit\\\"><span style=\\\"line-height: 1.5em\\\"><span>♡</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\spadesuit\\\" aria-label=\\\"\\\\spadesuit\\\"><span style=\\\"line-height: 1.5em\\\"><span>♠</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\unicode{94}\\\" aria-label=\\\"\\\\unicode{94}\\\"><span style=\\\"line-height: 1.5em\\\"><span>^</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\unicode{95}\\\" aria-label=\\\"\\\\unicode{95}\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>_</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\backslash\\\" aria-label=\\\"\\\\backslash\\\"><span style=\\\"line-height: 1.5em\\\"><span>\\\\</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\vert\\\" aria-label=\\\"\\\\vert\\\"><span style=\\\"line-height: 1.5em\\\"><span>|</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\perp\\\" aria-label=\\\"\\\\perp\\\"><span style=\\\"line-height: 1.5em\\\"><span>⊥</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\nabla\\\" aria-label=\\\"\\\\nabla\\\"><span style=\\\"line-height: 1.5em\\\"><span>∇</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\hbar\\\" aria-label=\\\"\\\\hbar\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℏ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\unicode{8491}\\\" aria-label=\\\"\\\\unicode{8491}\\\"><span style=\\\"line-height: 1.5em\\\"><span>Å</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\circ\\\" aria-label=\\\"\\\\circ\\\"><span style=\\\"line-height: 1.5em\\\"><span>∘</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\bullet\\\" aria-label=\\\"\\\\bullet\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>•</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\setminus\\\" aria-label=\\\"\\\\setminus\\\"><span style=\\\"line-height: 1.5em\\\"><span>∖</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\neg\\\" aria-label=\\\"\\\\neg\\\"><span style=\\\"line-height: 1.5em\\\"><span>¬</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\dots\\\" aria-label=\\\"\\\\dots\\\"><span style=\\\"line-height: 1.5em\\\"><span>…</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Re\\\" aria-label=\\\"\\\\Re\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℜ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\Im\\\" aria-label=\\\"\\\\Im\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℑ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\partial\\\" aria-label=\\\"\\\\partial\\\"><span\\n          style=\\\"line-height: 1.5em\\\"><span>∂</span></span></a></li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\infty\\\" aria-label=\\\"\\\\infty\\\"><span style=\\\"line-height: 1.5em\\\"><span>∞</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\aleph\\\" aria-label=\\\"\\\\aleph\\\"><span style=\\\"line-height: 1.5em\\\"><span>ℵ</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"^\\\\circ\\\" aria-label=\\\"^\\\\circ\\\"><span style=\\\"line-height: 1.5em\\\"><span>°</span></span></a>\\n      </li>\\n      <li><a href=\\\"#\\\" class=\\\"mathquill-rendered-math\\\" title=\\\"\\\\angle\\\" aria-label=\\\"\\\\angle\\\"><span style=\\\"line-height: 1.5em\\\"><span>∠</span></span></a>\\n      </li>\\n      <li class=\\\"mathquill-button-spacer\\\"></li>\\n    </ul>\\n  </div>\\n</div>\\n\";\n  return buffer;\n  });\n    ;\n    ;\n    /* harmony default export */ __webpack_exports__[\"default\"] = (templates[name]);\n  \n\n//# sourceURL=webpack:///./ui/shared/rce/jst/EquationToolbarView.handlebars?");

/***/ }),

/***/ "dIBj":
/*!************************************************************!*\
  !*** ./ui/shared/rce/backbone/views/EquationEditorView.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EquationEditorView; });\n/* harmony import */ var i18n_EquationEditorView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! i18n!EquationEditorView */ \"pV1m\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"ouhR\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! underscore */ \"Y/W1\");\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(underscore__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _canvas_backbone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @canvas/backbone */ \"mX+G\");\n/* harmony import */ var _canvas_backbone__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_canvas_backbone__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _EquationToolbarView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EquationToolbarView */ \"G3gn\");\n/* harmony import */ var _jst_EquationEditorView_handlebars__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../jst/EquationEditorView.handlebars */ \"3hzt\");\n/* harmony import */ var html_escape__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! html-escape */ \"gI0r\");\n/* harmony import */ var prevent_default__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prevent-default */ \"qqwe\");\n/* harmony import */ var _RceCommandShim__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../RceCommandShim */ \"eodz\");\n/* harmony import */ var jqueryui_dialog__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! jqueryui/dialog */ \"ESjL\");\n/* harmony import */ var _canvas_mathquill__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @canvas/mathquill */ \"EzVb\");\n//\n// Copyright (C) 2012 - present Instructure, Inc.\n//\n// This file is part of Canvas.\n//\n// Canvas is free software: you can redistribute it and/or modify it under\n// the terms of the GNU Affero General Public License as published by the Free\n// Software Foundation, version 3 of the License.\n//\n// Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n// A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n// details.\n//\n// You should have received a copy of the GNU Affero General Public License along\n// with this program. If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n\n\n\n\n\n\nclass EquationEditorView extends _canvas_backbone__WEBPACK_IMPORTED_MODULE_3___default.a.View {\n  static initClass() {\n    this.prototype.template = _jst_EquationEditorView_handlebars__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; // all instances share same element\n\n    this.prototype.el = jquery__WEBPACK_IMPORTED_MODULE_1___default()(document.createElement('div')).appendTo('body')[0];\n    this.prototype.els = {\n      '#mathquill-view': '$mathquillView',\n      '#mathquill-container': '$mathquillContainer',\n      '#mathjax-view': '$mathjaxView',\n      '#mathjax-editor': '$mathjaxEditor',\n      '#mathjax-message': '$mathjaxMessage'\n    };\n  } // #\n  // class method\n  //\n  // like $.text() / Sizzle.getText(elems), except it also gets alt\n  //   attributes from images\n  //\n  // @param {jquery object} elems The collection of elements (or the\n  // singular jquery element) that represents the currently selected\n  //   thing in the editor to turn into an equation\n\n\n  static getEquationText(elems) {\n    const self = this;\n    return underscore__WEBPACK_IMPORTED_MODULE_2___default.a.map(elems, elem => {\n      // Get the text from text nodes and CDATA nodes\n      if ([3, 4].includes(elem.nodeType)) {\n        if (elem.nodeValue.match(/^<img/)) {\n          // if the \"text\" is really just an unparsed \"img\" node\n          // then we really want the alt element\n          return self.getEquationText(jquery__WEBPACK_IMPORTED_MODULE_1___default()(elem.nodeValue));\n        } else {\n          // if we're editing inline LaTex, strip the delimiters\n          // if the selection included them\n          return elem.nodeValue.trim().replace(/^(?:\\\\\\(|\\$\\$)(.*)*(?:\\\\\\)|\\$\\$)$/g, '$1');\n        } // Get alt attributes from IMG nodes\n\n      } else if (elem.nodeName === 'IMG' && elem.className === 'equation_image') {\n        if (elem.dataset.equationContent) {\n          return elem.dataset.equationContent;\n        } else {\n          return elem.alt;\n        } // Traverse everything else, except comment nodes\n\n      } else if (elem.nodeType !== 8) {\n        return self.getEquationText(elem.childNodes);\n      }\n    }).join('').trim();\n  }\n\n  getEquationText(elems) {\n    return this.constructor.getEquationText(elems);\n  }\n\n  initialize(editor) {\n    Object(_EquationToolbarView__WEBPACK_IMPORTED_MODULE_4__[\"disableMathJaxMenu\"])(true);\n    this.editor = editor;\n    this.$editor = jquery__WEBPACK_IMPORTED_MODULE_1___default()(`#${this.editor.id}`);\n\n    if (this.isRawLaTex()) {\n      this.editor.selection.select(this.editor.selection.getNode());\n    }\n\n    this.prevSelection = this.editor.selection.getBookmark();\n\n    if (!(this.toolbar = this.$el.data('toolbar'))) {\n      const nodes = jquery__WEBPACK_IMPORTED_MODULE_1___default()('<span>').text(this.editor.selection.getNode());\n      const equation = this.getEquationText(nodes);\n      this.addToolbar(equation);\n    }\n\n    this.cacheEls();\n    this.$el.click(Object(prevent_default__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(() => {}));\n    return this.$el.dialog({\n      minWidth: 670,\n      minHeight: 290,\n      resizable: false,\n      title: i18n_EquationEditorView__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('equation_editor_title', 'Use the toolbars here, or Switch View to Advanced to type/paste in LaTeX'),\n      dialogClass: 'math-dialog',\n      open: () => this.initialRender(),\n      close: () => this.onClose(),\n      buttons: [{\n        class: 'btn-primary',\n        text: i18n_EquationEditorView__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('button.insert_equation', 'Insert Equation'),\n        click: e => this.onSubmit(e)\n      }]\n    });\n  }\n\n  isRawLaTex() {\n    var _this$editor$selectio, _this$editor$selectio2;\n\n    return (_this$editor$selectio = this.editor.selection.getNode()) === null || _this$editor$selectio === void 0 ? void 0 : (_this$editor$selectio2 = _this$editor$selectio.classList) === null || _this$editor$selectio2 === void 0 ? void 0 : _this$editor$selectio2.contains('math_equation_latex');\n  }\n\n  onClose() {\n    Object(_EquationToolbarView__WEBPACK_IMPORTED_MODULE_4__[\"disableMathJaxMenu\"])(false);\n    return this.restoreCaret();\n  }\n\n  initialRender() {\n    let nodes;\n\n    if (this.isRawLaTex()) {\n      nodes = jquery__WEBPACK_IMPORTED_MODULE_1___default()('<span>').text(this.editor.selection.getNode().textContent);\n    } else {\n      nodes = jquery__WEBPACK_IMPORTED_MODULE_1___default()('<span>').text(this.editor.selection.getContent());\n    }\n\n    const equation = this.getEquationText(nodes);\n    this.$mathjaxMessage.empty();\n    this.setView(this.$el.data('view'), equation);\n    return this.renderEquation(this.opposite(this.$el.data('view')), '');\n  }\n\n  addToolbar(equation) {\n    this.$el.append(this.template);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()('#mathjax-preview').html(`<script type='math/tex; mode=display'>${Object(html_escape__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(equation)}</script>`);\n    this.toolbar = new _EquationToolbarView__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n      el: this.$el\n    });\n    this.toolbar.render();\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()('a.math-toggle-link').bind('click', e => this.toggleView(e));\n    this.$el.data('toolbar', this.toolbar);\n    return this.$el.data('view', 'mathquill');\n  }\n\n  opposite(view) {\n    if (view === 'mathquill') {\n      return 'mathjax';\n    } else if (view === 'mathjax') {\n      return 'mathquill';\n    }\n  }\n\n  getEquation() {\n    const view = this.$el.data('view');\n\n    if (view === 'mathquill') {\n      return this.$mathquillContainer.mathquill('latex');\n    } else if (view === 'mathjax') {\n      return this.$mathjaxEditor.val();\n    }\n  }\n\n  toggleView(e) {\n    e.preventDefault();\n    const view = this.$el.data('view');\n    const equation = this.getEquation();\n    this.$mathjaxMessage.empty();\n    return this.setView(this.opposite(view), equation);\n  }\n\n  setView(view, equation) {\n    if (view === 'mathquill') {\n      this.$mathjaxView.hide();\n      this.$mathquillView.show();\n      setTimeout(() => {\n        return this.$mathquillView.find('.mathquill-tab-bar li.mathquill-tab-selected a').focus();\n      }, 200);\n    } else if (view === 'mathjax') {\n      this.$mathquillView.hide();\n      this.$mathjaxView.show();\n      this.$mathjaxView.find('.mathquill-tab-bar li.mathquill-tab-selected a').focus();\n    }\n\n    if (!this.renderEquation(view, equation)) {\n      return this.setView('mathjax', equation);\n    } else {\n      return this.$el.data('view', view);\n    }\n  }\n\n  renderEquation(view, equation) {\n    if (view === 'mathquill') {\n      this.$mathquillContainer.mathquill('revert').addClass('mathquill-editor').mathquill('editor').mathquill('write', equation);\n\n      if (this.$mathquillContainer.mathquill('latex').replace(/\\s+/, '') !== equation.replace(/\\s+/, '')) {\n        this.$mathjaxMessage.text(i18n_EquationEditorView__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('cannot_render_equation', 'This equation cannot be rendered in Basic View.'));\n        return false;\n      }\n    } else if (view === 'mathjax') {\n      this.$mathjaxEditor.val(equation);\n\n      if (this.toolbar.renderPreview) {\n        this.toolbar.renderPreview();\n      }\n    }\n\n    return true;\n  }\n\n  restoreCaret() {\n    return this.editor.selection.moveToBookmark(this.prevSelection);\n  }\n\n  close() {\n    this.$el.dialog('close');\n  } // the following is here to make it easier to unit test\n\n\n  static doubleEncodeEquationForUrl(text) {\n    return encodeURIComponent(encodeURIComponent(text));\n  } // the following will be called by onSubmit below\n\n\n  doubleEncodeEquationForUrl(text) {\n    return this.constructor.doubleEncodeEquationForUrl(text);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const text = this.getEquation();\n\n    if (text.length === 0) {\n      this.editor.selection.setContent('');\n      this.close();\n      return;\n    } // get the equation image to check that it succeeds\n    // if it does, we'll send its html to the RCE, where\n    // the image will get pulled from the cache, so the 2nd\n    // request won't cost much\n    // NOTE: commented out because the service used in prod\n    //       will not accept a CORS request\n\n\n    const url = `/equation_images/${this.doubleEncodeEquationForUrl(text)}`; // fetch(url, {\n    //   method: 'GET',\n    //   mode: 'cors',\n    //   redirect: 'follow'\n    // })\n    //   .then(response => {\n\n    this.restoreCaret(); // if (response.ok) {\n\n    const code = this.loadImage(text, url);\n    _RceCommandShim__WEBPACK_IMPORTED_MODULE_8__[\"send\"](this.$editor, 'insert_code', code); //   } else {\n    //     const code = this.loadAltMath(text)\n    //     this.editor.selection.setContent(code)\n    //   }\n\n    this.close(); // })\n    // .catch(() => {\n    //   const code = this.loadAltMath(text)\n    //   this.editor.selection.setContent(code)\n    //   this.close()\n    // })\n  } // the image generator was successful\n\n\n  loadImage(text, url) {\n    // if I simple create the html string, xsslint fails jenkins\n    const img = document.createElement('img');\n    img.setAttribute('alt', `LaTeX: ${text}`);\n    img.setAttribute('title', text);\n    img.setAttribute('class', 'equation_image');\n    img.setAttribute('data-equation-content', text);\n    img.setAttribute('src', url);\n    return img.outerHTML;\n  } // there are LaTex equations the the image generator can't deal with\n  // that MathJax can. If the image failed, let's inject the LaTex\n  // as inline math for MathJax to process later.\n\n\n  loadAltMath(text) {\n    const span = document.createElement('span');\n    span.setAttribute('class', 'math_equation_latex');\n    span.textContent = `\\\\(${text}\\\\)`;\n    return span.outerHTML;\n  }\n\n}\nEquationEditorView.initClass();\n\n//# sourceURL=webpack:///./ui/shared/rce/backbone/views/EquationEditorView.js?");

/***/ }),

/***/ "dbrX":
/*!******************************************!*\
  !*** ./ui/shared/brandable-css/index.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"ODXe\");\n/* harmony import */ var _canvas_i18n_rtlHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @canvas/i18n/rtlHelper */ \"uYtQ\");\n/* harmony import */ var invariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! invariant */ \"QLaP\");\n/* harmony import */ var invariant__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(invariant__WEBPACK_IMPORTED_MODULE_2__);\n\n//\n// Copyright (C) 2015 - present Instructure, Inc.\n//\n// This file is part of Canvas.\n//\n// Canvas is free software: you can redistribute it and/or modify it under\n// the terms of the GNU Affero General Public License as published by the Free\n// Software Foundation, version 3 of the License.\n//\n// Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n// A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n// details.\n//\n// You should have received a copy of the GNU Affero General Public License along\n// with this program. If not, see <http://www.gnu.org/licenses/>.\n\n\nconst loadedStylesheets = {};\nconst brandableCss = {\n  getCssVariant() {\n    const variant = window.ENV.use_responsive_layout ? 'responsive_layout' : 'new_styles';\n    const contrast = window.ENV.use_high_contrast ? 'high_contrast' : 'normal_contrast';\n    const rtl = Object(_canvas_i18n_rtlHelper__WEBPACK_IMPORTED_MODULE_1__[\"isRTL\"])() ? '_rtl' : '';\n    return `${variant}_${contrast}${rtl}`;\n  },\n\n  // see lib/brandable_css.rb#handlebars_index_json\n  getHandlebarsIndex() {\n    return window.BRANDABLE_CSS_HANDLEBARS_INDEX || [[], {}];\n  },\n\n  // combinedChecksum should be like '09f833ef7a'\n  // and includesNoVariables should be true if this bundle does not\n  // \"@include\" variables.scss, brand_variables.scss or variant_variables.scss\n  urlFor(bundleName, {\n    combinedChecksum,\n    includesNoVariables\n  }) {\n    const brandAndVariant = includesNoVariables ? 'no_variables' : brandableCss.getCssVariant();\n    return [window.ENV.ASSET_HOST || '', 'dist', 'brandable_css', brandAndVariant, `${bundleName}-${combinedChecksum}.css`].join('/');\n  },\n\n  // bundleName should be something like 'jst/foo'\n  loadStylesheet(bundleName, opts) {\n    if (bundleName in loadedStylesheets) return;\n    const linkElement = document.createElement('link');\n    linkElement.rel = 'stylesheet';\n    linkElement.href = brandableCss.urlFor(bundleName, opts); // give the person trying to track down a bug a hint on how this link tag got on the page\n\n    linkElement.setAttribute('data-loaded-by-brandableCss', true);\n    document.head.appendChild(linkElement);\n  },\n\n  loadStylesheetForJST({\n    bundle,\n    id\n  }) {\n    const _brandableCss$getHand = brandableCss.getHandlebarsIndex(),\n          _brandableCss$getHand2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_brandableCss$getHand, 2),\n          variants = _brandableCss$getHand2[0],\n          bundles = _brandableCss$getHand2[1];\n\n    invariant__WEBPACK_IMPORTED_MODULE_2___default()(bundles.hasOwnProperty(id), `requested to load stylesheet for template \"${bundle}\" (${id}) but no ` + `mapping is available for it!`); // \"includesNoVariables\" true; there's only one file regardless of variant\n\n    if (bundles[id].length === 1) {\n      return brandableCss.loadStylesheet(bundle, {\n        combinedChecksum: bundles[id][0],\n        includesNoVariables: true\n      });\n    } else {\n      // this can be a bit whoozy, remember the structure:\n      //\n      //     [\n      //       [ 'a', 'b', 'c' ],\n      //       ^^^^^^^^^^^^^^^^^ known variants, brandableCss.getCssVariant()\n      //                         will be one of them\n      //\n      //       {\n      //         \"f0d\": [\n      //          ^^^ id\n      //           \"variant[0] checksum\",\n      //           \"variant[1] checksum\",\n      //           0,\n      //           ^ a ref that resolves into \"variant[0] checksum\"\n      //           \"variant[3] checksum\"\n      //         ]\n      //       }\n      //     ]\n      //\n      let checksum = bundles[id][variants.indexOf(brandableCss.getCssVariant())];\n\n      if (typeof checksum === 'number') {\n        checksum = bundles[id][checksum];\n      }\n\n      return brandableCss.loadStylesheet(bundle, {\n        combinedChecksum: checksum,\n        includesNoVariables: false\n      });\n    }\n  }\n\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (brandableCss);\n\n//# sourceURL=webpack:///./ui/shared/brandable-css/index.js?");

/***/ }),

/***/ "hI1R":
/*!*****************************************************************************!*\
  !*** ./frontend_build/i18n.js?user_content!./ui/shims/dummyI18nResource.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @canvas/i18n/i18nObj */ \"HGxv\");\n/* harmony import */ var translations_core_en__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! translations/_core_en */ \"0sPK\");\n\n    \n    \n    \n\n    /* harmony default export */ __webpack_exports__[\"default\"] = (_canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scoped('user_content'));\n  \n\n//# sourceURL=webpack:///./ui/shims/dummyI18nResource.js?./frontend_build/i18n.js?user_content");

/***/ }),

/***/ "msTH":
/*!*************************************************!*\
  !*** ./ui/shared/util/jquery/apiUserContent.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"ouhR\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! underscore */ \"Y/W1\");\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(underscore__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var html_escape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! html-escape */ \"gI0r\");\n/* harmony import */ var i18n_user_content__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! i18n!user_content */ \"hI1R\");\n//\n// Copyright (C) 2015 - present Instructure, Inc.\n//\n// This file is part of Canvas.\n//\n// Canvas is free software: you can redistribute it and/or modify it under\n// the terms of the GNU Affero General Public License as published by the Free\n// Software Foundation, version 3 of the License.\n//\n// Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n// A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n// details.\n//\n// You should have received a copy of the GNU Affero General Public License along\n// with this program. If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\nconst apiUserContent = {\n  /*\n  xsslint safeString.identifier mathml\n  */\n  translateMathmlForScreenreaders($equationImage) {\n    var _ENV, _ENV$FEATURES;\n\n    if (!((_ENV = ENV) !== null && _ENV !== void 0 && (_ENV$FEATURES = _ENV.FEATURES) !== null && _ENV$FEATURES !== void 0 && _ENV$FEATURES.new_math_equation_handling)) {\n      // note, it is safe to treat the x-canvaslms-safe-mathml as html because it\n      // only ever gets put there by us (in Api::Html::Content::apply_mathml).\n      // Any user content that gets sent to the server will have the\n      // x-canvaslms-safe-mathml attribute stripped out.\n      const mathml = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div/>').html($equationImage.attr('x-canvaslms-safe-mathml')).html();\n      const mathmlSpan = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<span class=\"hidden-readable\"></span>');\n      mathmlSpan.html(mathml);\n      return mathmlSpan;\n    }\n  },\n\n  toMediaCommentLink(node) {\n    const $link = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<a\n        id='media_comment_${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(jquery__WEBPACK_IMPORTED_MODULE_0___default()(node).data('media_comment_id'))}'\n        data-media_comment_type='${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(jquery__WEBPACK_IMPORTED_MODULE_0___default()(node).data('media_comment_type'))}'\n        class='instructure_inline_media_comment ${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(node.nodeName.toLowerCase())}_comment'\n        data-alt='${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(jquery__WEBPACK_IMPORTED_MODULE_0___default()(node).attr('data-alt'))}'\n      />`);\n    $link.html(jquery__WEBPACK_IMPORTED_MODULE_0___default()(node).html());\n    return $link;\n  },\n\n  /*\n  xsslint safeString.identifier mathmlSpan\n  */\n  // use this method to process any user content fields returned in api responses\n  // this is important to handle object/embed tags safely, and to properly display audio/video tags\n  convert(html, options = {}) {\n    const $dummy = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div />').html(html); // finds any <video/audio class=\"instructure_inline_media_comment\"> and turns them into media comment thumbnails\n\n    $dummy.find('video.instructure_inline_media_comment,audio.instructure_inline_media_comment').replaceWith(function () {\n      return apiUserContent.toMediaCommentLink(this);\n    }); // remove any embed tags inside an object tag, to avoid repeated translations\n\n    $dummy.find('object.instructure_user_content:not(#kaltura_player) embed').remove(); // if we aren't actually displaying this content but are instead putting\n    // it into a RTE, we want to preserve the object/embed tags\n\n    if (!options.forEditing) {\n      // find all object/embed tags and convert them into an iframe that posts\n      // to safefiles to display the content (to avoid javascript attacks)\n      //\n      // see the corresponding code in lib/user_content.rb for non-api user\n      // content handling\n      $dummy.find('object.instructure_user_content,embed.instructure_user_content').replaceWith(function () {\n        const $this = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n\n        if (!$this.data('uc_snippet') || !$this.data('uc_sig')) {\n          return this;\n        }\n\n        const uuid = underscore__WEBPACK_IMPORTED_MODULE_1___default.a.uniqueId('uc_');\n\n        let action = '/object_snippet';\n\n        if (ENV.files_domain) {\n          action = `//${ENV.files_domain}${action}`;\n        }\n\n        const $form = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<form\n            action='${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(action)}'\n            method='post'\n            class='user_content_post_form'\n            target='${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(uuid)}'\n            id='form-${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(uuid)}'\n          />`);\n        $form.append(jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<input type='hidden'/>\").attr({\n          name: 'object_data',\n          value: $this.data('uc_snippet')\n        }));\n        $form.append(jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<input type='hidden'/>\").attr({\n          name: 's',\n          value: $this.data('uc_sig')\n        }));\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').append($form);\n        setTimeout(() => $form.submit(), 0);\n        return jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<iframe\n            class='user_content_iframe'\n            name='${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(uuid)}'\n            style='width: ${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])($this.data('uc_width'))}; height: ${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])($this.data('uc_height'))};'\n            frameborder='0'\n            title='${Object(html_escape__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(i18n_user_content__WEBPACK_IMPORTED_MODULE_3__[\"default\"].t('User Content'))}'\n          />`);\n      });\n      $dummy.find('img.equation_image').each((index, equationImage) => {\n        const $equationImage = jquery__WEBPACK_IMPORTED_MODULE_0___default()(equationImage);\n        const mathmlSpan = apiUserContent.translateMathmlForScreenreaders($equationImage);\n        $equationImage.removeAttr('x-canvaslms-safe-mathml');\n        $equationImage.after(mathmlSpan);\n      });\n    }\n\n    return $dummy.html();\n  }\n\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiUserContent);\n\n//# sourceURL=webpack:///./ui/shared/util/jquery/apiUserContent.js?");

/***/ }),

/***/ "nkPg":
/*!**************************************************************************!*\
  !*** ./frontend_build/i18n.js?mathquill!./ui/shims/dummyI18nResource.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @canvas/i18n/i18nObj */ \"HGxv\");\n/* harmony import */ var translations_core_en__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! translations/_core_en */ \"0sPK\");\n\n    \n    \n    \n\n    /* harmony default export */ __webpack_exports__[\"default\"] = (_canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scoped('mathquill'));\n  \n\n//# sourceURL=webpack:///./ui/shims/dummyI18nResource.js?./frontend_build/i18n.js?mathquill");

/***/ }),

/***/ "pV1m":
/*!***********************************************************************************!*\
  !*** ./frontend_build/i18n.js?EquationEditorView!./ui/shims/dummyI18nResource.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @canvas/i18n/i18nObj */ \"HGxv\");\n/* harmony import */ var translations_core_en__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! translations/_core_en */ \"0sPK\");\n\n    \n    \n    \n\n    /* harmony default export */ __webpack_exports__[\"default\"] = (_canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scoped('EquationEditorView'));\n  \n\n//# sourceURL=webpack:///./ui/shims/dummyI18nResource.js?./frontend_build/i18n.js?EquationEditorView");

/***/ }),

/***/ "wPxr":
/*!**********************************************************************************************!*\
  !*** ./frontend_build/i18n.js?tinymce.equation_toolbar_view!./ui/shims/dummyI18nResource.js ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @canvas/i18n/i18nObj */ \"HGxv\");\n/* harmony import */ var translations_core_en__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! translations/_core_en */ \"0sPK\");\n\n    \n    \n    \n\n    /* harmony default export */ __webpack_exports__[\"default\"] = (_canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scoped('tinymce.equation_toolbar_view'));\n  \n\n//# sourceURL=webpack:///./ui/shims/dummyI18nResource.js?./frontend_build/i18n.js?tinymce.equation_toolbar_view");

/***/ })

}]);