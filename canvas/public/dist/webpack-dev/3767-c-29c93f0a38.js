(window["canvasWebpackJsonp"] = window["canvasWebpackJsonp"] || []).push([[3767],{

/***/ "4HNs":
/*!************************************************!*\
  !*** ./ui/boot/initializers/trackPageViews.js ***!
  \************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var browser_sniffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! browser-sniffer */ \"ik22\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"ouhR\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _canvas_authenticity_token__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @canvas/authenticity-token */ \"3PZ/\");\n/* harmony import */ var _canvas_jquery_jquery_ajaxJSON__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @canvas/jquery/jquery.ajaxJSON */ \"dhbk\");\n/*\n * Copyright (C) 2011 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nlet update_url = window.ENV.page_view_update_url;\n\nif (update_url) {\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(() => {\n    let interactionSeconds = 0;\n    browser_sniffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].interaction_contexts = {};\n\n    if (update_url) {\n      let secondsSinceLastEvent = 0;\n      const intervalInSeconds = 60 * 5;\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).bind('page_view_update_url_received', (event, new_update_url) => {\n        update_url = new_update_url;\n      });\n      let updateTrigger;\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).bind('page_view_update', (event, force) => {\n        const data = {};\n\n        if (force || interactionSeconds > 10 && secondsSinceLastEvent < intervalInSeconds) {\n          data.interaction_seconds = interactionSeconds;\n          jquery__WEBPACK_IMPORTED_MODULE_1___default.a.ajaxJSON(update_url, 'PUT', data, null, (result, xhr) => {\n            if (xhr.status === 422) {\n              clearInterval(updateTrigger);\n            }\n          });\n          interactionSeconds = 0;\n        }\n      });\n      updateTrigger = setInterval(() => {\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).triggerHandler('page_view_update');\n      }, 1000 * intervalInSeconds);\n      window.addEventListener('unload', () => {\n        if (interactionSeconds > 30) {\n          // Use sendBeacon so the request doesn't get cancelled as we navigate away like a normal XHR would,\n          // but because sendBeacon only sends POST requests, we have to use FormData to fake the \"_method\" to PUT\n          // like Rail's `form_for` does\n          const formData = new FormData();\n          formData.append('interaction_seconds', interactionSeconds);\n          formData.append('_method', 'put');\n          formData.append('authenticity_token', Object(_canvas_authenticity_token__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n          formData.append('utf8', '&#x2713');\n          navigator.sendBeacon(update_url, formData);\n        }\n      }, false);\n      let eventInTime = false;\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).bind('mousemove keypress mousedown focus', () => {\n        eventInTime = true;\n      });\n      setInterval(() => {\n        if (eventInTime) {\n          interactionSeconds++;\n\n          if (browser_sniffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && browser_sniffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].interaction_context && browser_sniffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].interaction_contexts) {\n            browser_sniffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].interaction_contexts[browser_sniffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].interaction_context] = (browser_sniffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].interaction_contexts[browser_sniffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].interaction_context] || 0) + 1;\n          }\n\n          eventInTime = false;\n\n          if (secondsSinceLastEvent >= intervalInSeconds) {\n            secondsSinceLastEvent = 0;\n            jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).triggerHandler('page_view_update');\n          }\n\n          secondsSinceLastEvent = 0;\n        } else {\n          secondsSinceLastEvent++;\n        }\n      }, 1000);\n    }\n  });\n}\n\n//# sourceURL=webpack:///./ui/boot/initializers/trackPageViews.js?");

/***/ })

}]);