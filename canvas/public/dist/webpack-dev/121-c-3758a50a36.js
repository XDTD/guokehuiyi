(window["canvasWebpackJsonp"] = window["canvasWebpackJsonp"] || []).push([[121],{

/***/ "A1Qz":
/*!*****************************************************!*\
  !*** ./packages/jquery-kyle-menu/monkey-patches.js ***!
  \*****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"ouhR\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jqueryui_menu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jqueryui/menu */ \"Opnj\");\n/*\n * Copyright (C) 2011 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/*\n * jQuery UI Input Menu Extension\n *\n * Copyright 2010, Kris Borchers\n * Dual licensed under the MIT or GPL Version 2 licenses.\n *\n * http://github.com/kborchers/jquery-ui-extensions\n */\n\n\nconst proto = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.menu.prototype,\n      originalRefresh = proto.refresh;\njquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend(proto, {\n  refresh() {\n    originalRefresh.call(this);\n    const that = this;\n    const items = this.element.find('li.ui-menu-item');\n    let inputGroupLabeled = false;\n    this.element.bind('click.menu', function (event) {\n      if (!new RegExp(/^a$/i).test(event.target.tagName)) event.preventDefault();\n    });\n    let inputIDCount = 0;\n    this.element.find(\"input[type='checkbox'], input[type='radio']\").each(function () {\n      const labelElement = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest('label');\n\n      if (labelElement.length) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).insertBefore(labelElement);\n\n        if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr('id')) {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr('id', 'ui-input-' + inputIDCount++);\n        }\n\n        labelElement.attr('for', jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr('id'));\n      }\n    });\n    this.element.bind('menufocus', function (event) {\n      const textInput = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).find('a.ui-state-focus').children(\"input[type='text']\");\n      if (textInput.length) textInput[0].focus();\n    }); // INSTRUCTURE\n\n    this.element.bind('popupopen', function (event) {\n      const selected = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).find('input[type=radio][checked]').closest('.ui-menu-item');\n\n      if (selected.length) {\n        setTimeout(function () {\n          that.focus(event, selected);\n        }, 0);\n      }\n    }).bind('menublur', function (event) {\n      const textInput = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).find(\"input[type='text']:focus\");\n      if (textInput.length) textInput[0].blur();\n    });\n    items.children('a').each(function (index, item) {\n      const current = jquery__WEBPACK_IMPORTED_MODULE_0___default()(item),\n            parent = current.parent();\n\n      if (current.children().is(\"input[type='checkbox'], input[type='radio']\")) {\n        current.closest('ul').addClass('ui-menu-icons');\n\n        if (current.children(\"input[type='checkbox']\").is(':checked')) {\n          current.prepend('<span class=\"ui-icon ui-icon-check\"></span>');\n          parent.attr({\n            role: 'menuitemcheckbox',\n            'aria-checked': 'true'\n          });\n        } else if (current.children(\"input[type='radio']\").is(':checked')) {\n          current.prepend('<span class=\"ui-icon ui-icon-radio-on\"></span>');\n          parent.attr({\n            role: 'menuitemradio',\n            'aria-checked': 'true'\n          });\n        } else if (current.children(\"input[type='radio']\").length) {\n          current.prepend('<span class=\"ui-icon ui-icon-radio-off\"></span>');\n          parent.attr({\n            role: 'menuitemradio',\n            'aria-checked': 'false'\n          });\n        } else {\n          parent.attr({\n            role: 'menuitemcheckbox',\n            'aria-checked': 'false'\n          });\n        }\n\n        if (current.children().is(\"input[type='radio']\")) {\n          parent.attr('radio-group', current.children(\"input[type='radio']\").attr('name'));\n        }\n\n        if (parent.prev().length && !parent.prev().children('a').length) {\n          parent.prev().addClass('ui-state-disabled').html(\"<span class='ui-menu-input-group'>\" + parent.prev().html() + '</span>').bind('click.menu', function (event) {\n            return false;\n          }).after('<li><hr /></li>');\n          inputGroupLabeled = true;\n        } else if (parent.prev().length && !parent.prev().children('a').children().is(\"input[type='checkbox'], input[type='radio']\")) {\n          parent.before('<li><hr /></li>');\n        }\n\n        if (inputGroupLabeled && parent.next().length && !parent.next().children('a').children().is(\"input[type='checkbox'], input[type='radio']\")) {\n          parent.after('<li><hr /></li>');\n          inputGroupLabeled = false;\n        } else if (parent.next().length && !parent.next().children('a').children().is(\"input[type='checkbox'], input[type='radio']\")) {\n          parent.after('<li><hr /></li>');\n        }\n\n        current.children(\"input[type='checkbox'], input[type='radio']\").hide();\n      }\n    });\n    items.bind('keydown.menu', function (event) {\n      if (event.keyCode === jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.SPACE) {\n        if (that.active.children('a').children().is(\"input[type='checkbox'], input[type='radio']\")) {\n          that.select(event);\n          event.stopImmediatePropagation();\n        }\n\n        event.preventDefault();\n      }\n    });\n    items.find(\"input[type='text']\").bind('keydown', function (event) {\n      event.stopPropagation();\n\n      if (event.keyCode === jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.UP) {\n        that.element.trigger('focus');\n        this.blur();\n        that.focus(event, jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest('.ui-menu-item').prev());\n      }\n\n      if (event.keyCode === jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.DOWN) {\n        that.element.trigger('focus');\n        this.blur();\n        that.focus(event, jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest('.ui-menu-item').next());\n      }\n    }).bind('click', function (event) {\n      event.stopPropagation();\n    });\n  },\n\n  select(event) {\n    // Save active reference before collapseAll triggers blur\n    const ui = {\n      // Selecting a menu item removes the active item causing multiple clicks to be missing an item\n      item: this.active || jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).closest('.ui-menu-item')\n    };\n\n    if (ui.item.children('a').children().is(\"input[type='checkbox']\")) {\n      if (ui.item.attr('aria-checked') === 'false') {\n        ui.item.children('a').prepend('<span class=\"ui-icon ui-icon-check\"></span>');\n        ui.item.attr('aria-checked', 'true');\n        ui.item.children('a').children(\"input[type='checkbox']\").prop('checked', 'checked').trigger('change');\n      } else if (ui.item.attr('aria-checked') === 'true') {\n        ui.item.children('a').children('span.ui-icon-check').remove();\n        ui.item.attr('aria-checked', 'false');\n        ui.item.children('a').children(\"input[type='checkbox']\").removeAttr('checked').trigger('change');\n      }\n    }\n\n    if (ui.item.children('a').children().is(\"input[type='radio']\")) {\n      if (ui.item.attr('aria-checked') === 'false') {\n        ui.item.children('a').children('span.ui-icon-radio-off').toggleClass('ui-icon-radio-on ui-icon-radio-off');\n        ui.item.attr('aria-checked', 'true');\n        ui.item.children('a').children(\"input[type='radio']\").prop('checked', 'checked').trigger('change');\n        ui.item.siblings('[radio-group=' + jquery__WEBPACK_IMPORTED_MODULE_0___default()(ui.item).attr('radio-group') + ']').each(function () {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr('aria-checked', 'false');\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).children('a').children('span.ui-icon-radio-on').toggleClass('ui-icon-radio-on ui-icon-radio-off');\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).children('a').children(\"input[type='radio']\").removeAttr('checked');\n        });\n      }\n    }\n\n    if (!ui.item.children('a').children().is(\"input[type='checkbox'], input[type='radio']\")) this.collapseAll();\n\n    this._trigger('select', event, ui);\n  }\n\n});\n\n//# sourceURL=webpack:///./packages/jquery-kyle-menu/monkey-patches.js?");

/***/ }),

/***/ "Nx6n":
/*!********************************************!*\
  !*** ./packages/jquery-kyle-menu/index.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return KyleMenu; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"ouhR\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _monkey_patches__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./monkey-patches */ \"A1Qz\");\n/* harmony import */ var jqueryui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jqueryui/button */ \"YLvb\");\n/* harmony import */ var _popup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./popup */ \"RGKP\");\n//\n// Copyright (C) 2011 - present Instructure, Inc.\n//\n// This file is part of Canvas.\n//\n// Canvas is free software: you can redistribute it and/or modify it under\n// the terms of the GNU Affero General Public License as published by the Free\n// Software Foundation, version 3 of the License.\n//\n// Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n// A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n// details.\n//\n// You should have received a copy of the GNU Affero General Public License along\n// with this program. If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n/*\n * PLEASE READ BEFORE MODIFYING THIS FILE:\n * This provides the 'admin cog' menus amongst other things used throughout\n * Canvas.  It has been extensively tested for accessibility.  Before making\n * any changes to this file, please check with someone about the accessibility\n * repercussions of what you intend to do.\n */\n\nclass KyleMenu {\n  constructor(trigger, options) {\n    ;\n    ['onOpen', 'select', 'onClose', 'close', 'keepButtonActive'].forEach(m => this[m] = this[m].bind(this));\n    this.$trigger = jquery__WEBPACK_IMPORTED_MODULE_0___default()(trigger).data('kyleMenu', this);\n    this.$ariaMenuWrapper = this.$trigger.parent();\n    this.opts = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend(true, {}, KyleMenu.defaults, options);\n\n    if (!this.opts.noButton) {\n      if (this.opts.buttonOpts.addDropArrow) {\n        this.$trigger.append('<i class=\"icon-mini-arrow-down\"></i>');\n      }\n\n      this.$trigger.button(this.opts.buttonOpts); // this is to undo the removal of the 'ui-state-active' class that jquery.ui.button\n      // does by default on mouse out if the menu is still open\n\n      this.$trigger.bind('mouseleave.button', this.keepButtonActive);\n    }\n\n    this.$menu = this.$trigger.next().menu(this.opts.menuOpts).popup(this.opts.popupOpts).addClass('ui-kyle-menu use-css-transitions-for-show-hide'); // passing an appendMenuTo option when initializing a kylemenu helps get around popup being hidden\n    // by overflow:scroll on its parents\n    // but by doing so we need to make sure that click events still get propagated up in case we\n    // were delegating events to a parent container\n\n    if (this.opts.appendMenuTo) {\n      // to keep tab order when appended out of place\n      this.$menu.on({\n        keydown: e => {\n          if (e.keyCode === jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.TAB) {\n            let tabKey;\n\n            if (e.shiftKey) {\n              tabKey = {\n                which: jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.TAB,\n                shiftKey: true\n              };\n            } else {\n              tabKey = {\n                which: jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.TAB\n              };\n            }\n\n            const pressTab = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.Event('keydown', tabKey);\n            this.$trigger.focus().trigger(pressTab);\n          }\n        }\n      });\n      const popupInstance = this.$menu.data('popup');\n      const _open = popupInstance.open;\n      const self = this; // monkey patch just this plugin instance not $.ui.popup.prototype.open\n\n      popupInstance.open = function () {\n        self.$menu.appendTo(self.opts.appendMenuTo);\n        return _open.apply(this, arguments);\n      };\n\n      this.$placeholder = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<span style=\"display:none;\">').insertAfter(this.$menu);\n      this.$menu.bind('click', (...args) => this.$placeholder.trigger(...args));\n    } // passing a notifyMenuActiveOn option when initializing a kylemenu helps\n    // get around issue of page-specific parent elements needing to know when the menu\n    // is active and removed. The value of the option is a CSS selector for a parent\n    // element of the trigger.\n\n\n    if (this.opts.notifyMenuActiveOnParent) {\n      this.$notifyParent = this.$trigger.closest(this.opts.notifyMenuActiveOnParent);\n    }\n\n    this.$menu.on({\n      menuselect: this.select,\n      popupopen: this.onOpen,\n      popupclose: this.onClose\n    });\n  }\n\n  onOpen(event) {\n    this.$ariaMenuWrapper.attr('role', 'application');\n    this.adjustCarat(event);\n    this.$menu.addClass('ui-state-open');\n    if (this.opts.notifyMenuActiveOnParent) this.$notifyParent.addClass('menu_active');\n  }\n\n  open() {\n    this.$menu.popup('open');\n  }\n\n  select(e, ui) {\n    let $target;\n\n    if ((e.originalEvent && e.originalEvent.type) !== 'click' && ($target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(ui.item).find('a'))) {\n      e.preventDefault();\n      const el = $target[0];\n      const event = document.createEvent('MouseEvent');\n      event.initEvent('click', true, true);\n      el.dispatchEvent(event);\n    }\n\n    this.close();\n  }\n\n  onClose() {\n    if (this.opts.appendMenuTo) this.$menu.insertBefore(this.$placeholder);\n    this.$trigger.removeClass('ui-state-active');\n    this.$ariaMenuWrapper.removeAttr('role');\n    this.$menu.removeClass('ui-state-open');\n    if (this.opts.notifyMenuActiveOnParent) this.$notifyParent.removeClass('menu_active'); // passing a returnFocusTo option when initializing a kylemenu provides an\n    // interface to ensure focus is not lost and returned to the body. This was\n    // introduced specifically to address the complexity of dynamically-\n    // generated menus. This rule will not be honored if the returnFocusTo\n    // element becomes disabled.\n\n    if (this.opts.returnFocusTo && !this.opts.returnFocusTo.prop('disabled')) {\n      // Wait for one frame to see if anything else has claimed focus.\n      requestAnimationFrame(() => {\n        if (document.body === document.activeElement) {\n          // If focus still remains on the document body, return focus to the originating element.\n          this.opts.returnFocusTo.focus();\n        }\n      });\n    }\n  }\n\n  close() {\n    this.$menu.hasClass('ui-state-open') && this.$menu.popup('close').removeClass('ui-state-open');\n  }\n\n  keepButtonActive() {\n    if (this.$menu.is('.ui-state-open') && this.$trigger.is('.btn, .ui-button')) {\n      this.$trigger.addClass('ui-state-active');\n    }\n  } // handle sticking the carat right below where you clicked on the button\n\n\n  adjustCarat(event) {\n    if (this.$carat) this.$carat.remove();\n    if (this.$trigger.is('.btn, .ui-button')) this.$trigger.addClass('ui-state-active');\n    const triggerWidth = this.$trigger.outerWidth();\n    const triggerOffsetLeft = this.$trigger.offset().left; // the menu may have flipped above the trigger\n\n    const mbox = this.$menu[0].getBoundingClientRect();\n    const tbox = this.$trigger[0].getBoundingClientRect();\n    const caratIsBelow = mbox.top + mbox.height < tbox.top;\n    const caratY = mbox.height - 2; // if it is a mouse event, it will have a 'pageX' otherwise use the middle of the trigger\n\n    const pointToDropDownFrom = event.pageX || triggerOffsetLeft + triggerWidth / 2;\n    const differenceInOffset = triggerOffsetLeft - this.$menu.offset().left;\n    const actualOffset = pointToDropDownFrom - this.$trigger.offset().left;\n    const caratOffset = Math.min(Math.max(6, actualOffset), triggerWidth - 6) + differenceInOffset;\n    this.$carat = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<span class=\"ui-menu-carat\"><span /></span>').css('left', caratOffset);\n\n    if (caratIsBelow) {\n      this.$carat.css('top', caratY).css('transform', 'rotateX(180deg)');\n    }\n\n    this.$carat.prependTo(this.$menu);\n  }\n\n} // expose jQuery plugin\n\nKyleMenu.defaults = {\n  popupOpts: {\n    position: {\n      my: 'center top',\n      at: 'center bottom',\n      offset: '0 10px',\n      within: '#main',\n      collision: 'flipfit'\n    }\n  },\n  buttonOpts: {\n    addDropArrow: true\n  }\n};\n\njquery__WEBPACK_IMPORTED_MODULE_0___default.a.fn.kyleMenu = function (options) {\n  return this.each(function () {\n    if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data().kyleMenu) new KyleMenu(this, options);\n  });\n};\n\n//# sourceURL=webpack:///./packages/jquery-kyle-menu/index.js?");

/***/ }),

/***/ "RGKP":
/*!********************************************!*\
  !*** ./packages/jquery-kyle-menu/popup.js ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"ouhR\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jqueryui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jqueryui/core */ \"MIhX\");\n/* harmony import */ var jqueryui_widget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jqueryui/widget */ \"dJId\");\n/* harmony import */ var jqueryui_position__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jqueryui/position */ \"Stu1\");\n/*\n * jQuery UI Popup @VERSION\n *\n * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * http://docs.jquery.com/UI/Popup\n *\n * Depends:\n *\tjquery.ui.core.js\n *\tjquery.ui.widget.js\n *\tjquery.ui.position.js\n */\n// INSTRUCTURE modified\n\n\n\n\nlet idIncrement = 0,\n    suppressExpandOnFocus = false;\njquery__WEBPACK_IMPORTED_MODULE_0___default.a.widget('ui.popup', {\n  version: '@VERSION',\n  options: {\n    position: {\n      my: 'left top',\n      at: 'left bottom'\n    },\n    managed: false,\n    expandOnFocus: false,\n    show: {\n      effect: 'slideDown',\n      // duration: \"fast\"\n      duration: 0\n    },\n    hide: {\n      effect: 'fadeOut',\n      // duration: \"fast\"\n      duration: 0\n    }\n  },\n\n  _create() {\n    if (!this.options.trigger) {\n      this.options.trigger = this.element.prev();\n    }\n\n    if (!this.element.attr('id')) {\n      this.element.attr('id', 'ui-popup-' + idIncrement++);\n      this.generatedId = true;\n    }\n\n    if (!this.element.attr('role')) {\n      if (!this.options.managed) {\n        this.element.attr('role', 'dialog');\n        this.generatedRole = true;\n      }\n    }\n\n    this.options.trigger.attr('aria-haspopup', 'true');\n    this.element.addClass('ui-popup');\n\n    this._beforeClose();\n\n    this.element.hide(); // INSTRUCTURE moved from switch below for use in click handler\n\n    const onMouseDown = function (event) {\n      let noFocus = false;\n      /* TODO: Determine in which cases focus should stay on the trigger after the popup opens\n      (should apply for any trigger that has other interaction besides opening the popup, e.g. a text field) */\n\n      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).is('input')) {\n        noFocus = true;\n      }\n\n      if (this.isOpen) {\n        suppressExpandOnFocus = true;\n        this.close();\n        return;\n      }\n\n      this.open(event);\n      clearTimeout(this.closeTimer);\n\n      this._delay(function () {\n        if (!noFocus) {\n          this.focusPopup();\n        }\n      }, 1);\n    };\n\n    this._on(this.options.trigger, {\n      keydown(event) {\n        switch (event.keyCode) {\n          case jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.TAB:\n            // Waiting for close() will make popup hide too late, which breaks tab key behavior\n            this.element.hide();\n            this.close(event);\n            break;\n\n          case jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.ESCAPE:\n            if (this.isOpen) {\n              this.close(event);\n            }\n\n            break;\n          // INSTRUCTURE changed SPACE to use DOWN/UP handler\n\n          case jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.SPACE:\n          case jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.DOWN:\n          case jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.UP:\n            // prevent scrolling\n            event.preventDefault();\n            clearTimeout(this.closeTimer);\n\n            this._delay(function () {\n              this.open(event);\n              this.focusPopup(event); // NOTE: This is a test of a change\n            }, 1);\n\n            break;\n        }\n      },\n\n      // INSTRUCTURE added\n      mouseup(event) {\n        this.mouseClickTimer = window.setTimeout(function () {\n          delete this.mouseClickTimer;\n        }.bind(this), 0);\n      },\n\n      click(event) {\n        event.stopPropagation();\n        event.preventDefault(); // INSTRUCTURE added handler for keyboard-triggered clicks\n\n        if (!this.mouseClickTimer) {\n          onMouseDown.call(this, event);\n        }\n      },\n\n      mousedown: onMouseDown\n    });\n\n    if (this.options.expandOnFocus) {\n      this._on(this.options.trigger, {\n        focus(event) {\n          if (!suppressExpandOnFocus) {\n            this._delay(function () {\n              if (!this.isOpen) {\n                this.open(event);\n              }\n            }, 1);\n          }\n\n          this._delay(function () {\n            suppressExpandOnFocus = false;\n          }, 100);\n        },\n\n        blur(event) {\n          suppressExpandOnFocus = false;\n        }\n\n      });\n    }\n\n    if (!this.options.managed) {\n      // default use case, wrap tab order in popup\n      this._on({\n        keydown(event) {\n          if (event.keyCode !== jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.TAB) {\n            return;\n          }\n\n          const tabbables = jquery__WEBPACK_IMPORTED_MODULE_0___default()(':tabbable', this.element),\n                first = tabbables.first(),\n                last = tabbables.last();\n\n          if (event.target === last[0] && !event.shiftKey) {\n            first.focus(1);\n            event.preventDefault();\n          } else if (event.target === first[0] && event.shiftKey) {\n            last.focus(1);\n            event.preventDefault();\n          }\n        }\n\n      });\n    }\n\n    this._on({\n      focusout(event) {\n        // use a timer to allow click to clear it and letting that\n        // handle the closing instead of opening again\n        this.closeTimer = this._delay(function () {\n          this.close(event);\n        }, 150);\n      },\n\n      focusin(event) {\n        clearTimeout(this.closeTimer);\n      },\n\n      mouseup(event) {\n        clearTimeout(this.closeTimer);\n      }\n\n    });\n\n    this._on({\n      keyup(event) {\n        if (event.keyCode === jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ui.keyCode.ESCAPE && this.element.is(':visible')) {\n          this.close(event);\n          this.focusTrigger();\n        }\n      }\n\n    });\n\n    this._on(this.document, {\n      click(event) {\n        if (this.isOpen && !jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).closest(this.element.add(this.options.trigger)).length) {\n          this.close(event);\n        }\n      }\n\n    });\n  },\n\n  _destroy() {\n    this.element.show().removeClass('ui-popup').removeAttr('aria-hidden').removeAttr('aria-expanded').unbind('keypress.ui-popup');\n    this.options.trigger.removeAttr('aria-haspopup');\n\n    if (this.generatedId) {\n      this.element.removeAttr('id');\n    }\n\n    if (this.generatedRole) {\n      this.element.removeAttr('role');\n    }\n  },\n\n  open(event) {\n    const position = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend({}, {\n      of: this.options.trigger\n    }, this.options.position);\n\n    this._show(this.element, this.options.show);\n\n    this.element.attr('aria-hidden', 'false').attr('aria-expanded', 'true').position(position); // take trigger out of tab order to allow shift-tab to skip trigger\n\n    this.options.trigger.attr('tabindex', -1);\n    this.isOpen = true;\n\n    this._trigger('open', event);\n  },\n\n  focusPopup(event) {\n    if (!this.options.managed) {\n      // set focus to the first tabbable element in the popup container\n      // if there are no tabbable elements, set focus on the popup itself\n      let tabbables = this.element.find(':tabbable');\n      this.removeTabIndex = false;\n\n      if (!tabbables.length) {\n        if (!this.element.is(':tabbable')) {\n          this.element.attr('tabindex', '0');\n          this.removeTabIndex = true;\n        }\n\n        tabbables = tabbables.add(this.element[0]);\n      }\n\n      tabbables.first().focus(1);\n    }\n\n    this._trigger('focusPopup', event);\n  },\n\n  focusTrigger(event) {\n    suppressExpandOnFocus = true;\n    this.options.trigger.focus();\n\n    this._trigger('focusTrigger', event);\n  },\n\n  close(event) {\n    this._beforeClose();\n\n    this._hide(this.element, this.options.hide);\n\n    this.options.trigger.attr('tabindex', 0);\n\n    if (this.removeTabIndex) {\n      this.element.removeAttr('tabindex');\n    }\n\n    this.isOpen = false;\n\n    this._trigger('close', event);\n  },\n\n  _beforeClose() {\n    this.element.attr('aria-hidden', 'true').attr('aria-expanded', 'false');\n  }\n\n});\n\n//# sourceURL=webpack:///./packages/jquery-kyle-menu/popup.js?");

/***/ })

}]);