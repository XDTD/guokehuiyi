(window["canvasWebpackJsonp"] = window["canvasWebpackJsonp"] || []).push([[98],{

/***/ "+yat":
/*!**************************************************!*\
  !*** ./ui/shared/grading/GradingSchemeHelper.js ***!
  \**************************************************/
/*! exports provided: indexOfGrade, gradeToScoreUpperBound, gradeToScoreLowerBound, scoreToGrade */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"indexOfGrade\", function() { return indexOfGrade; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gradeToScoreUpperBound\", function() { return gradeToScoreUpperBound; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gradeToScoreLowerBound\", function() { return gradeToScoreLowerBound; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scoreToGrade\", function() { return scoreToGrade; });\n/* harmony import */ var round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! round */ \"xvQv\");\n/*\n * Copyright (C) 2011 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nfunction indexOfGrade(grade, gradingScheme) {\n  const cleanGrade = `${grade}`.trim().toLowerCase();\n  return gradingScheme.findIndex(entry => entry[0].toLowerCase() === cleanGrade);\n}\nfunction gradeToScoreUpperBound(grade, gradingScheme) {\n  const index = indexOfGrade(grade, gradingScheme);\n\n  if (index === -1) {\n    // if the given grade is not in the scheme, return null\n    return null;\n  }\n\n  if (index === 0) {\n    // if the given grade is the highest in the scheme, return 100 (percent)\n    return 100;\n  }\n\n  const matchingSchemeValue = gradingScheme[index][1];\n  const nextHigherSchemeValue = gradingScheme[index - 1][1];\n  const schemeValuesDiff = Object(round__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(nextHigherSchemeValue - matchingSchemeValue, 4) * 100;\n  let percentageOffset = 1;\n\n  if (schemeValuesDiff <= 1) {\n    // The maximum granularity currently supported by grading schemes right\n    // now is 2 decimal places. If the matchingSchemeValue has too small of a\n    // range, then a percentageOffset of 1% or even .1% may be too large, so\n    // set it to 0.01% in that case (the most granular possible).\n    if (schemeValuesDiff <= 0.1) {\n      percentageOffset = 0.01;\n    } else {\n      percentageOffset = 0.1;\n    }\n  }\n\n  return Object(round__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(nextHigherSchemeValue * 100 - percentageOffset, 2);\n}\nfunction gradeToScoreLowerBound(grade, gradingScheme) {\n  const index = indexOfGrade(grade, gradingScheme);\n\n  if (index === -1) {\n    // if the given grade is not in the scheme, return null\n    return null;\n  }\n\n  const matchingSchemeValue = gradingScheme[index][1];\n  return Object(round__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(matchingSchemeValue * 100, 2);\n}\nfunction scoreToGrade(score, gradingScheme) {\n  if (gradingScheme == null) {\n    return null;\n  }\n\n  const roundedScore = Object(round__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(score, 4);\n  const scoreWithLowerBound = Math.max(roundedScore, 0);\n  const letter = gradingScheme.find((row, i) => {\n    const schemeScore = (row[1] * 100).toPrecision(4); // The precision of the lower bound (* 100) must be limited to eliminate\n    // floating-point errors.\n    // e.g. 0.545 * 100 returns 54.50000000000001 in JavaScript.\n\n    return scoreWithLowerBound >= schemeScore || i === gradingScheme.length - 1;\n  });\n  return letter[0];\n}\n\n//# sourceURL=webpack:///./ui/shared/grading/GradingSchemeHelper.js?");

/***/ }),

/***/ "3vji":
/*!*****************************************************!*\
  !*** ./ui/shared/grading/GradeCalculationHelper.js ***!
  \*****************************************************/
/*! exports provided: add, divide, multiply, toNumber, bigSum, sum, sumBy, scoreToPercentage, weightedPercent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"divide\", function() { return divide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toNumber\", function() { return toNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bigSum\", function() { return bigSum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sum\", function() { return sum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sumBy\", function() { return sumBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scoreToPercentage\", function() { return scoreToPercentage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"weightedPercent\", function() { return weightedPercent; });\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! underscore */ \"Y/W1\");\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(underscore__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! big.js */ \"nc0P\");\n/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(big_js__WEBPACK_IMPORTED_MODULE_1__);\n/*\n * Copyright (C) 2018 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nfunction add(a, b) {\n  return new big_js__WEBPACK_IMPORTED_MODULE_1___default.a(a || 0).plus(b || 0);\n}\nfunction divide(a, b) {\n  return new big_js__WEBPACK_IMPORTED_MODULE_1___default.a(a || 0).div(b || 0);\n}\nfunction multiply(a, b) {\n  return new big_js__WEBPACK_IMPORTED_MODULE_1___default.a(a || 0).times(b || 0);\n}\nfunction toNumber(big) {\n  return Number.parseFloat(big, 10);\n}\nfunction bigSum(values) {\n  return values.reduce((total, value) => total.plus(value || 0), big_js__WEBPACK_IMPORTED_MODULE_1___default()(0));\n}\nfunction sum(collection) {\n  const bigValue = underscore__WEBPACK_IMPORTED_MODULE_0___default.a.reduce(collection, add, 0);\n\n  return toNumber(bigValue);\n}\nfunction sumBy(collection, attr) {\n  const values = underscore__WEBPACK_IMPORTED_MODULE_0___default.a.map(collection, attr);\n\n  return sum(values);\n}\nfunction scoreToPercentage(score, pointsPossible) {\n  const floatingPointResult = score / pointsPossible * 100;\n\n  if (!Number.isFinite(floatingPointResult)) {\n    return floatingPointResult;\n  }\n\n  return toNumber(multiply(divide(score, pointsPossible), 100));\n}\nfunction weightedPercent({\n  score,\n  possible,\n  weight\n}) {\n  return score && weight && possible ? big_js__WEBPACK_IMPORTED_MODULE_1___default()(score).div(possible).times(weight) : big_js__WEBPACK_IMPORTED_MODULE_1___default()(0);\n}\n\n//# sourceURL=webpack:///./ui/shared/grading/GradeCalculationHelper.js?");

/***/ }),

/***/ "5Pfy":
/*!************************************************!*\
  !*** ./ui/shared/grading/GradeFormatHelper.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! i18n!sharedGradeFormatHelper */ \"QnVe\");\n/* harmony import */ var round__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! round */ \"xvQv\");\n/* harmony import */ var _canvas_i18n_numberHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @canvas/i18n/numberHelper */ \"FdVj\");\n/* harmony import */ var _GradeCalculationHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GradeCalculationHelper */ \"3vji\");\n/* harmony import */ var _GradingSchemeHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GradingSchemeHelper */ \"+yat\");\n/*\n * Copyright (C) 2017 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\n\nconst POINTS = 'points';\nconst PERCENT = 'percent';\nconst PASS_FAIL = 'pass_fail';\nconst POINTS_OUT_OF_FRACTION = 'points_out_of_fraction';\nconst PASS_GRADES = ['complete', 'pass'];\nconst FAIL_GRADES = ['incomplete', 'fail'];\nconst UNGRADED = '–';\n\nfunction isPassFail(grade, gradeType) {\n  if (gradeType) {\n    return gradeType === PASS_FAIL;\n  }\n\n  return PASS_GRADES.includes(grade) || FAIL_GRADES.includes(grade);\n}\n\nfunction isPercent(grade, gradeType) {\n  if (gradeType) {\n    return gradeType === PERCENT;\n  }\n\n  return /%/g.test(grade);\n}\n\nfunction isExcused(grade) {\n  return grade === 'EX';\n}\n\nfunction formatPointsOutOf(grade, pointsPossible) {\n  if (grade == null || grade === '') {\n    return grade;\n  }\n\n  if (pointsPossible == null || pointsPossible === '') {\n    return grade;\n  }\n\n  const numberOptions = {\n    precision: 2,\n    strip_insignificant_zeros: true\n  };\n  let score = UNGRADED;\n\n  if (grade != null) {\n    score = i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].n(grade, numberOptions);\n  }\n\n  const pointsPossibleTranslated = i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].n(pointsPossible, numberOptions);\n  return i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('%{score}/%{pointsPossibleTranslated}', {\n    pointsPossibleTranslated,\n    score\n  });\n}\n\nfunction normalizeCompleteIncompleteGrade(grade) {\n  if (PASS_GRADES.includes(grade)) {\n    return 'complete';\n  }\n\n  if (FAIL_GRADES.includes(grade)) {\n    return 'incomplete';\n  }\n\n  return null;\n}\n\nfunction shouldFormatGradingType(gradingType) {\n  return gradingType === POINTS || gradingType === PERCENT || gradingType === PASS_FAIL;\n}\n\nfunction shouldFormatGrade(grade, gradingType) {\n  if (gradingType) {\n    return shouldFormatGradingType(gradingType);\n  }\n\n  return typeof grade === 'number' || isPassFail(grade);\n}\n\nfunction excused() {\n  return i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('Excused');\n}\n\nfunction formatPointsGrade(score) {\n  return i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].n(Object(round__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(score, 2), {\n    precision: 2,\n    strip_insignificant_zeros: true\n  });\n}\n\nfunction formatPercentageGrade(score, options) {\n  const percent = options.pointsPossible ? Object(_GradeCalculationHelper__WEBPACK_IMPORTED_MODULE_3__[\"scoreToPercentage\"])(score, options.pointsPossible) : score;\n  return i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].n(Object(round__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(percent, 2), {\n    percentage: true,\n    precision: 2,\n    strip_insignificant_zeros: true\n  });\n}\n\nfunction formatGradingSchemeGrade(score, grade, options) {\n  if (options.pointsPossible) {\n    const percent = Object(_GradeCalculationHelper__WEBPACK_IMPORTED_MODULE_3__[\"scoreToPercentage\"])(score, options.pointsPossible);\n    return Object(_GradingSchemeHelper__WEBPACK_IMPORTED_MODULE_4__[\"scoreToGrade\"])(percent, options.gradingScheme);\n  } else if (grade != null) {\n    return grade;\n  } else {\n    return Object(_GradingSchemeHelper__WEBPACK_IMPORTED_MODULE_4__[\"scoreToGrade\"])(score, options.gradingScheme);\n  }\n}\n\nfunction formatCompleteIncompleteGrade(score, grade, options) {\n  let passed = false;\n\n  if (options.pointsPossible) {\n    passed = score > 0;\n  } else {\n    passed = PASS_GRADES.includes(grade);\n  }\n\n  return passed ? i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('Complete') : i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('Incomplete');\n}\n\nfunction formatGradeInfo(gradeInfo, options = {}) {\n  if (gradeInfo.excused) {\n    return excused();\n  }\n\n  if (gradeInfo.grade == null) {\n    return options.defaultValue != null ? options.defaultValue : UNGRADED;\n  }\n\n  return gradeInfo.grade;\n}\n\nconst GradeFormatHelper = {\n  /**\n   * Returns given grade rounded to two decimal places and formatted with I18n\n   * if it is a point or percent grade.\n   * If grade is undefined, null, or empty string, the grade is returned as is.\n   *\n   * @param {string|number|undefined|null} grade - Grade to be formatted.\n   * @param {object} options - An optional hash of arguments. The following optional arguments are supported:\n   *  gradingType {string} - If present will be used to determine whether or not to\n   *    format given grade. A value of 'points' or 'percent' will result in the grade\n   *    being formatted. A value of 'pass_fail' will result in internationalization.\n   *    Any other value will result in the grade not being formatted.\n   *  precision {number} - If present grade will be rounded to given precision. Default is two decimals.\n   *  formatType {string} - formats grade based on grading type\n   *    - points_out_of_fraction: if grading type is points and this format type is present the grade will\n   *      show its out of score. {grade}/{pointsPossible} i.e. 5/10 1/15\n   *  defaultValue - If present will be the return value when the grade is undefined, null, or empty string.\n   *\n   * @return {string} Given grade rounded to two decimal places and formatted with I18n\n   * if it is a point or percent grade.\n   */\n  formatGrade(grade, options = {}) {\n    let formattedGrade = grade;\n\n    if (grade == null || grade === '') {\n      return 'defaultValue' in options ? options.defaultValue : grade;\n    }\n\n    if (isExcused(grade)) {\n      return excused();\n    }\n\n    let parsedGrade = GradeFormatHelper.parseGrade(grade, options);\n\n    if (shouldFormatGrade(parsedGrade, options.gradingType)) {\n      if (isPassFail(parsedGrade, options.gradingType)) {\n        parsedGrade = normalizeCompleteIncompleteGrade(parsedGrade);\n        formattedGrade = parsedGrade === 'complete' ? i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('complete') : i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t('incomplete');\n      } else {\n        const roundedGrade = Object(round__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(parsedGrade, options.precision || 2);\n        formattedGrade = i18n_sharedGradeFormatHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].n(roundedGrade, {\n          percentage: isPercent(grade, options.gradingType)\n        });\n      }\n    }\n\n    if (options.gradingType === POINTS && options.formatType === POINTS_OUT_OF_FRACTION) {\n      formattedGrade = formatPointsOutOf(grade, options.pointsPossible);\n    }\n\n    return formattedGrade;\n  },\n\n  /**\n   * Given a localized point or percentage grade string,\n   * returns delocalized point or percentage string.\n   * Otherwise, returns input.\n   */\n  delocalizeGrade(localizedGrade) {\n    if (localizedGrade === void 0 || localizedGrade === null || typeof localizedGrade !== 'string') {\n      return localizedGrade;\n    }\n\n    const delocalizedGrade = _canvas_i18n_numberHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].parse(localizedGrade.replace('%', ''));\n\n    if (isNaN(delocalizedGrade)) {\n      return localizedGrade;\n    }\n\n    return delocalizedGrade + (/%/g.test(localizedGrade) ? '%' : '');\n  },\n\n  parseGrade(grade, options = {}) {\n    let parsedGrade;\n\n    if (grade == null || grade === '' || typeof grade === 'number') {\n      return grade;\n    }\n\n    const gradeNoPercent = grade.replace('%', '');\n\n    if ('delocalize' in options && !options.delocalize && !isNaN(gradeNoPercent)) {\n      parsedGrade = parseFloat(gradeNoPercent);\n    } else {\n      parsedGrade = _canvas_i18n_numberHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].parse(gradeNoPercent);\n    }\n\n    if (isNaN(parsedGrade)) {\n      return grade;\n    }\n\n    return parsedGrade;\n  },\n\n  excused,\n  isExcused,\n  formatGradeInfo,\n  formatPointsOutOf,\n\n  formatSubmissionGrade(submission, options = {\n    version: 'final'\n  }) {\n    if (submission.excused) {\n      return excused();\n    }\n\n    const score = options.version === 'entered' ? submission.enteredScore : submission.score;\n    const grade = options.version === 'entered' ? submission.enteredGrade : submission.grade;\n\n    if (score == null) {\n      return options.defaultValue != null ? options.defaultValue : UNGRADED;\n    }\n\n    switch (options.formatType) {\n      case 'percent':\n        return formatPercentageGrade(score, options);\n\n      case 'gradingScheme':\n        return formatGradingSchemeGrade(score, grade, options);\n\n      case 'passFail':\n        return formatCompleteIncompleteGrade(score, grade, options);\n\n      default:\n        return formatPointsGrade(score);\n    }\n  },\n\n  UNGRADED\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (GradeFormatHelper);\n\n//# sourceURL=webpack:///./ui/shared/grading/GradeFormatHelper.js?");

/***/ }),

/***/ "FdVj":
/*!****************************************!*\
  !*** ./ui/shared/i18n/numberHelper.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var parse_decimal_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parse-decimal-number */ \"qJBq\");\n/* harmony import */ var parse_decimal_number__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(parse_decimal_number__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _i18nObj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./i18nObj */ \"HGxv\");\n/*\n * Copyright (C) 2016 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nconst helper = {\n  _parseNumber: parse_decimal_number__WEBPACK_IMPORTED_MODULE_0___default.a,\n\n  parse(input) {\n    if (input == null) {\n      return NaN;\n    } else if (typeof input === 'number') {\n      return input;\n    }\n\n    let num = helper._parseNumber(input.toString(), {\n      thousands: _i18nObj__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lookup('number.format.delimiter'),\n      decimal: _i18nObj__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lookup('number.format.separator')\n    }); // fallback to default delimiters if invalid with locale specific ones\n\n\n    if (isNaN(num)) {\n      num = helper._parseNumber(input);\n    } // final fallback to old parseFloat - this allows us to still support scientific 'e' notation\n\n\n    if (input.toString().match(/e/) && isNaN(num)) {\n      num = parseFloat(input);\n    }\n\n    return num;\n  },\n\n  validate(input) {\n    return !isNaN(helper.parse(input));\n  }\n\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (helper);\n\n//# sourceURL=webpack:///./ui/shared/i18n/numberHelper.js?");

/***/ }),

/***/ "QnVe":
/*!****************************************************************************************!*\
  !*** ./frontend_build/i18n.js?sharedGradeFormatHelper!./ui/shims/dummyI18nResource.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @canvas/i18n/i18nObj */ \"HGxv\");\n/* harmony import */ var translations_core_en__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! translations/_core_en */ \"0sPK\");\n\n    \n    \n    \n\n    /* harmony default export */ __webpack_exports__[\"default\"] = (_canvas_i18n_i18nObj__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scoped('sharedGradeFormatHelper'));\n  \n\n//# sourceURL=webpack:///./ui/shims/dummyI18nResource.js?./frontend_build/i18n.js?sharedGradeFormatHelper");

/***/ }),

/***/ "qJBq":
/*!************************************************************************!*\
  !*** ./node_modules/parse-decimal-number/dist/parse-decimal-number.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() {\n  var options, parseDecimalNumber, patterns;\n\n  patterns = [];\n\n  options = {};\n\n  module.exports = parseDecimalNumber = function(value, inOptions, enforceGroupSize) {\n    var decimal, fractionPart, groupMinSize, integerPart, number, pattern, patternIndex, result, thousands;\n    if (enforceGroupSize == null) {\n      enforceGroupSize = true;\n    }\n    if (typeof inOptions === 'string') {\n      if (inOptions.length !== 2) {\n        throw {\n          name: 'ArgumentException',\n          message: 'The format for string options is \\'<thousands><decimal>\\' (exactly two characters)'\n        };\n      }\n      thousands = inOptions[0], decimal = inOptions[1];\n    } else if (Array.isArray(inOptions)) {\n      if (inOptions.length !== 2) {\n        throw {\n          name: 'ArgumentException',\n          message: 'The format for array options is [\\'<thousands>\\',\\'[<decimal>\\'] (exactly two elements)'\n        };\n      }\n      thousands = inOptions[0], decimal = inOptions[1];\n    } else {\n      thousands = (inOptions != null ? inOptions.thousands : void 0) || (inOptions != null ? inOptions.group : void 0) || options.thousands;\n      decimal = (inOptions != null ? inOptions.decimal : void 0) || options.decimal;\n    }\n    patternIndex = \"\" + thousands + decimal + enforceGroupSize;\n    pattern = patterns[patternIndex];\n    if (pattern == null) {\n      groupMinSize = enforceGroupSize ? 3 : 1;\n      pattern = patterns[patternIndex] = new RegExp(\"^\\\\s*([+\\-]?(?:(?:\\\\d{1,3}(?:\\\\\" + thousands + \"\\\\d{\" + groupMinSize + \",3})+)|\\\\d*))(?:\\\\\" + decimal + \"(\\\\d*))?\\\\s*$\");\n    }\n    result = value.match(pattern);\n    if (!((result != null) && result.length === 3)) {\n      return 0/0;\n    }\n    integerPart = result[1].replace(new RegExp(\"\\\\\" + thousands, 'g'), '');\n    fractionPart = result[2];\n    number = parseFloat(integerPart + \".\" + fractionPart);\n    return number;\n  };\n\n  module.exports.setOptions = function(newOptions) {\n    var key, value;\n    for (key in newOptions) {\n      value = newOptions[key];\n      options[key] = value;\n    }\n  };\n\n  module.exports.factoryReset = function() {\n    options = {\n      thousands: ',',\n      decimal: '.'\n    };\n  };\n\n  module.exports.withOptions = function(options, enforceGroupSize) {\n    if (enforceGroupSize == null) {\n      enforceGroupSize = true;\n    }\n    return function(value) {\n      return parseDecimalNumber(value, options, enforceGroupSize);\n    };\n  };\n\n  module.exports.factoryReset();\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./node_modules/parse-decimal-number/dist/parse-decimal-number.js?");

/***/ })

}]);