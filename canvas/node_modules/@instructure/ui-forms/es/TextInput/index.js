import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _dec3, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { controllable } from '@instructure/ui-prop-types';
import { FormField, FormPropTypes } from '@instructure/ui-form-field';
import { uid } from '@instructure/uid';
import { deprecated, omitProps, pickProps } from '@instructure/ui-react-utils';
import { isActiveElement } from '@instructure/ui-dom-utils';
import { themeable } from '@instructure/ui-themeable';
import { testable } from '@instructure/ui-testable';
var styles = {
  componentId: 'bwOAM',
  template: function template(theme) {
    return "\n\n.bwOAM_byIz{display:block;position:relative}\n\n.bwOAM_dnnz{align-items:center;display:flex;fill:".concat(theme.iconColor || 'inherit', ";height:100%;inset-inline-end:").concat(theme.padding || 'inherit', ";inset-inline-start:auto;pointer-events:none;position:absolute;top:0}\n\n[dir=ltr] .bwOAM_dnnz{left:auto;right:").concat(theme.padding || 'inherit', "}\n\n[dir=rtl] .bwOAM_dnnz{left:").concat(theme.padding || 'inherit', ";right:auto}\n\n.bwOAM_cPAP{border:").concat(theme.focusOutlineWidth || 'inherit', " ").concat(theme.focusOutlineStyle || 'inherit', " ").concat(theme.focusOutlineColor || 'inherit', ";border-radius:calc(").concat(theme.borderRadius || 'inherit', "*1.5);bottom:-0.25rem;box-sizing:border-box;display:block;left:-0.25rem;opacity:0;pointer-events:none;position:absolute;right:-0.25rem;top:-0.25rem;transform:scale(0.95);transition:all 0.2s}\n\n.bwOAM_cwos,input[type].bwOAM_cwos{-moz-appearance:none;-moz-osx-font-smoothing:grayscale;-webkit-appearance:none;-webkit-font-smoothing:antialiased;all:initial;animation:none 0s ease 0s 1 normal none running;appearance:none;backface-visibility:visible;background:transparent none repeat 0 0/auto auto padding-box border-box scroll;background:").concat(theme.background || 'inherit', ";border:medium none currentColor;border:").concat(theme.borderWidth || 'inherit', " ").concat(theme.borderStyle || 'inherit', " ").concat(theme.borderColor || 'inherit', ";border-collapse:separate;border-image:none;border-radius:0;border-radius:").concat(theme.borderRadius || 'inherit', ";border-spacing:0;bottom:auto;box-shadow:none;box-sizing:content-box;box-sizing:border-box;caption-side:top;clear:none;clip:auto;color:#000;color:").concat(theme.color || 'inherit', ";column-count:auto;column-fill:balance;column-gap:normal;column-rule:medium none currentColor;column-span:1;column-width:auto;columns:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;display:inline;display:block;empty-cells:show;float:none;font-family:serif;font-family:").concat(theme.fontFamily || 'inherit', ";font-size:medium;font-stretch:normal;font-style:normal;font-variant:normal;font-weight:400;font-weight:").concat(theme.fontWeight || 'inherit', ";height:auto;hyphens:none;left:auto;letter-spacing:normal;line-height:normal;line-height:1;list-style:disc outside none;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;orphans:2;outline:medium none invert;outline:none;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;padding:0 ").concat(theme.padding || 'inherit', ";page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;position:static;right:auto;tab-size:8;table-layout:auto;text-align:left;text-align-last:auto;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-origin:50% 50% 0;transform-style:flat;transition:none 0s ease 0s;transition:all 0.2s;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:2;width:auto;width:100%;word-spacing:normal;z-index:auto}\n\n.bwOAM_cwos::-ms-clear,input[type].bwOAM_cwos::-ms-clear{display:none}\n\n.bwOAM_cwos:focus,input[type].bwOAM_cwos:focus{box-shadow:none}\n\n.bwOAM_cwos:focus~.bwOAM_cPAP,input[type].bwOAM_cwos:focus~.bwOAM_cPAP{opacity:1;transform:scale(1)}\n\n.bwOAM_cwos[aria-invalid],.bwOAM_cwos[aria-invalid]:focus,.bwOAM_cwos[aria-invalid]~.bwOAM_cPAP,input[type].bwOAM_cwos[aria-invalid],input[type].bwOAM_cwos[aria-invalid]:focus,input[type].bwOAM_cwos[aria-invalid]~.bwOAM_cPAP{border-color:").concat(theme.errorBorderColor || 'inherit', "}\n\n.bwOAM_cwos:-ms-input-placeholder,input[type].bwOAM_cwos:-ms-input-placeholder{color:").concat(theme.placeholderColor || 'inherit', "}\n\n.bwOAM_cwos::placeholder,input[type].bwOAM_cwos::placeholder{color:").concat(theme.placeholderColor || 'inherit', "}\n\n.bwOAM_cwos.bwOAM_ywdX,input[type].bwOAM_cwos.bwOAM_ywdX{cursor:not-allowed;opacity:0.5;pointer-events:none}\n\n.bwOAM_cwos.bwOAM_doqw,input[type].bwOAM_cwos.bwOAM_doqw{font-size:").concat(theme.smallFontSize || 'inherit', ";height:").concat(theme.smallHeight || 'inherit', "}\n\n.bwOAM_cwos.bwOAM_ycrn,input[type].bwOAM_cwos.bwOAM_ycrn{font-size:").concat(theme.mediumFontSize || 'inherit', ";height:").concat(theme.mediumHeight || 'inherit', "}\n\n.bwOAM_cwos.bwOAM_cMDj,input[type].bwOAM_cwos.bwOAM_cMDj{font-size:").concat(theme.largeFontSize || 'inherit', ";height:").concat(theme.largeHeight || 'inherit', "}\n\n.bwOAM_cwos.bwOAM_Suqk,input[type].bwOAM_cwos.bwOAM_Suqk{-webkit-padding-end:calc(").concat(theme.padding || 'inherit', "*2 + 1em);-webkit-padding-start:").concat(theme.padding || 'inherit', ";padding-inline-end:calc(").concat(theme.padding || 'inherit', "*2 + 1em);padding-inline-start:").concat(theme.padding || 'inherit', "}\n\n[dir=ltr] .bwOAM_cwos.bwOAM_Suqk,[dir=ltr] input[type].bwOAM_cwos.bwOAM_Suqk{padding-left:").concat(theme.padding || 'inherit', ";padding-right:calc(").concat(theme.padding || 'inherit', "*2 + 1em)}\n\n[dir=rtl] .bwOAM_cwos.bwOAM_Suqk,[dir=rtl] input[type].bwOAM_cwos.bwOAM_Suqk{padding-left:calc(").concat(theme.padding || 'inherit', "*2 + 1em);padding-right:").concat(theme.padding || 'inherit', "}\n\n.bwOAM_cwos.bwOAM_EMjX,input[type].bwOAM_cwos.bwOAM_EMjX{text-align:start}\n\n[dir=ltr] .bwOAM_cwos.bwOAM_EMjX,[dir=ltr] input[type].bwOAM_cwos.bwOAM_EMjX{text-align:left}\n\n[dir=rtl] .bwOAM_cwos.bwOAM_EMjX,[dir=rtl] input[type].bwOAM_cwos.bwOAM_EMjX{text-align:right}\n\n.bwOAM_cwos.bwOAM_ImeN,[dir=ltr] .bwOAM_cwos.bwOAM_ImeN,[dir=ltr] input[type].bwOAM_cwos.bwOAM_ImeN,[dir=rtl] .bwOAM_cwos.bwOAM_ImeN,[dir=rtl] input[type].bwOAM_cwos.bwOAM_ImeN,input[type].bwOAM_cwos.bwOAM_ImeN{text-align:center}");
  },
  'layout': 'bwOAM_byIz',
  'icon': 'bwOAM_dnnz',
  'outline': 'bwOAM_cPAP',
  'input': 'bwOAM_cwos',
  'disabled': 'bwOAM_ywdX',
  'small': 'bwOAM_doqw',
  'medium': 'bwOAM_ycrn',
  'large': 'bwOAM_cMDj',
  'hasIcon': 'bwOAM_Suqk',
  'textAlign--start': 'bwOAM_EMjX',
  'textAlign--center': 'bwOAM_ImeN'
};
import theme from './theme';
/**
---
category: components/deprecated
id: DeprecatedTextInput
---
**/

var TextInput = (_dec = deprecated('7.0.0', null, 'Use TextInput from ui-text-input instead.'), _dec2 = testable(), _dec3 = themeable(theme, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(TextInput, _Component);

  var _super = _createSuper(TextInput);

  function TextInput(props) {
    var _this;

    _classCallCheck(this, TextInput);

    _this = _super.call(this);

    _this.handleInputRef = function (node) {
      _this._input = node;

      _this.props.inputRef(node);
    };

    _this._defaultId = uid('TextInput');
    _this._messagesId = uid('TextInput-messages');
    return _this;
  }
  /**
  * focus the input element
  */


  _createClass(TextInput, [{
    key: "focus",
    value: function focus() {
      this._input.focus();
    }
  }, {
    key: "renderIcon",
    value: function renderIcon() {
      var Icon = this.props.icon;

      if (typeof Icon === 'function') {
        return /*#__PURE__*/React.createElement("span", {
          className: styles.icon,
          "aria-hidden": "true"
        }, /*#__PURE__*/React.createElement(Icon, null));
      } else {
        return null;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classes;

      var _this$props = this.props,
          type = _this$props.type,
          size = _this$props.size,
          textAlign = _this$props.textAlign,
          placeholder = _this$props.placeholder,
          value = _this$props.value,
          defaultValue = _this$props.defaultValue,
          disabled = _this$props.disabled,
          readOnly = _this$props.readOnly,
          required = _this$props.required,
          width = _this$props.width,
          icon = _this$props.icon;
      var props = omitProps(this.props, TextInput.propTypes);
      var classes = (_classes = {}, _defineProperty(_classes, styles.input, true), _defineProperty(_classes, styles[size], size), _defineProperty(_classes, styles["textAlign--".concat(textAlign)], textAlign), _defineProperty(_classes, styles.hasIcon, icon), _defineProperty(_classes, styles.disabled, disabled), _classes);
      var style = width ? {
        width: width
      } : null;
      var descriptionIds = '';

      if (props['aria-describedby']) {
        descriptionIds = "".concat(props['aria-describedby']);
      }

      if (this.hasMessages) {
        descriptionIds += this._messagesId;
      }

      return /*#__PURE__*/React.createElement(FormField, Object.assign({}, pickProps(this.props, FormField.propTypes), {
        id: this.id,
        messagesId: this._messagesId
      }), /*#__PURE__*/React.createElement("span", {
        className: styles.layout
      }, /*#__PURE__*/React.createElement("input", Object.assign({}, props, {
        value: value,
        style: style,
        defaultValue: defaultValue,
        placeholder: placeholder,
        ref: this.handleInputRef,
        type: type,
        id: this.id,
        required: required,
        "aria-required": required,
        "aria-invalid": this.invalid ? 'true' : null,
        disabled: disabled || readOnly,
        className: classnames(classes),
        "aria-describedby": descriptionIds !== '' ? descriptionIds : null
      })), !disabled && !readOnly ? /*#__PURE__*/React.createElement("span", {
        className: styles.outline,
        "aria-hidden": "true"
      }) : null, this.renderIcon()));
    }
  }, {
    key: "hasMessages",
    get: function get() {
      return this.props.messages && this.props.messages.length > 0;
    }
  }, {
    key: "invalid",
    get: function get() {
      return this.props.messages && this.props.messages.findIndex(function (message) {
        return message.type === 'error';
      }) >= 0;
    }
  }, {
    key: "id",
    get: function get() {
      return this.props.id || this._defaultId;
    }
  }, {
    key: "focused",
    get: function get() {
      return isActiveElement(this._input);
    }
  }, {
    key: "value",
    get: function get() {
      return this._input.value;
    }
  }]);

  TextInput.displayName = "TextInput";
  return TextInput;
}(Component), _class2.propTypes = {
  type: PropTypes.oneOf(['text', 'email', 'url', 'tel', 'search', 'password']),
  label: PropTypes.node.isRequired,
  id: PropTypes.string,

  /**
  * object with shape: `{
  * text: PropTypes.string,
  * type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])
  *   }`
  */
  messages: PropTypes.arrayOf(FormPropTypes.message),
  size: PropTypes.oneOf(['small', 'medium', 'large']),
  layout: PropTypes.oneOf(['stacked', 'inline']),
  textAlign: PropTypes.oneOf(['start', 'center']),
  width: PropTypes.string,
  inline: PropTypes.bool,

  /**
  * Html placeholder text to display when the input has no value. This should be hint text, not a label
  * replacement.
  */
  placeholder: PropTypes.string,

  /**
   * Whether or not to disable the input
   */
  disabled: PropTypes.bool,

  /**
   * Works just like disabled but keeps the same styles as if it were active
   */
  readOnly: PropTypes.bool,
  required: PropTypes.bool,

  /**
  * a function that provides a reference to the actual input element
  */
  inputRef: PropTypes.func,

  /**
  * value to set on initial render
  */
  defaultValue: PropTypes.string,

  /**
  * the selected value (must be accompanied by an `onChange` prop)
  */
  value: controllable(PropTypes.string),

  /**
  * An icon to display within the input
  */
  icon: PropTypes.func
}, _class2.defaultProps = {
  id: void 0,
  width: void 0,
  placeholder: void 0,
  required: false,
  defaultValue: void 0,
  value: void 0,
  icon: void 0,
  inline: false,
  type: 'text',
  size: 'medium',
  textAlign: 'start',
  messages: [],
  disabled: false,
  readOnly: false,
  inputRef: function inputRef(input) {},
  layout: 'stacked'
}, _temp)) || _class) || _class) || _class);
export default TextInput;
export { TextInput };