import * as React from 'react';

export type PortalMountNode = any | ((...args: any[])=>any);

export type PortalInsertAt = "bottom" | "top";

export interface PortalProps {
    /**
     * Wheter or not the `<Portal />` is open
     */
    open?: boolean;
    /**
     * Callback fired when `<Portal />` content has been mounted in the DOM
     */
    onOpen?: (...args: any[])=>any;
    /**
     * Callback fired when `<Portal />` has been unmounted from the DOM
     */
    onClose?: (...args: any[])=>any;
    /**
     * An element or a function returning an element to use as the mount node
     * for the `<Portal />` (defaults to `document.body`)
     */
    mountNode?: PortalMountNode;
    /**
     * Insert the element at the 'top' of the mountNode or at the 'bottom'
     */
    insertAt?: PortalInsertAt;
    /**
     * The children to be rendered within the `<Portal />`
     */
    children?: React.ReactNode;
    /**
     * provides a reference to the underlying html element
     */
    elementRef?: (...args: any[])=>any;
}

export class Portal extends React.Component<PortalProps, any> {
    render(): JSX.Element;

}

