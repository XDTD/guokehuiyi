import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import { error as _error } from "@instructure/console";

var _dec, _dec2, _dec3, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { View } from '@instructure/ui-view';
import { callRenderProp, deprecated, omitProps } from '@instructure/ui-react-utils';
import { themeable, ThemeablePropTypes } from '@instructure/ui-themeable';
import { isIE11 } from '@instructure/ui-utils';
import { uid } from '@instructure/uid';
import { testable } from '@instructure/ui-testable';
var styles = {
  componentId: 'eHQDY',
  template: function template(theme) {
    return "\n\n@keyframes eHQDY_dpDr{to{transform:rotate(360deg)}}\n\n@keyframes eHQDY_buIf{0%{stroke-dashoffset:190%}50%{stroke-dashoffset:50%;transform:rotate(90deg)}to{stroke-dashoffset:190%;transform:rotate(360deg)}}\n\n.eHQDY_bGBk{box-sizing:border-box;display:inline-block;overflow:hidden;position:relative;vertical-align:middle}\n\n.eHQDY_dTxv{stroke:".concat(theme.trackColor || 'inherit', "}\n\n.eHQDY_dfBC,.eHQDY_dfBC .eHQDY_cJVF{height:").concat(theme.xSmallSize || 'inherit', ";width:").concat(theme.xSmallSize || 'inherit', "}\n\n.eHQDY_dfBC .eHQDY_eWAY,.eHQDY_dfBC .eHQDY_dTxv{stroke-width:").concat(theme.xSmallBorderWidth || 'inherit', "}\n\n.eHQDY_dfBC .eHQDY_eWAY{stroke-dasharray:3em;transform-origin:calc(").concat(theme.xSmallSize || 'inherit', "/2) calc(").concat(theme.xSmallSize || 'inherit', "/2)}\n\n.eHQDY_doqw,.eHQDY_doqw .eHQDY_cJVF{height:").concat(theme.smallSize || 'inherit', ";width:").concat(theme.smallSize || 'inherit', "}\n\n.eHQDY_doqw .eHQDY_eWAY,.eHQDY_doqw .eHQDY_dTxv{stroke-width:").concat(theme.smallBorderWidth || 'inherit', "}\n\n.eHQDY_doqw .eHQDY_eWAY{stroke-dasharray:6em;transform-origin:calc(").concat(theme.smallSize || 'inherit', "/2) calc(").concat(theme.smallSize || 'inherit', "/2)}\n\n.eHQDY_ycrn,.eHQDY_ycrn .eHQDY_cJVF{height:").concat(theme.mediumSize || 'inherit', ";width:").concat(theme.mediumSize || 'inherit', "}\n\n.eHQDY_ycrn .eHQDY_cJVF,.eHQDY_ycrn .eHQDY_eWAY,.eHQDY_ycrn .eHQDY_dTxv{stroke-width:").concat(theme.mediumBorderWidth || 'inherit', "}\n\n.eHQDY_ycrn .eHQDY_eWAY{stroke-dasharray:10.5em;transform-origin:calc(").concat(theme.mediumSize || 'inherit', "/2) calc(").concat(theme.mediumSize || 'inherit', "/2)}\n\n.eHQDY_cMDj,.eHQDY_cMDj .eHQDY_cJVF{height:").concat(theme.largeSize || 'inherit', ";width:").concat(theme.largeSize || 'inherit', "}\n\n.eHQDY_cMDj .eHQDY_cJVF,.eHQDY_cMDj .eHQDY_eWAY,.eHQDY_cMDj .eHQDY_dTxv{stroke-width:").concat(theme.largeBorderWidth || 'inherit', "}\n\n.eHQDY_cMDj .eHQDY_eWAY{stroke-dasharray:14em;transform-origin:calc(").concat(theme.largeSize || 'inherit', "/2) calc(").concat(theme.largeSize || 'inherit', "/2)}\n\n.eHQDY_cJVF{animation-duration:2.25s;animation-iteration-count:infinite;animation-name:eHQDY_dpDr;animation-timing-function:linear;display:block;left:0;position:absolute;top:0}\n\n.eHQDY_eWAY,.eHQDY_dTxv{fill:none}\n\n.eHQDY_eWAY{stroke-linecap:round}\n\n.eHQDY_bGBk:not(.eHQDY_eoSs) .eHQDY_eWAY{animation-duration:1.75s;animation-iteration-count:infinite;animation-name:eHQDY_buIf;animation-timing-function:ease}\n\n.eHQDY_bGBk.eHQDY_eoSs .eHQDY_eWAY{stroke-dashoffset:100%}\n\n.eHQDY_ddES .eHQDY_eWAY{stroke:").concat(theme.color || 'inherit', "}\n\n.eHQDY_enfx .eHQDY_eWAY{stroke:").concat(theme.inverseColor || 'inherit', "}");
  },
  'root': 'eHQDY_bGBk',
  'circleTrack': 'eHQDY_dTxv',
  'x-small': 'eHQDY_dfBC',
  'circle': 'eHQDY_cJVF',
  'circleSpin': 'eHQDY_eWAY',
  'small': 'eHQDY_doqw',
  'medium': 'eHQDY_ycrn',
  'large': 'eHQDY_cMDj',
  'rotate': 'eHQDY_dpDr',
  'ie11': 'eHQDY_eoSs',
  'morph': 'eHQDY_buIf',
  'default': 'eHQDY_ddES',
  'inverse': 'eHQDY_enfx'
};
import theme from './theme';
/**
---
category: components
---
**/

var Spinner = (_dec = deprecated('8.0.0', {
  title: 'renderTitle'
}), _dec2 = testable(), _dec3 = themeable(theme, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Spinner, _Component);

  var _super = _createSuper(Spinner);

  function Spinner(props) {
    var _this;

    _classCallCheck(this, Spinner);

    _this = _super.call(this);
    _this.titleId = uid('Spinner');
    return _this;
  }

  _createClass(Spinner, [{
    key: "radius",
    value: function radius() {
      switch (this.props.size) {
        case 'x-small':
          return '0.5em';

        case 'small':
          return '1em';

        case 'large':
          return '2.25em';

        default:
          return '1.75em';
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classes;

      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles[this.props.size], true), _defineProperty(_classes, styles[this.props.variant], true), _defineProperty(_classes, styles.ie11, isIE11), _classes);
      var passthroughProps = View.omitViewProps(omitProps(this.props, Spinner.propTypes), Spinner);
      var hasTitle = this.props.renderTitle || this.props.title;

      /*#__PURE__*/

      /*#__PURE__*/
      _error(hasTitle, '[Spinner] The renderTitle prop is necessary for screen reader support.');

      return /*#__PURE__*/React.createElement(View, Object.assign({}, passthroughProps, {
        as: this.props.as,
        elementRef: this.props.elementRef,
        className: classNames(classes),
        margin: this.props.margin
      }), /*#__PURE__*/React.createElement("svg", {
        className: styles.circle,
        role: "img",
        "aria-labelledby": this.titleId,
        focusable: "false"
      }, /*#__PURE__*/React.createElement("title", {
        id: this.titleId
      }, callRenderProp(this.props.renderTitle)), /*#__PURE__*/React.createElement("g", {
        role: "presentation"
      }, this.props.variant !== 'inverse' && /*#__PURE__*/React.createElement("circle", {
        className: styles.circleTrack,
        cx: "50%",
        cy: "50%",
        r: this.radius()
      }), /*#__PURE__*/React.createElement("circle", {
        className: styles.circleSpin,
        cx: "50%",
        cy: "50%",
        r: this.radius()
      }))));
    }
  }]);

  Spinner.displayName = "Spinner";
  return Spinner;
}(Component), _class2.propTypes = {
  /**
  * Give the spinner a title to be read by screenreaders
  */
  renderTitle: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),

  /**
  * Different-sized spinners
  */
  size: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),

  /**
  * Different color schemes for use with light or dark backgrounds
  */
  variant: PropTypes.oneOf(['default', 'inverse']),

  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: ThemeablePropTypes.spacing,
  elementRef: PropTypes.func,
  as: PropTypes.elementType,

  /**
   * __Deprecated - use `renderTitle` instead__
   */

  /* eslint-disable react/require-default-props */
  title: PropTypes.string
  /* eslint-enable react/require-default-props */

}, _class2.defaultProps = {
  renderTitle: void 0,
  as: 'div',
  size: 'medium',
  variant: 'default',
  margin: void 0,
  elementRef: void 0
}, _temp)) || _class) || _class) || _class);
export default Spinner;
export { Spinner };