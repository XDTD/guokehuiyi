"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "CheckboxFacade", {
  enumerable: true,
  get: function get() {
    return _CheckboxFacade.CheckboxFacade;
  }
});
Object.defineProperty(exports, "ToggleFacade", {
  enumerable: true,
  get: function get() {
    return _ToggleFacade.ToggleFacade;
  }
});
exports.Checkbox = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _console = require("@instructure/console");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _keycode = _interopRequireDefault(require("keycode"));

var _classnames = _interopRequireDefault(require("classnames"));

var _controllable = require("@instructure/ui-prop-types/lib/controllable.js");

var _FormPropTypes = require("@instructure/ui-form-field/lib/FormPropTypes.js");

var _FormFieldMessages = require("@instructure/ui-form-field/lib/FormFieldMessages");

var _createChainedFunction = require("@instructure/ui-utils/lib/createChainedFunction.js");

var _uid = require("@instructure/uid");

var _isActiveElement = require("@instructure/ui-dom-utils/lib/isActiveElement.js");

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _CheckboxFacade = require("./CheckboxFacade");

var _ToggleFacade = require("./ToggleFacade");

var _theme = _interopRequireDefault(require("./theme.js"));

var _dec, _dec2, _class, _class2, _temp;

var styles = {
  componentId: 'epRMX',
  template: function template(theme) {
    return "\n\n.epRMX_bGBk{position:relative;width:100%}\n\n.epRMX_bOnW{all:initial;animation:none 0s ease 0s 1 normal none running;backface-visibility:visible;background:transparent none repeat 0 0/auto auto padding-box border-box scroll;border:medium none currentColor;border-collapse:separate;border-image:none;border-radius:0;border-spacing:0;bottom:auto;box-shadow:none;box-sizing:content-box;caption-side:top;clear:none;clip:auto;color:#000;column-count:auto;column-fill:balance;column-gap:normal;column-rule:medium none currentColor;column-span:1;column-width:auto;columns:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;direction:inherit;display:inline;display:block;empty-cells:show;float:none;font-family:serif;font-size:medium;font-stretch:normal;font-style:normal;font-variant:normal;font-weight:400;height:auto;hyphens:none;left:auto;letter-spacing:normal;line-height:normal;list-style:disc outside none;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;orphans:2;outline:medium none invert;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;position:static;right:auto;tab-size:8;table-layout:auto;text-align:left;text-align:start;text-align-last:auto;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-origin:50% 50% 0;transform-style:flat;transition:none 0s ease 0s;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:2;width:auto;word-spacing:normal;z-index:auto}\n\n[dir=ltr] .epRMX_bOnW{text-align:left}\n\n[dir=rtl] .epRMX_bOnW{text-align:right}\n\n.epRMX_cwos{font-size:inherit;inset-inline-end:auto;inset-inline-start:0;line-height:inherit;margin:0;opacity:0.0001;padding:0;position:absolute;top:0;width:auto}\n\n[dir=ltr] .epRMX_cwos{left:0;right:auto}\n\n[dir=rtl] .epRMX_cwos{left:auto;right:0}\n\n.epRMX_ywdX{cursor:not-allowed;opacity:0.5;pointer-events:none}\n\n.epRMX_eXrk{display:inline-block;vertical-align:middle;width:auto}";
  },
  'root': 'epRMX_bGBk',
  'control': 'epRMX_bOnW',
  'input': 'epRMX_cwos',
  'disabled': 'epRMX_ywdX',
  'inline': 'epRMX_eXrk'
};

/**
---
category: components
---
**/
var Checkbox = (_dec = (0, _testable.testable)(), _dec2 = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Checkbox, _Component);

  var _super = (0, _createSuper2.default)(Checkbox);

  function Checkbox(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Checkbox);
    _this = _super.call(this, props);

    _this.handleChange = function (e) {
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          disabled = _this$props.disabled,
          checked = _this$props.checked,
          readOnly = _this$props.readOnly;

      if (disabled || readOnly) {
        e.preventDefault();
        return;
      }

      if (typeof checked === 'undefined') {
        _this.setState({
          checked: !_this.state.checked
        });
      }

      if (typeof onChange === 'function') {
        onChange(e);
      }
    };

    _this.handleKeyDown = function (e) {
      if (_this.props.variant === 'toggle' && (e.keyCode === _keycode.default.codes.enter || e.keyCode === _keycode.default.codes.return)) {
        _this._input.click();

        e.preventDefault();
      }
    };

    _this.handleFocus = function (e) {
      _this.setState({
        focused: true
      });
    };

    _this.handleBlur = function (e) {
      _this.setState({
        focused: false
      });
    };

    _this.handleMouseOver = function (e) {
      _this.setState({
        hovered: true
      });
    };

    _this.handleMouseOut = function (e) {
      _this.setState({
        hovered: false
      });
    };

    _this.state = {
      focused: false,
      hovered: false
    };

    if (typeof props.checked === 'undefined') {
      _this.state.checked = !!props.defaultChecked;
    }

    _this._defaultId = (0, _uid.uid)('Checkbox');
    return _this;
  }

  (0, _createClass2.default)(Checkbox, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // see https://github.com/facebook/react/issues/1798
      this._input.indeterminate = this.props.indeterminate;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      // see https://github.com/facebook/react/issues/1798
      if (prevProps.indeterminate !== this.props.indeterminate) {
        this._input.indeterminate = this.props.indeterminate;
      }
    }
  }, {
    key: "focus",
    value: function focus() {
      this._input && this._input.focus();
    }
  }, {
    key: "renderFacade",
    value: function renderFacade() {
      var _this$props2 = this.props,
          size = _this$props2.size,
          disabled = _this$props2.disabled,
          variant = _this$props2.variant,
          label = _this$props2.label,
          readOnly = _this$props2.readOnly,
          indeterminate = _this$props2.indeterminate,
          labelPlacement = _this$props2.labelPlacement;
      var _this$state = this.state,
          hovered = _this$state.hovered,
          focused = _this$state.focused;

      /*#__PURE__*/
      ( /*#__PURE__*/0, _console.error)(!(variant === 'simple' && labelPlacement !== 'end'), "[Checkbox] The `simple` variant does not support the `labelPlacement` property.  Use the `toggle` variant instead.");

      if (variant === 'toggle') {
        return /*#__PURE__*/_react.default.createElement(_ToggleFacade.ToggleFacade, {
          disabled: disabled,
          size: size,
          hovered: hovered,
          focused: focused,
          checked: this.checked,
          readOnly: readOnly,
          labelPlacement: labelPlacement
        }, label);
      } else {
        return /*#__PURE__*/_react.default.createElement(_CheckboxFacade.CheckboxFacade, {
          size: size,
          hovered: hovered,
          focused: focused,
          checked: this.checked,
          indeterminate: indeterminate
        }, label);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classes,
          _this2 = this;

      var _this$props3 = this.props,
          inline = _this$props3.inline,
          disabled = _this$props3.disabled,
          readOnly = _this$props3.readOnly,
          messages = _this$props3.messages,
          value = _this$props3.value,
          onKeyDown = _this$props3.onKeyDown,
          onFocus = _this$props3.onFocus,
          onBlur = _this$props3.onBlur,
          onMouseOver = _this$props3.onMouseOver,
          onMouseOut = _this$props3.onMouseOut,
          indeterminate = _this$props3.indeterminate,
          variant = _this$props3.variant;
      var props = (0, _omitProps.omitProps)(this.props, Checkbox.propTypes);
      var classes = (_classes = {}, (0, _defineProperty2.default)(_classes, styles.root, true), (0, _defineProperty2.default)(_classes, styles.disabled, disabled), (0, _defineProperty2.default)(_classes, styles.inline, inline), _classes);

      /*#__PURE__*/
      ( /*#__PURE__*/0, _console.error)(!(variant === 'toggle' && indeterminate), "[Checkbox] The `toggle` variant does not support the `indeterminate` property. Use the `simple` variant instead.");
      /* eslint-disable jsx-a11y/mouse-events-have-key-events */

      return /*#__PURE__*/_react.default.createElement("div", {
        className: (0, _classnames.default)(classes),
        onMouseOver: (0, _createChainedFunction.createChainedFunction)(onMouseOver, this.handleMouseOver),
        onMouseOut: (0, _createChainedFunction.createChainedFunction)(onMouseOut, this.handleMouseOut)
      }, /*#__PURE__*/_react.default.createElement("input", Object.assign({}, props, {
        id: this.id,
        value: value,
        type: "checkbox",
        ref: function ref(c) {
          _this2._input = c;
        },
        disabled: disabled || readOnly,
        "aria-checked": indeterminate ? 'mixed' : null,
        className: styles.input,
        onChange: this.handleChange,
        onKeyDown: (0, _createChainedFunction.createChainedFunction)(onKeyDown, this.handleKeyDown),
        onFocus: (0, _createChainedFunction.createChainedFunction)(onFocus, this.handleFocus),
        onBlur: (0, _createChainedFunction.createChainedFunction)(onBlur, this.handleBlur),
        checked: this.checked
      })), /*#__PURE__*/_react.default.createElement("label", {
        htmlFor: this.id,
        className: styles.control
      }, this.renderFacade(), /*#__PURE__*/_react.default.createElement(_FormFieldMessages.FormFieldMessages, {
        messages: messages
      })));
      /* eslint-enable jsx-a11y/mouse-events-have-key-events */
    }
  }, {
    key: "id",
    get: function get() {
      return this.props.id || this._defaultId;
    }
  }, {
    key: "checked",
    get: function get() {
      return typeof this.props.checked === 'undefined' ? this.state.checked : this.props.checked;
    }
  }, {
    key: "focused",
    get: function get() {
      return (0, _isActiveElement.isActiveElement)(this._input);
    }
  }]);
  Checkbox.displayName = "Checkbox";
  return Checkbox;
}(_react.Component), _class2.propTypes = {
  label: _propTypes.default.node.isRequired,
  id: _propTypes.default.string,
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),

  /**
  * object with shape: `{
  * text: PropTypes.string,
  * type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])
  *   }`
  */
  messages: _propTypes.default.arrayOf(_FormPropTypes.FormPropTypes.message),

  /* whether to set the input to checked or not on initial render */
  defaultChecked: _propTypes.default.bool,

  /**
  * whether the input is checked or not (must be accompanied by an `onChange` prop)
  */
  checked: (0, _controllable.controllable)(_propTypes.default.bool, 'onChange', 'defaultChecked'),

  /**
  * when used with the `checked` prop, the component will not control its own state
  */
  onChange: _propTypes.default.func,
  onKeyDown: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  onMouseOver: _propTypes.default.func,
  onMouseOut: _propTypes.default.func,

  /**
   * Whether or not to disable the checkbox
   */
  disabled: _propTypes.default.bool,

  /**
   * Works just like disabled but keeps the same styles as if it were active
   */
  readOnly: _propTypes.default.bool,

  /**
  * Visual state showing that child checkboxes are a combination of checked and unchecked
  */
  indeterminate: _propTypes.default.bool,
  size: _propTypes.default.oneOf(['small', 'medium', 'large']),
  variant: _propTypes.default.oneOf(['simple', 'toggle']),
  inline: _propTypes.default.bool,
  labelPlacement: _propTypes.default.oneOf(['top', 'start', 'end'])
}, _class2.defaultProps = {
  size: 'medium',
  variant: 'simple',
  disabled: false,
  inline: false,
  indeterminate: false,
  readOnly: false,
  onChange: void 0,
  onKeyDown: void 0,
  onFocus: void 0,
  onBlur: void 0,
  onMouseOut: void 0,
  onMouseOver: void 0,
  checked: void 0,
  defaultChecked: void 0,
  messages: void 0,
  id: void 0,
  value: void 0,
  labelPlacement: 'end'
}, _temp)) || _class) || _class);
exports.Checkbox = Checkbox;
var _default = Checkbox;
exports.default = _default;