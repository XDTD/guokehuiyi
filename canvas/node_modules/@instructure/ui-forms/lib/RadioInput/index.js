"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RadioInput = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _deprecated = require("@instructure/ui-react-utils/lib/deprecated.js");

var _RadioInput = require("@instructure/ui-radio-input/lib/RadioInput");

var _dec, _class, _class2, _temp;

/**
---
category: components/deprecated
id: DeprecatedRadioInput
---
**/
var RadioInput = (_dec = (0, _deprecated.deprecated)('7.0.0', null, 'Use RadioInput from ui-radio-input instead.'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(RadioInput, _Component);

  var _super = (0, _createSuper2.default)(RadioInput);

  function RadioInput() {
    var _this;

    (0, _classCallCheck2.default)(this, RadioInput);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this._radioInput = null;
    return _this;
  }

  (0, _createClass2.default)(RadioInput, [{
    key: "focus",
    value: function focus() {
      this._radioInput && this._radioInput.focus();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/_react.default.createElement(_RadioInput.RadioInput, Object.assign({
        ref: function ref(component) {
          _this2._radioInput = component;
        }
      }, this.props));
    }
  }, {
    key: "id",
    get: function get() {
      return this._radioInput && this._radioInput.id;
    }
  }, {
    key: "focused",
    get: function get() {
      return this._radioInput && this._radioInput.focused;
    }
  }, {
    key: "checked",
    get: function get() {
      return this._radioInput && this._radioInput.checked;
    }
  }]);
  RadioInput.displayName = "RadioInput";
  return RadioInput;
}(_react.Component), _class2.propTypes = {
  label: _propTypes.default.node.isRequired,
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  id: _propTypes.default.string,
  name: _propTypes.default.string,
  checked: _propTypes.default.bool,

  /**
   * Whether or not to disable the input
   */
  disabled: _propTypes.default.bool,

  /**
   * Works just like disabled but keeps the same styles as if it were active
   */
  readOnly: _propTypes.default.bool,
  variant: _propTypes.default.oneOf(['simple', 'toggle']),
  size: _propTypes.default.oneOf(['small', 'medium', 'large']),
  context: _propTypes.default.oneOf(['success', 'warning', 'danger', 'off']),
  inline: _propTypes.default.bool,
  onClick: _propTypes.default.func,
  onChange: _propTypes.default.func
}, _class2.defaultProps = {
  onClick: function onClick(event) {},
  onChange: function onChange(event) {},
  variant: 'simple',
  size: 'medium',
  disabled: false,
  inline: false,
  context: 'success',
  readOnly: false,
  checked: void 0,
  id: void 0,
  name: void 0,
  value: void 0
}, _temp)) || _class);
exports.RadioInput = RadioInput;
var _default = RadioInput;
exports.default = _default;