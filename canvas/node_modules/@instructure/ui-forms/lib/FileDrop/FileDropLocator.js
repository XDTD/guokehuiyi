"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FileDropLocator = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _locator = require("@instructure/ui-test-locator/lib/utils/locator.js");

var _index = require("./index");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var fileInputLocator = (0, _locator.locator)('input[type="file"]');
var FileDropLocator = (0, _locator.locator)(_index.FileDrop.selector, {
  // the file input isn't visible in this component,
  // so we need special locator methods to interact w/ it
  click: function () {
    var _click = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(element, init, options) {
      var input;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return fileInputLocator.find(element, {
                visible: false
              });

            case 2:
              input = _context.sent;
              return _context.abrupt("return", input.click(init, (0, _objectSpread2.default)({}, options, {
                clickable: false
              })));

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function click(_x, _x2, _x3) {
      return _click.apply(this, arguments);
    }

    return click;
  }(),
  keyUp: function () {
    var _keyUp = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(element, whichKey, init, options) {
      var input;
      return _regenerator.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return fileInputLocator.find(element, {
                visible: false
              });

            case 2:
              input = _context2.sent;
              return _context2.abrupt("return", input.keyUp(whichKey, init, (0, _objectSpread2.default)({}, options, {
                clickable: false
              })));

            case 4:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    function keyUp(_x4, _x5, _x6, _x7) {
      return _keyUp.apply(this, arguments);
    }

    return keyUp;
  }(),
  keyDown: function () {
    var _keyDown = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(element, whichKey, init, options) {
      var input;
      return _regenerator.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return fileInputLocator.find(element, {
                visible: false
              });

            case 2:
              input = _context3.sent;
              return _context3.abrupt("return", input.keyDown(whichKey, init, (0, _objectSpread2.default)({}, options, {
                clickable: false
              })));

            case 4:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    function keyDown(_x8, _x9, _x10, _x11) {
      return _keyDown.apply(this, arguments);
    }

    return keyDown;
  }()
});
exports.FileDropLocator = FileDropLocator;