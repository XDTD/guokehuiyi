"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckboxGroup = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _controllable = require("@instructure/ui-prop-types/lib/controllable.js");

var _Children = require("@instructure/ui-prop-types/lib/Children.js");

var _FormPropTypes = require("@instructure/ui-form-field/lib/FormPropTypes.js");

var _deprecated = require("@instructure/ui-react-utils/lib/deprecated.js");

var _CheckboxGroup = require("@instructure/ui-checkbox/lib/CheckboxGroup");

var _Checkbox = require("../Checkbox");

var _dec, _class, _class2, _temp;

/**
---
category: components/deprecated
id: DeprecatedCheckboxGroup
---
**/
var CheckboxGroup = (_dec = (0, _deprecated.deprecated)('7.0.0', null, 'Use CheckboxGroup from ui-checkbox instead.'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(CheckboxGroup, _Component);

  var _super = (0, _createSuper2.default)(CheckboxGroup);

  function CheckboxGroup() {
    var _this;

    (0, _classCallCheck2.default)(this, CheckboxGroup);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this._checkboxGroup = null;
    return _this;
  }

  (0, _createClass2.default)(CheckboxGroup, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/_react.default.createElement(_CheckboxGroup.CheckboxGroup, Object.assign({
        ref: function ref(component) {
          _this2._checkboxGroup = component;
        }
      }, this.props));
    }
  }, {
    key: "hasMessages",
    get: function get() {
      return this._checkboxGroup && this._checkboxGroup.hasMessages;
    }
  }, {
    key: "value",
    get: function get() {
      return this._checkboxGroup && this._checkboxGroup.value;
    }
  }]);
  CheckboxGroup.displayName = "CheckboxGroup";
  return CheckboxGroup;
}(_react.Component), _class2.propTypes = {
  name: _propTypes.default.string.isRequired,
  description: _propTypes.default.node.isRequired,

  /**
  * value to set on initial render
  */
  defaultValue: _propTypes.default.array,

  /**
  * the selected values (must be accompanied by an `onChange` prop)
  */
  value: (0, _controllable.controllable)(_propTypes.default.array),

  /**
  * when used with the `value` prop, the component will not control its own state
  */
  onChange: _propTypes.default.func,
  disabled: _propTypes.default.bool,
  readOnly: _propTypes.default.bool,

  /**
  * object with shape: `{
  text: PropTypes.string,
  type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])
    }`
  */
  messages: _propTypes.default.arrayOf(_FormPropTypes.FormPropTypes.message),

  /**
  * children of type `Checkbox`
  */
  children: _Children.Children.oneOf([_Checkbox.Checkbox]),
  size: _propTypes.default.oneOf(['small', 'medium', 'large']),
  layout: _propTypes.default.oneOf(['stacked', 'columns', 'inline'])
}, _class2.defaultProps = {
  disabled: false,
  readOnly: false,
  size: 'medium',
  layout: 'stacked',
  defaultValue: void 0,
  messages: void 0,
  value: void 0,
  onChange: void 0,
  children: null
}, _temp)) || _class);
exports.CheckboxGroup = CheckboxGroup;
var _default = CheckboxGroup;
exports.default = _default;