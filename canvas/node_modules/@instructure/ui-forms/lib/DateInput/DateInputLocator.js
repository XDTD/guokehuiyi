"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "DatePickerLocator", {
  enumerable: true,
  get: function get() {
    return _DatePickerLocator.DatePickerLocator;
  }
});
exports.DateInputLocator = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _locator2 = require("@instructure/ui-test-locator/lib/utils/locator.js");

var _PopoverLocator = require("@instructure/ui-overlays/lib/Popover/PopoverLocator");

var _DatePickerLocator = require("./DatePicker/DatePickerLocator");

var _index = require("./index");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
// eslint-disable-next-line no-restricted-imports
var DateInputLocator = (0, _locator2.locator)(_index.DateInput.selector, {
  findInput: function findInput() {
    var _locator;

    return (_locator = (0, _locator2.locator)('input')).find.apply(_locator, arguments);
  },
  findDatePicker: function () {
    var _findDatePicker = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(element) {
      var content;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return _PopoverLocator.PopoverLocator.findContent(element);

            case 2:
              content = _context.sent;
              return _context.abrupt("return", content ? _DatePickerLocator.DatePickerLocator.find(content.getDOMNode()) : null);

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function findDatePicker(_x) {
      return _findDatePicker.apply(this, arguments);
    }

    return findDatePicker;
  }()
});
exports.DateInputLocator = DateInputLocator;