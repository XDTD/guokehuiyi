"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RangeInput = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _controllable = require("@instructure/ui-prop-types/lib/controllable.js");

var _FormPropTypes = require("@instructure/ui-form-field/lib/FormPropTypes.js");

var _RangeInput = require("@instructure/ui-range-input/lib/RangeInput");

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _deprecated = require("@instructure/ui-react-utils/lib/deprecated.js");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _dec2, _dec3, _class, _class2, _temp;

/**
---
category: components/deprecated
id: DeprecatedRangeInput
---
**/
var RangeInput = (_dec = (0, _deprecated.deprecated)('7.0.0', null, 'Use RangeInput from ui-range-input instead.'), _dec2 = (0, _testable.testable)(), _dec3 = (0, _themeable.themeable)(_theme.default), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(RangeInput, _Component);

  var _super = (0, _createSuper2.default)(RangeInput);

  function RangeInput() {
    var _this;

    (0, _classCallCheck2.default)(this, RangeInput);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this._rangeInput = null;
    return _this;
  }

  (0, _createClass2.default)(RangeInput, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/_react.default.createElement(_RangeInput.RangeInput, Object.assign({
        ref: function ref(component) {
          _this2._rangeInput = component;
        }
      }, this.props));
    }
  }, {
    key: "id",
    get: function get() {
      return this._rangeInput && this._rangeInput.id;
    }
  }, {
    key: "value",
    get: function get() {
      return this._rangeInput && this._rangeInput.value;
    }
  }, {
    key: "invalid",
    get: function get() {
      return this._rangeInput && this._rangeInput.invalid;
    }
  }]);
  RangeInput.displayName = "RangeInput";
  return RangeInput;
}(_react.Component), _class2.propTypes = {
  min: _propTypes.default.number.isRequired,
  max: _propTypes.default.number.isRequired,

  /**
  * value to set on initial render
  */
  defaultValue: _propTypes.default.number,

  /**
  * the selected value (must be accompanied by an `onChange` prop)
  */
  value: (0, _controllable.controllable)(_propTypes.default.number),

  /**
  * when used with the `value` prop, the component will not control its own state
  */
  onChange: _propTypes.default.func,
  messages: _propTypes.default.arrayOf(_FormPropTypes.FormPropTypes.message),
  size: _propTypes.default.oneOf(['small', 'medium', 'large']),
  layout: _propTypes.default.oneOf(['stacked', 'inline']),
  id: _propTypes.default.string,
  label: _propTypes.default.node.isRequired,

  /**
  * whether to display the current value
  */
  displayValue: _propTypes.default.bool,
  step: _propTypes.default.number,

  /**
  * A function to format the displayed value
  */
  formatValue: _propTypes.default.func,
  inline: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  readOnly: _propTypes.default.bool
}, _class2.defaultProps = {
  step: 1,
  formatValue: function formatValue(val) {
    return val;
  },
  max: 0,
  min: 0,
  inline: false,
  size: 'medium',
  layout: 'stacked',
  displayValue: true,
  disabled: false,
  readOnly: false,
  id: void 0,
  defaultValue: void 0,
  value: void 0,
  onChange: void 0,
  messages: void 0
}, _temp)) || _class) || _class) || _class);
exports.RangeInput = RangeInput;
var _default = RangeInput;
exports.default = _default;