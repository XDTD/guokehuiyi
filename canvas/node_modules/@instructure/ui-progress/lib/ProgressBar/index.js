"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProgressBar = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _View = require("@instructure/ui-view/lib/View");

var _callRenderProp = require("@instructure/ui-react-utils/lib/callRenderProp.js");

var _passthroughProps = require("@instructure/ui-react-utils/lib/passthroughProps.js");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _ThemeablePropTypes = require("@instructure/ui-themeable/lib/ThemeablePropTypes.js");

var _theme = _interopRequireDefault(require("./theme.js"));

var _dec, _dec2, _class, _class2, _temp;

var styles = {
  componentId: 'deLCD',
  template: function template(theme) {
    return "\n\n.deLCD_bGBk{align-items:center;display:flex;font-family:".concat(theme.fontFamily || 'inherit', ";font-size:").concat(theme.fontSize || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";line-height:").concat(theme.lineHeight || 'inherit', "}\n\n.deLCD_eQhm{flex:1;position:relative}\n\n.deLCD_IjKP{border-bottom-style:solid;border-bottom-width:").concat(theme.trackBottomBorderWidth || 'inherit', ";height:100%;left:0;position:absolute;top:0}\n\n.deLCD_eCEP[value],.deLCD_IjKP{box-sizing:border-box;display:block;width:100%}\n\n.deLCD_eCEP[value]{-moz-appearance:none;-webkit-appearance:none;appearance:none;background:transparent;border:none;position:relative}\n\n.deLCD_eCEP[value]::-webkit-progress-bar{background:transparent}\n\n.deLCD_eCEP[value]::-ms-fill{border:none}\n\n.deLCD_fqzO{-webkit-padding-start:").concat(theme.valuePadding || 'inherit', ";box-sizing:border-box;flex:0 0 5.625rem;line-height:1;padding-inline-start:").concat(theme.valuePadding || 'inherit', "}\n\n[dir=ltr] .deLCD_fqzO{padding-left:").concat(theme.valuePadding || 'inherit', "}\n\n[dir=rtl] .deLCD_fqzO{padding-right:").concat(theme.valuePadding || 'inherit', "}\n\n.deLCD_dIzR .deLCD_eCEP[value]{height:").concat(theme.xSmallHeight || 'inherit', "}\n\n.deLCD_dIzR .deLCD_fqzO{font-size:").concat(theme.xSmallValueFontSize || 'inherit', "}\n\n.deLCD_VCXp .deLCD_eCEP[value]{height:1.125rem}\n\n.deLCD_VCXp .deLCD_fqzO{font-size:").concat(theme.smallValueFontSize || 'inherit', "}\n\n.deLCD_fKcQ .deLCD_eCEP[value]{height:").concat(theme.mediumHeight || 'inherit', "}\n\n.deLCD_fKcQ .deLCD_fqzO{font-size:").concat(theme.mediumValueFontSize || 'inherit', "}\n\n.deLCD_cnhd .deLCD_eCEP[value]{height:").concat(theme.largeHeight || 'inherit', "}\n\n.deLCD_cnhd .deLCD_fqzO{font-size:").concat(theme.largeValueFontSize || 'inherit', "}\n\n.deLCD_eCSh .deLCD_eQhm{background:").concat(theme.trackColor || 'inherit', "}\n\n.deLCD_eCSh .deLCD_IjKP{border-bottom-color:").concat(theme.trackBottomBorderColor || 'inherit', "}\n\n.deLCD_eCSh.deLCD_fEhA .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorBrand || 'inherit', "}\n\n.deLCD_eCSh.deLCD_fEhA .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorBrand || 'inherit', "}\n\n.deLCD_eCSh.deLCD_fEhA .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorBrand || 'inherit', "}\n\n.deLCD_eCSh.deLCD_diLM .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorInfo || 'inherit', "}\n\n.deLCD_eCSh.deLCD_diLM .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorInfo || 'inherit', "}\n\n.deLCD_eCSh.deLCD_diLM .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorInfo || 'inherit', "}\n\n.deLCD_eCSh.deLCD_buIS .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorSuccess || 'inherit', "}\n\n.deLCD_eCSh.deLCD_buIS .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorSuccess || 'inherit', "}\n\n.deLCD_eCSh.deLCD_buIS .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorSuccess || 'inherit', "}\n\n.deLCD_eCSh.deLCD_dpQv .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorDanger || 'inherit', "}\n\n.deLCD_eCSh.deLCD_dpQv .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorDanger || 'inherit', "}\n\n.deLCD_eCSh.deLCD_dpQv .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorDanger || 'inherit', "}\n\n.deLCD_eCSh.deLCD_dyHF .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorWarning || 'inherit', "}\n\n.deLCD_eCSh.deLCD_dyHF .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorWarning || 'inherit', "}\n\n.deLCD_eCSh.deLCD_dyHF .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorWarning || 'inherit', "}\n\n.deLCD_eCSh.deLCD_fJaO .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorAlert || 'inherit', "}\n\n.deLCD_eCSh.deLCD_fJaO .deLCD_eCEP[value]::-moz-primary-bar{background:").concat(theme.meterColorAlert || 'inherit', "}\n\n.deLCD_eCSh.deLCD_fJaO .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorAlert || 'inherit', "}\n\n.deLCD_bFtJ .deLCD_eQhm{background:").concat(theme.trackColorInverse || 'inherit', "}\n\n.deLCD_bFtJ .deLCD_IjKP{border-bottom-color:").concat(theme.trackBottomBorderColorInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_fEhA .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorBrandInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_fEhA .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorBrandInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_fEhA .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorBrandInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_diLM .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorInfoInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_diLM .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorInfoInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_diLM .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorInfoInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_buIS .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorSuccessInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_buIS .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorSuccessInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_buIS .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorSuccessInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_dpQv .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorDangerInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_dpQv .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorDangerInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_dpQv .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorDangerInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_dyHF .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorWarningInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_dyHF .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorWarningInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_dyHF .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorWarningInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_fJaO .deLCD_eCEP[value]::-webkit-progress-value{background:").concat(theme.meterColorAlertInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_fJaO .deLCD_eCEP[value]::-moz-progress-bar{background:").concat(theme.meterColorAlertInverse || 'inherit', "}\n\n.deLCD_bFtJ.deLCD_fJaO .deLCD_eCEP[value]::-ms-fill{background:").concat(theme.meterColorAlertInverse || 'inherit', "}");
  },
  'root': 'deLCD_bGBk',
  'trackLayout': 'deLCD_eQhm',
  'trackBorder': 'deLCD_IjKP',
  'track': 'deLCD_eCEP',
  'value': 'deLCD_fqzO',
  'size--x-small': 'deLCD_dIzR',
  'size--small': 'deLCD_VCXp',
  'size--medium': 'deLCD_fKcQ',
  'size--large': 'deLCD_cnhd',
  'color--primary': 'deLCD_eCSh',
  'meterColor--brand': 'deLCD_fEhA',
  'meterColor--info': 'deLCD_diLM',
  'meterColor--success': 'deLCD_buIS',
  'meterColor--danger': 'deLCD_dpQv',
  'meterColor--warning': 'deLCD_dyHF',
  'meterColor--alert': 'deLCD_fJaO',
  'color--primary-inverse': 'deLCD_bFtJ'
};

/**
---
category: components
---
**/
var ProgressBar = (_dec = (0, _testable.testable)(), _dec2 = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(ProgressBar, _Component);

  var _super = (0, _createSuper2.default)(ProgressBar);

  function ProgressBar() {
    (0, _classCallCheck2.default)(this, ProgressBar);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(ProgressBar, [{
    key: "render",
    value: function render() {
      var _classes;

      var _this$props = this.props,
          renderValue = _this$props.renderValue,
          formatScreenReaderValue = _this$props.formatScreenReaderValue,
          valueNow = _this$props.valueNow,
          valueMax = _this$props.valueMax,
          screenReaderLabel = _this$props.screenReaderLabel,
          size = _this$props.size,
          color = _this$props.color,
          meterColor = _this$props.meterColor,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["renderValue", "formatScreenReaderValue", "valueNow", "valueMax", "screenReaderLabel", "size", "color", "meterColor"]);
      var valueText = typeof formatScreenReaderValue === 'function' && formatScreenReaderValue({
        valueNow: valueNow,
        valueMax: valueMax
      }); // consolidating the label and aria-valuetext to put in aria-label because
      // NVDA does not read aria-valuetext: https://github.com/nvaccess/nvda/issues/913
      // But leaving aria-valuetext because JAWS ignores aria-label

      var labelAndValueText = "".concat(screenReaderLabel, " ").concat(valueText);
      var value = (0, _callRenderProp.callRenderProp)(renderValue, {
        valueNow: valueNow,
        valueMax: valueMax
      });
      var meterColorClassName = typeof meterColor === 'function' ? meterColor({
        valueNow: valueNow,
        valueMax: valueMax
      }) : meterColor;
      var classes = (_classes = {}, (0, _defineProperty2.default)(_classes, styles.root, true), (0, _defineProperty2.default)(_classes, styles["size--".concat(size)], true), (0, _defineProperty2.default)(_classes, styles["color--".concat(color)], true), (0, _defineProperty2.default)(_classes, styles["meterColor--".concat(meterColorClassName)], true), _classes);
      /* eslint-disable jsx-a11y/no-redundant-roles, jsx-a11y/no-noninteractive-element-to-interactive-role */

      return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, (0, _passthroughProps.passthroughProps)(props), {
        as: this.props.as,
        className: (0, _classnames.default)(classes),
        margin: this.props.margin,
        elementRef: this.props.elementRef
      }), /*#__PURE__*/_react.default.createElement("span", {
        className: styles.trackLayout
      }, /*#__PURE__*/_react.default.createElement("span", {
        className: styles.trackBorder
      }), /*#__PURE__*/_react.default.createElement("progress", {
        className: styles.track,
        max: valueMax,
        value: valueNow,
        role: "progressbar",
        "aria-valuetext": valueText,
        "aria-valuenow": valueNow,
        "aria-valuemax": valueMax,
        "aria-label": labelAndValueText
      })), value && /*#__PURE__*/_react.default.createElement("span", {
        className: styles.value,
        "aria-hidden": "true"
      }, value));
      /* eslint-enable jsx-a11y/no-redundant-roles, jsx-a11y/no-noninteractive-element-to-interactive-role */
    }
  }]);
  ProgressBar.displayName = "ProgressBar";
  return ProgressBar;
}(_react.Component), _class2.propTypes = {
  /**
   * A label is required for accessibility
   */
  screenReaderLabel: _propTypes.default.string.isRequired,

  /**
   * Control the height of the progress bar
   */
  size: _propTypes.default.oneOf(['x-small', 'small', 'medium', 'large']),

  /**
   * Maximum value (defaults to 100)
   */
  valueMax: _propTypes.default.number,

  /**
   * Receives the progress of the event
   */
  valueNow: _propTypes.default.number,

  /**
   * A function for formatting the text provided to screen readers via `aria-valuenow`
   */
  formatScreenReaderValue: _propTypes.default.func,

  /**
   * A function to format the displayed value. If null the value will not display.
   * Takes `valueNow` and `valueMax` as parameters.
   */
  renderValue: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]),

  /**
   * Controls the overall color scheme of the component
   */
  color: _propTypes.default.oneOf(['primary', 'primary-inverse']),

  /**
   * Control the color of the progress meter. Defaults to showing theme success
   * color on completion, based on `valueNow` and `valueMax`.
   */
  meterColor: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.oneOf(['info', 'warning', 'danger', 'alert', 'success', 'brand'])]),

  /**
   * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
   * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
   * familiar CSS-like shorthand. For example: `margin="small auto large"`.
   */
  margin: _ThemeablePropTypes.ThemeablePropTypes.spacing,

  /**
   * Provides a reference to the component's root HTML element
   */
  elementRef: _propTypes.default.func,

  /**
   * Set the element type of the component's root
   */
  as: _propTypes.default.elementType
}, _class2.defaultProps = {
  formatScreenReaderValue: function formatScreenReaderValue(_ref) {
    var valueNow = _ref.valueNow,
        valueMax = _ref.valueMax;
    return "".concat(valueNow, " / ").concat(valueMax);
  },
  size: 'medium',
  valueMax: 100,
  valueNow: 0,
  as: 'div',
  renderValue: void 0,
  margin: void 0,
  elementRef: void 0,
  color: 'primary',
  // default to showing `success` color on completion
  meterColor: function meterColor(_ref2) {
    var valueNow = _ref2.valueNow,
        valueMax = _ref2.valueMax;
    return valueNow / valueMax >= 1 ? 'success' : 'brand';
  }
}, _temp)) || _class) || _class);
exports.ProgressBar = ProgressBar;
var _default = ProgressBar;
exports.default = _default;