/* stylelint-disable selector-max-class, max-nesting-depth, no-descending-specificity */

.root {
  display: flex;
  align-items: center;
  font-family: var(--fontFamily);
  font-weight: var(--fontWeight);
  line-height: var(--lineHeight);
  font-size: var(--fontSize);
}

.trackLayout {
  position: relative;
  flex: 1;
}

.trackBorder { /* element exists to create effect where bottom border is behind meter */
  display: block;
  position: absolute;
  top: 0;
  left: 0; /* stylelint-disable-line property-blacklist */
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  border-bottom-width: var(--trackBottomBorderWidth);
  border-bottom-style: solid;
}

.track[value] {
  display: block;
  position: relative;
  box-sizing: border-box;
  appearance: none;
  background: transparent;
  width: 100%;
  border: none;

  &::-webkit-progress-bar {
    background: transparent;
  }

  &::-ms-fill {
    border: none;
  }
}

.value {
  line-height: 1;
  box-sizing: border-box;
  padding-inline-start: var(--valuePadding);
  flex: 0 0 5.625rem;
}

.size--x-small {
  .track[value] {
    height: var(--xSmallHeight);
  }

  .value {
    font-size: var(--xSmallValueFontSize);
  }
}

.size--small {
  .track[value] {
    /* product design wants = 18px */
    height: 1.125rem;
  }

  .value {
    font-size: var(--smallValueFontSize);
  }
}

.size--medium {
  .track[value] {
    height: var(--mediumHeight);
  }

  .value {
    font-size: var(--mediumValueFontSize);
  }
}

.size--large {
  .track[value] {
    height: var(--largeHeight);
  }

  .value {
    font-size: var(--largeValueFontSize);
  }
}

.color--primary {
  .trackLayout {
    background: var(--trackColor);
  }

  .trackBorder {
    border-bottom-color: var(--trackBottomBorderColor);
  }

  &.meterColor--brand .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorBrand);
    }

    &::-moz-progress-bar {
      background: var(--meterColorBrand);
    }

    &::-ms-fill {
      background: var(--meterColorBrand);
    }
  }

  &.meterColor--info .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorInfo);
    }

    &::-moz-progress-bar {
      background: var(--meterColorInfo);
    }

    &::-ms-fill {
      background: var(--meterColorInfo);
    }
  }

  &.meterColor--success .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorSuccess);
    }

    &::-moz-progress-bar {
      background: var(--meterColorSuccess);
    }

    &::-ms-fill {
      background: var(--meterColorSuccess);
    }
  }

  &.meterColor--danger .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorDanger);
    }

    &::-moz-progress-bar {
      background: var(--meterColorDanger);
    }

    &::-ms-fill {
      background: var(--meterColorDanger);
    }
  }

  &.meterColor--warning .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorWarning);
    }

    &::-moz-progress-bar {
      background: var(--meterColorWarning);
    }

    &::-ms-fill {
      background: var(--meterColorWarning);
    }
  }

  &.meterColor--alert .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorAlert);
    }

    &::-moz-primary-bar {
      background: var(--meterColorAlert);
    }

    &::-ms-fill {
      background: var(--meterColorAlert);
    }
  }
}

.color--primary-inverse {
  .trackLayout {
    background: var(--trackColorInverse);
  }

  .trackBorder {
    border-bottom-color: var(--trackBottomBorderColorInverse);
  }

  &.meterColor--brand .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorBrandInverse);
    }

    &::-moz-progress-bar {
      background: var(--meterColorBrandInverse);
    }

    &::-ms-fill {
      background: var(--meterColorBrandInverse);
    }
  }

  &.meterColor--info .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorInfoInverse);
    }

    &::-moz-progress-bar {
      background: var(--meterColorInfoInverse);
    }

    &::-ms-fill {
      background: var(--meterColorInfoInverse);
    }
  }

  &.meterColor--success .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorSuccessInverse);
    }

    &::-moz-progress-bar {
      background: var(--meterColorSuccessInverse);
    }

    &::-ms-fill {
      background: var(--meterColorSuccessInverse);
    }
  }

  &.meterColor--danger .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorDangerInverse);
    }

    &::-moz-progress-bar {
      background: var(--meterColorDangerInverse);
    }

    &::-ms-fill {
      background: var(--meterColorDangerInverse);
    }
  }

  &.meterColor--warning .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorWarningInverse);
    }

    &::-moz-progress-bar {
      background: var(--meterColorWarningInverse);
    }

    &::-ms-fill {
      background: var(--meterColorWarningInverse);
    }
  }

  &.meterColor--alert .track[value] {
    &::-webkit-progress-value {
      background: var(--meterColorAlertInverse);
    }

    &::-moz-progress-bar {
      background: var(--meterColorAlertInverse);
    }

    &::-ms-fill {
      background: var(--meterColorAlertInverse);
    }
  }
}

/* stylelint-enable selector-max-class, max-nesting-depth, no-descending-specificity */
