import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _dec3, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { View } from '@instructure/ui-view';
import { themeable, ThemeablePropTypes } from '@instructure/ui-themeable';
import { childrenOrValue } from '@instructure/ui-prop-types';
import { deprecated, getElementType, passthroughProps } from '@instructure/ui-react-utils';
import { testable } from '@instructure/ui-testable';
var styles = {
  componentId: 'blnAQ',
  template: function template(theme) {
    return "\n\n.blnAQ_bGBk{line-height:".concat(theme.lineHeight || 'inherit', ";margin:0}\n\ninput.blnAQ_bGBk[type]{-moz-appearance:none;-webkit-appearance:none;appearance:none;background:none;border:none;border-radius:0;box-shadow:none;box-sizing:border-box;color:inherit;display:block;height:auto;line-height:inherit;margin:-0.375rem 0 0 0;outline:0;padding:0;text-align:start;width:100%}\n\n[dir=ltr] input.blnAQ_bGBk[type]{text-align:left}\n\n[dir=rtl] input.blnAQ_bGBk[type]{text-align:right}\n\ninput.blnAQ_bGBk[type]:focus{outline:none}\n\n.blnAQ_fCtg{font-family:").concat(theme.h1FontFamily || 'inherit', ";font-size:").concat(theme.h1FontSize || 'inherit', ";font-weight:").concat(theme.h1FontWeight || 'inherit', "}\n\n.blnAQ_cVrl{font-family:").concat(theme.h2FontFamily || 'inherit', ";font-size:").concat(theme.h2FontSize || 'inherit', ";font-weight:").concat(theme.h2FontWeight || 'inherit', "}\n\n.blnAQ_dnfM{font-family:").concat(theme.h3FontFamily || 'inherit', ";font-size:").concat(theme.h3FontSize || 'inherit', ";font-weight:").concat(theme.h3FontWeight || 'inherit', "}\n\n.blnAQ_KGwv{font-family:").concat(theme.h4FontFamily || 'inherit', ";font-size:").concat(theme.h4FontSize || 'inherit', ";font-weight:").concat(theme.h4FontWeight || 'inherit', "}\n\n.blnAQ_eYKA{font-family:").concat(theme.h5FontFamily || 'inherit', ";font-size:").concat(theme.h5FontSize || 'inherit', ";font-weight:").concat(theme.h5FontWeight || 'inherit', "}\n\n.blnAQ_dbSc{font-size:inherit;font-weight:inherit;line-height:inherit;margin:0}\n\n.blnAQ_bACI{border-top:").concat(theme.borderWidth || 'inherit', " ").concat(theme.borderStyle || 'inherit', " ").concat(theme.borderColor || 'inherit', ";padding-top:").concat(theme.borderPadding || 'inherit', "}\n\n.blnAQ_kWwi{border-bottom:").concat(theme.borderWidth || 'inherit', " ").concat(theme.borderStyle || 'inherit', " ").concat(theme.borderColor || 'inherit', ";padding-bottom:").concat(theme.borderPadding || 'inherit', "}\n\n.blnAQ_drOs{color:inherit}\n\n.blnAQ_eCSh{color:").concat(theme.primaryColor || 'inherit', "}\n\n.blnAQ_buuG{color:").concat(theme.secondaryColor || 'inherit', "}\n\n.blnAQ_bFtJ{color:").concat(theme.primaryInverseColor || 'inherit', "}\n\n.blnAQ_dsSB{color:").concat(theme.secondaryInverseColor || 'inherit', "}\n\n.blnAQ_bOQC{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}");
  },
  'root': 'blnAQ_bGBk',
  'level--h1': 'blnAQ_fCtg',
  'level--h2': 'blnAQ_cVrl',
  'level--h3': 'blnAQ_dnfM',
  'level--h4': 'blnAQ_KGwv',
  'level--h5': 'blnAQ_eYKA',
  'level--reset': 'blnAQ_dbSc',
  'border--top': 'blnAQ_bACI',
  'border--bottom': 'blnAQ_kWwi',
  'color--inherit': 'blnAQ_drOs',
  'color--primary': 'blnAQ_eCSh',
  'color--secondary': 'blnAQ_buuG',
  'color--primary-inverse': 'blnAQ_bFtJ',
  'color--secondary-inverse': 'blnAQ_dsSB',
  'ellipsis': 'blnAQ_bOQC'
};
import theme from "./theme.js";
import { themeAdapter } from "./themeAdapter.js";
/**
---
category: components
---
**/

var Heading = (_dec = deprecated('8.0.0', {
  ellipsis: '<TruncateText />'
}), _dec2 = testable(), _dec3 = themeable(theme, styles, themeAdapter), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Heading, _Component);

  var _super = _createSuper(Heading);

  function Heading() {
    _classCallCheck(this, Heading);

    return _super.apply(this, arguments);
  }

  _createClass(Heading, [{
    key: "render",
    value: function render() {
      var _classnames;

      var _this$props = this.props,
          border = _this$props.border,
          children = _this$props.children,
          color = _this$props.color,
          level = _this$props.level,
          margin = _this$props.margin,
          elementRef = _this$props.elementRef,
          ellipsis = _this$props.ellipsis,
          props = _objectWithoutProperties(_this$props, ["border", "children", "color", "level", "margin", "elementRef", "ellipsis"]);

      var ElementType = getElementType(Heading, this.props, function () {
        if (level === 'reset') {
          return 'span';
        } else {
          return level;
        }
      });
      return /*#__PURE__*/React.createElement(View, Object.assign({}, passthroughProps(props), {
        className: classnames((_classnames = {}, _defineProperty(_classnames, styles.root, true), _defineProperty(_classnames, styles["level--".concat(level)], true), _defineProperty(_classnames, styles["color--".concat(color)], color), _defineProperty(_classnames, styles["border--".concat(border)], border !== 'none'), _defineProperty(_classnames, styles.ellipsis, ellipsis), _classnames)),
        as: ElementType,
        margin: margin,
        elementRef: elementRef
      }), children);
    }
  }]);

  Heading.displayName = "Heading";
  return Heading;
}(Component), _class2.propTypes = {
  /**
   * Add a top- or bottom-border to the Heading
   */
  border: PropTypes.oneOf(['none', 'top', 'bottom']),

  /**
   * The text content of the Heading
   */
  children: childrenOrValue,

  /**
   * The font color to render
   */
  color: PropTypes.oneOf(['primary', 'secondary', 'primary-inverse', 'secondary-inverse', 'inherit']),

  /**
   * The *visual* appearance of the Heading: h1 is largest; h5 is smallest.
   */
  level: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'reset']),

  /**
   * Choose the element Heading should render as. Will default to the `level` prop
   * if not specified.
   */
  as: PropTypes.elementType,
  // eslint-disable-line react/require-default-props

  /**
   * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
   * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
   * familiar CSS-like shorthand. For example: `margin="small auto large"`.
   */
  margin: ThemeablePropTypes.spacing,

  /**
   * Provides a ref to the underlying HTML element
   */
  elementRef: PropTypes.func,

  /* eslint-disable react/require-default-props */

  /**
   * __Deprecated - use `<TruncateText /> instead`__
   */
  ellipsis: PropTypes.bool
  /* eslint-enable react/require-default-props */

}, _class2.defaultProps = {
  children: null,
  margin: void 0,
  elementRef: void 0,
  border: 'none',
  color: 'inherit',
  level: 'h2'
}, _temp)) || _class) || _class) || _class);
export default Heading;
export { Heading };