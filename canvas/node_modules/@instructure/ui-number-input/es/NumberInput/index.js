import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _dec3, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import keycode from 'keycode';
import { FormField, FormPropTypes } from '@instructure/ui-form-field';
import { IconArrowOpenDownLine, IconArrowOpenUpLine } from '@instructure/ui-icons';
import { uid } from '@instructure/uid';
import { themeable } from '@instructure/ui-themeable';
import { testable } from '@instructure/ui-testable';
import { omitProps, pickProps, callRenderProp, deprecated, getInteraction } from '@instructure/ui-react-utils';
var styles = {
  componentId: 'bXpZq',
  template: function template(theme) {
    return "\n\n.bXpZq_engK{display:block;position:relative}\n\n.bXpZq_engK:before{border:".concat(theme.focusOutlineWidth || 'inherit', " ").concat(theme.focusOutlineStyle || 'inherit', " ").concat(theme.focusOutlineColor || 'inherit', ";border-radius:calc(").concat(theme.borderRadius || 'inherit', "*1.5);bottom:-0.25rem;box-sizing:border-box;content:\"\";display:block;left:-0.25rem;opacity:0;pointer-events:none;position:absolute;right:-0.25rem;top:-0.25rem;transform:scale(0.95);transition:all 0.2s}\n\n.bXpZq_engK.bXpZq_eWbJ:before{opacity:1;transform:scale(1)}\n\n.bXpZq_engK.bXpZq_eWbJ.bXpZq_fszt:before{border-color:").concat(theme.errorOutlineColor || 'inherit', "}\n\n.bXpZq_dtDb{border:").concat(theme.borderWidth || 'inherit', " ").concat(theme.borderStyle || 'inherit', " ").concat(theme.borderColor || 'inherit', ";border-radius:").concat(theme.borderRadius || 'inherit', ";box-sizing:border-box;display:flex;font-family:").concat(theme.fontFamily || 'inherit', ";margin:0;overflow:hidden;transition:all 0.2s}\n\n.bXpZq_dtDb.bXpZq_fszt{border-color:").concat(theme.errorBorderColor || 'inherit', "}\n\n.bXpZq_dtDb.bXpZq_ywdX{cursor:not-allowed;opacity:0.5;pointer-events:none}\n\n.bXpZq_dtDb.bXpZq_ycrn{font-size:").concat(theme.mediumFontSize || 'inherit', ";height:").concat(theme.mediumHeight || 'inherit', "}\n\n.bXpZq_dtDb.bXpZq_cMDj{font-size:").concat(theme.largeFontSize || 'inherit', ";height:").concat(theme.largeHeight || 'inherit', "}\n\n.bXpZq_cwos,input[type].bXpZq_cwos{-moz-appearance:none;-moz-osx-font-smoothing:grayscale;-webkit-appearance:none;-webkit-font-smoothing:antialiased;all:initial;animation:none 0s ease 0s 1 normal none running;appearance:none;backface-visibility:visible;background:transparent none repeat 0 0/auto auto padding-box border-box scroll;background:").concat(theme.background || 'inherit', ";border:medium none currentColor;border-collapse:separate;border-image:none;border-radius:0;border-spacing:0;bottom:auto;box-shadow:none;box-sizing:content-box;box-sizing:border-box;caption-side:top;clear:none;clip:auto;color:#000;color:").concat(theme.color || 'inherit', ";column-count:auto;column-fill:balance;column-gap:normal;column-rule:medium none currentColor;column-span:1;column-width:auto;columns:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;direction:inherit;display:inline;empty-cells:show;flex:1;float:none;font-family:serif;font-family:inherit;font-size:medium;font-size:inherit;font-stretch:normal;font-style:normal;font-variant:normal;font-weight:400;font-weight:").concat(theme.fontWeight || 'inherit', ";height:auto;hyphens:none;left:auto;letter-spacing:normal;line-height:normal;line-height:1;list-style:disc outside none;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;min-width:0.0625rem;opacity:1;orphans:2;outline:medium none invert;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;padding:").concat(theme.padding || 'inherit', ";page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;position:static;right:auto;tab-size:8;table-layout:auto;text-align:left;text-align:start;text-align-last:auto;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-origin:50% 50% 0;transform-style:flat;transition:none 0s ease 0s;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:2;width:auto;word-spacing:normal;z-index:auto}\n\n[dir=ltr] .bXpZq_cwos,[dir=ltr] input[type].bXpZq_cwos{text-align:left}\n\n[dir=rtl] .bXpZq_cwos,[dir=rtl] input[type].bXpZq_cwos{text-align:right}\n\n.bXpZq_cwos::-ms-clear,input[type].bXpZq_cwos::-ms-clear{display:none}\n\n.bXpZq_cwos:-ms-input-placeholder,input[type].bXpZq_cwos:-ms-input-placeholder{color:").concat(theme.placeholderColor || 'inherit', "}\n\n.bXpZq_cwos::placeholder,input[type].bXpZq_cwos::placeholder{color:").concat(theme.placeholderColor || 'inherit', "}\n\n.bXpZq_cNTO{display:flex;flex:0 0 ").concat(theme.arrowsContainerWidth || 'inherit', ";flex-direction:column}\n\n.bXpZq_cNTO.bXpZq_ywdX{cursor:not-allowed;opacity:0.5;pointer-events:none}\n\n.bXpZq_fAVq{-ms-user-select:none;-webkit-border-end:none;-webkit-border-start:").concat(theme.borderWidth || 'inherit', " ").concat(theme.borderStyle || 'inherit', " ").concat(theme.arrowsBorderColor || 'inherit', ";-webkit-user-select:none;align-items:center;background-color:").concat(theme.arrowsBackgroundColor || 'inherit', ";border-bottom:").concat(theme.borderWidth || 'inherit', " ").concat(theme.borderStyle || 'inherit', " ").concat(theme.arrowsBorderColor || 'inherit', ";border-inline-end:none;border-inline-start:").concat(theme.borderWidth || 'inherit', " ").concat(theme.borderStyle || 'inherit', " ").concat(theme.arrowsBorderColor || 'inherit', ";border-top:none;color:").concat(theme.arrowsColor || 'inherit', ";cursor:pointer;display:flex;flex:1;justify-content:center;text-align:center;user-select:none}\n\n[dir=ltr] .bXpZq_fAVq{border-left:").concat(theme.borderWidth || 'inherit', " ").concat(theme.borderStyle || 'inherit', " ").concat(theme.arrowsBorderColor || 'inherit', ";border-right:none;text-align:center}\n\n[dir=rtl] .bXpZq_fAVq{border-left:none;border-right:").concat(theme.borderWidth || 'inherit', " ").concat(theme.borderStyle || 'inherit', " ").concat(theme.arrowsBorderColor || 'inherit', ";text-align:center}\n\n.bXpZq_fAVq:last-child{border-bottom:none}\n\n.bXpZq_fAVq:hover{background-color:").concat(theme.arrowsHoverBackgroundColor || 'inherit', "}\n\n.bXpZq_fAVq:active{box-shadow:").concat(theme.arrowsActiveBoxShadow || 'inherit', "}");
  },
  'inputWidth': 'bXpZq_engK',
  'focus': 'bXpZq_eWbJ',
  'invalid': 'bXpZq_fszt',
  'inputContainer': 'bXpZq_dtDb',
  'disabled': 'bXpZq_ywdX',
  'medium': 'bXpZq_ycrn',
  'large': 'bXpZq_cMDj',
  'input': 'bXpZq_cwos',
  'arrowContainer': 'bXpZq_cNTO',
  'arrow': 'bXpZq_fAVq'
};
import theme from "./theme.js";
/**
---
category: components
id: NumberInput
---
**/

var _ref = /*#__PURE__*/React.createElement(IconArrowOpenUpLine, null);

var _ref2 = /*#__PURE__*/React.createElement(IconArrowOpenDownLine, null);

var NumberInput = (_dec = deprecated('8.0.0', {
  label: 'renderLabel',
  required: 'isRequired',
  inline: 'display'
}), _dec2 = testable(), _dec3 = themeable(theme, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(NumberInput, _Component);

  var _super = _createSuper(NumberInput);

  function NumberInput() {
    var _this;

    _classCallCheck(this, NumberInput);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      hasFocus: false
    };
    _this._input = null;

    _this.handleRef = function (element) {
      _this._input = element;

      _this.props.inputRef(element);
    };

    _this.handleFocus = function (event) {
      _this.setState({
        hasFocus: true
      });

      _this.props.onFocus(event);
    };

    _this.handleBlur = function (event) {
      _this.setState({
        hasFocus: false
      });

      _this.props.onBlur(event);
    };

    _this.handleChange = function (event) {
      _this.props.onChange(event, event.target.value);
    };

    _this.handleKeyDown = function (event) {
      _this.props.onKeyDown(event);

      if (event.keyCode === keycode.codes.down) {
        event.preventDefault();

        _this.props.onDecrement(event);
      } else if (event.keyCode === keycode.codes.up) {
        event.preventDefault();

        _this.props.onIncrement(event);
      }
    };

    _this.handleClickUpArrow = function (event) {
      _this.arrowClicked(event, _this.props.onIncrement);
    };

    _this.handleClickDownArrow = function (event) {
      _this.arrowClicked(event, _this.props.onDecrement);
    };

    return _this;
  }

  _createClass(NumberInput, [{
    key: "arrowClicked",
    value: function arrowClicked(event, callback) {
      var interaction = this.interaction;
      event.preventDefault();

      if (interaction === 'enabled') {
        this._input.focus();

        callback(event);
      }
    }
  }, {
    key: "renderArrows",
    value: function renderArrows() {
      return /*#__PURE__*/React.createElement("span", {
        className: styles.arrowContainer
      }, /*#__PURE__*/React.createElement("button", {
        "aria-hidden": true,
        className: styles.arrow,
        onMouseDown: this.handleClickUpArrow,
        tabIndex: "-1",
        type: "button"
      }, _ref), /*#__PURE__*/React.createElement("button", {
        "aria-hidden": true,
        className: styles.arrow,
        onMouseDown: this.handleClickDownArrow,
        tabIndex: "-1",
        type: "button"
      }, _ref2));
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames, _classnames2;

      var _this$props = this.props,
          label = _this$props.label,
          renderLabel = _this$props.renderLabel,
          inline = _this$props.inline,
          display = _this$props.display,
          placeholder = _this$props.placeholder,
          required = _this$props.required,
          isRequired = _this$props.isRequired,
          showArrows = _this$props.showArrows,
          size = _this$props.size,
          value = _this$props.value,
          width = _this$props.width;
      var interaction = this.interaction;
      return /*#__PURE__*/React.createElement(FormField, Object.assign({}, pickProps(this.props, FormField.propTypes), {
        label: callRenderProp(renderLabel || label),
        inline: display === 'inline-block' || inline,
        id: this.id
      }), /*#__PURE__*/React.createElement("span", {
        className: classnames(styles.inputWidth, (_classnames = {}, _defineProperty(_classnames, styles.focus, this.state.hasFocus), _defineProperty(_classnames, styles.invalid, this.invalid), _classnames)),
        style: width ? {
          width: width
        } : null
      }, /*#__PURE__*/React.createElement("span", {
        className: classnames(styles.inputContainer, (_classnames2 = {}, _defineProperty(_classnames2, styles.disabled, interaction === 'disabled'), _defineProperty(_classnames2, styles.focus, this.state.hasFocus), _defineProperty(_classnames2, styles.invalid, this.invalid), _defineProperty(_classnames2, styles[size], size), _classnames2))
      }, /*#__PURE__*/React.createElement("input", Object.assign({}, omitProps(this.props, _objectSpread({}, FormField.propTypes, {}, NumberInput.propTypes)), {
        className: styles.input,
        "aria-invalid": this.invalid ? 'true' : null,
        id: this.id,
        type: "text",
        inputMode: this.props.inputMode,
        placeholder: placeholder,
        ref: this.handleRef,
        required: isRequired || required,
        value: value,
        disabled: interaction === 'disabled',
        readOnly: interaction === 'readonly',
        onFocus: this.handleFocus,
        onBlur: this.handleBlur,
        onChange: this.handleChange,
        onKeyDown: this.handleKeyDown
      })), showArrows ? this.renderArrows() : null)));
    }
  }, {
    key: "id",
    get: function get() {
      if (this.props.id) {
        return this.props.id;
      }

      if (!this._id) {
        this._id = uid('NumberInput');
      }

      return this._id;
    }
  }, {
    key: "invalid",
    get: function get() {
      return this.props.messages && this.props.messages.some(function (message) {
        return message.type === 'error';
      });
    }
  }, {
    key: "interaction",
    get: function get() {
      return getInteraction({
        props: this.props
      });
    }
  }]);

  NumberInput.displayName = "NumberInput";
  return NumberInput;
}(Component), _class2.propTypes = {
  /**
   * The form field label.
   */
  renderLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,

  /**
   * The id of the input. One is generated if not supplied.
   */
  id: PropTypes.string,

  /**
   * Specifies if interaction with the input is enabled, disabled, or readonly.
   * When "disabled", the input changes visibly to indicate that it cannot
   * receive user interactions. When "readonly" the input still cannot receive
   * user interactions but it keeps the same styles as if it were enabled.
   */
  interaction: PropTypes.oneOf(['enabled', 'disabled', 'readonly']),

  /**
   * Object with shape: `{
   *   text: PropTypes.string,
   *   type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])
   * }`
   */
  messages: PropTypes.arrayOf(FormPropTypes.message),

  /**
   * Html placeholder text to display when the input has no value. This
   * should be hint text, not a label replacement.
   */
  placeholder: PropTypes.string,

  /**
   * Whether or not the text input is required.
   */
  isRequired: PropTypes.bool,

  /**
   * Whether or not to display the up/down arrow buttons.
   */
  showArrows: PropTypes.bool,

  /**
   * The size of the input.
   */
  size: PropTypes.oneOf(['medium', 'large']),

  /**
   * The value of the input (should be accompanied by an `onChange` prop).
   */
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),

  /**
   * The width of the input.
   */
  width: PropTypes.string,

  /**
   * The display of the root element.
   */
  display: PropTypes.oneOf(['inline-block', 'block']),

  /**
   * A function that provides a reference to the actual input element.
   */
  inputRef: PropTypes.func,

  /**
   * Callback fired when input receives focus.
   */
  onFocus: PropTypes.func,

  /**
   * Callback fired when the input loses focus.
   */
  onBlur: PropTypes.func,

  /**
   * Callback executed when the input fires a change event.
   * @param {Object} event - the event object
   * @param {Object} value - the string value of the input
   */
  onChange: PropTypes.func,

  /**
   * Called when the down arrow button is clicked, or the down arrow key is
   * pressed.
   */
  onDecrement: PropTypes.func,

  /**
   * Called when the up arrow button is clicked, or the up arrow key is
   * pressed.
   */
  onIncrement: PropTypes.func,

  /**
   * Callback fired when a key is pressed.
   */
  onKeyDown: PropTypes.func,

  /**
   * The inputMode attribute of the underlying `input` element,
   * can be one of ['numeric', 'decimal', 'tel']
   */
  inputMode: PropTypes.oneOf(['numeric', 'decimal', 'tel']),

  /**
   * __Deprecated - use `renderLabel` instead__
   */
  label: PropTypes.node,

  /**
   * __Deprecated - use `isRequired` instead__
   */
  required: PropTypes.bool,

  /**
   * __Deprecated - use `display` instead__
   */
  inline: PropTypes.bool
}, _class2.defaultProps = {
  id: null,
  // Leave interaction default undefined so that `disabled` and `readOnly` can also be supplied
  interaction: void 0,
  messages: [],
  placeholder: null,
  isRequired: false,
  showArrows: true,
  size: 'medium',
  value: void 0,
  width: void 0,
  display: 'block',
  inputRef: function inputRef(event) {},
  onFocus: function onFocus(event) {},
  onBlur: function onBlur(event) {},
  onChange: function onChange(event, value) {},
  onDecrement: function onDecrement(event) {},
  onIncrement: function onIncrement(event) {},
  onKeyDown: function onKeyDown(event) {},
  label: void 0,
  disabled: void 0,
  readOnly: void 0,
  inputMode: 'numeric',
  required: void 0,
  inline: void 0
}, _temp)) || _class) || _class) || _class);
export default NumberInput;
export { NumberInput };