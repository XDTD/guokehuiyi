"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Group = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Children = require("@instructure/ui-prop-types/lib/Children.js");

var _index = require("../Option/index.js");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
---
parent: SimpleSelect
id: SimpleSelect.Group
---
**/
var Group = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Group, _Component);

  var _super = (0, _createSuper2.default)(Group);

  function Group() {
    (0, _classCallCheck2.default)(this, Group);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Group, [{
    key: "render",

    /* istanbul ignore next */
    value: function render() {
      // this component is only used for prop validation. Select.Group children
      // are parsed in Select and rendered as Options components
      return null;
    }
  }]);
  Group.displayName = "Group";
  return Group;
}(_react.Component);

exports.Group = Group;
Group.propTypes = {
  /**
   * The label associated with the group options.
   */
  renderLabel: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]).isRequired,

  /**
   * Children of type `<SimpleSelect.Option />` that will be considered part of the group.
   */
  children: _Children.Children.oneOf([_index.Option])
};
Group.defaultProps = {
  children: null
};
var _default = Group;
exports.default = _default;