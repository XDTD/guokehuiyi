import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { themeable } from '@instructure/ui-themeable';
import { testable } from '@instructure/ui-testable';
import { safeCloneElement } from '@instructure/ui-react-utils';
import { Children } from '@instructure/ui-prop-types'; // remove when Edge sorts out styles-on-pseudo-elements issues:
// https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/

import { isEdge } from '@instructure/ui-utils';
import { TreeButton } from "../TreeButton/index.js";
import { TreeNode } from "../TreeNode/index.js";
var styles = {
  componentId: 'CZyYS',
  template: function template(theme) {
    return "\n\n@keyframes CZyYS_cpmC{to{transform:scaleY(1)}}\n\n.CZyYS_cpmC{box-sizing:border-box;font-family:".concat(theme.fontFamily || 'inherit', ";list-style-type:none;position:relative}\n\n.CZyYS_cpmC,.CZyYS_fjNS{margin:0;padding:0}\n\n.CZyYS_ewEu:focus,.CZyYS_fjNS:focus{outline:0}\n\n.CZyYS_ewdC .CZyYS_cpmC:before{animation-duration:0.2s;animation-fill-mode:forwards;animation-name:CZyYS_cpmC;animation-timing-function:ease-out;bottom:1.1875rem;content:\"\";inset-inline-end:auto;inset-inline-start:0;pointer-events:none;position:absolute;top:0.25rem;transform:scaleY(0.01);transform-origin:center top}\n\n[dir=ltr] .CZyYS_ewdC .CZyYS_cpmC:before{left:0;right:auto}\n\n[dir=rtl] .CZyYS_ewdC .CZyYS_cpmC:before{left:auto;right:0}\n\n.CZyYS_ewdC:not(.CZyYS_bUWG) .CZyYS_cpmC:before{background:").concat(theme.borderColor || 'inherit', ";width:").concat(theme.borderWidth || 'inherit', "}\n\n.CZyYS_ewdC.CZyYS_bUWG .CZyYS_cpmC:before{background:#73818c;width:0.0625rem}\n\n.CZyYS_doqw.CZyYS_cIHp .CZyYS_cpmC{-webkit-margin-end:0;-webkit-margin-start:calc(").concat(theme.baseSpacingSmall || 'inherit', "*3);margin-inline-end:0;margin-inline-start:calc(").concat(theme.baseSpacingSmall || 'inherit', "*3)}\n\n[dir=ltr] .CZyYS_doqw.CZyYS_cIHp .CZyYS_cpmC{margin-left:calc(").concat(theme.baseSpacingSmall || 'inherit', "*3);margin-right:0}\n\n[dir=rtl] .CZyYS_doqw.CZyYS_cIHp .CZyYS_cpmC{margin-left:0;margin-right:calc(").concat(theme.baseSpacingSmall || 'inherit', "*3)}\n\n.CZyYS_doqw.CZyYS_ewdC .CZyYS_cpmC{-webkit-margin-end:0;-webkit-margin-start:calc(").concat(theme.baseSpacingSmall || 'inherit', "*2);margin-inline-end:0;margin-inline-start:calc(").concat(theme.baseSpacingSmall || 'inherit', "*2);margin-top:calc(-1.75*").concat(theme.baseSpacingSmall || 'inherit', ");padding-top:calc(1.75*").concat(theme.baseSpacingSmall || 'inherit', ")}\n\n[dir=ltr] .CZyYS_doqw.CZyYS_ewdC .CZyYS_cpmC{margin-left:calc(").concat(theme.baseSpacingSmall || 'inherit', "*2);margin-right:0}\n\n[dir=rtl] .CZyYS_doqw.CZyYS_ewdC .CZyYS_cpmC{margin-left:0;margin-right:calc(").concat(theme.baseSpacingSmall || 'inherit', "*2)}\n\n.CZyYS_ycrn.CZyYS_cIHp .CZyYS_cpmC{-webkit-margin-end:0;-webkit-margin-start:calc(").concat(theme.baseSpacingMedium || 'inherit', "*3);margin-inline-end:0;margin-inline-start:calc(").concat(theme.baseSpacingMedium || 'inherit', "*3)}\n\n[dir=ltr] .CZyYS_ycrn.CZyYS_cIHp .CZyYS_cpmC{margin-left:calc(").concat(theme.baseSpacingMedium || 'inherit', "*3);margin-right:0}\n\n[dir=rtl] .CZyYS_ycrn.CZyYS_cIHp .CZyYS_cpmC{margin-left:0;margin-right:calc(").concat(theme.baseSpacingMedium || 'inherit', "*3)}\n\n.CZyYS_ycrn.CZyYS_ewdC .CZyYS_cpmC{-webkit-margin-end:0;-webkit-margin-start:calc(").concat(theme.baseSpacingMedium || 'inherit', "*2);margin-inline-end:0;margin-inline-start:calc(").concat(theme.baseSpacingMedium || 'inherit', "*2);margin-top:calc(-1*").concat(theme.baseSpacingMedium || 'inherit', ");padding-top:").concat(theme.baseSpacingMedium || 'inherit', "}\n\n[dir=ltr] .CZyYS_ycrn.CZyYS_ewdC .CZyYS_cpmC{margin-left:calc(").concat(theme.baseSpacingMedium || 'inherit', "*2);margin-right:0}\n\n[dir=rtl] .CZyYS_ycrn.CZyYS_ewdC .CZyYS_cpmC{margin-left:0;margin-right:calc(").concat(theme.baseSpacingMedium || 'inherit', "*2)}\n\n.CZyYS_cMDj.CZyYS_cIHp .CZyYS_cpmC{-webkit-margin-end:0;-webkit-margin-start:calc(").concat(theme.baseSpacingLarge || 'inherit', "*3);margin-inline-end:0;margin-inline-start:calc(").concat(theme.baseSpacingLarge || 'inherit', "*3)}\n\n[dir=ltr] .CZyYS_cMDj.CZyYS_cIHp .CZyYS_cpmC{margin-left:calc(").concat(theme.baseSpacingLarge || 'inherit', "*3);margin-right:0}\n\n[dir=rtl] .CZyYS_cMDj.CZyYS_cIHp .CZyYS_cpmC{margin-left:0;margin-right:calc(").concat(theme.baseSpacingLarge || 'inherit', "*3)}\n\n.CZyYS_cMDj.CZyYS_ewdC .CZyYS_cpmC{-webkit-margin-end:0;-webkit-margin-start:calc(").concat(theme.baseSpacingLarge || 'inherit', "*2);margin-inline-end:0;margin-inline-start:calc(").concat(theme.baseSpacingLarge || 'inherit', "*2);margin-top:calc(-0.75*").concat(theme.baseSpacingLarge || 'inherit', ");padding-top:calc(0.75*").concat(theme.baseSpacingLarge || 'inherit', ")}\n\n[dir=ltr] .CZyYS_cMDj.CZyYS_ewdC .CZyYS_cpmC{margin-left:calc(").concat(theme.baseSpacingLarge || 'inherit', "*2);margin-right:0}\n\n[dir=rtl] .CZyYS_cMDj.CZyYS_ewdC .CZyYS_cpmC{margin-left:0;margin-right:calc(").concat(theme.baseSpacingLarge || 'inherit', "*2)}");
  },
  'list': 'CZyYS_cpmC',
  'node': 'CZyYS_fjNS',
  'item': 'CZyYS_ewEu',
  'folderTree': 'CZyYS_ewdC',
  'edge': 'CZyYS_bUWG',
  'small': 'CZyYS_doqw',
  'indent': 'CZyYS_cIHp',
  'medium': 'CZyYS_ycrn',
  'large': 'CZyYS_cMDj'
};
import theme from "./theme.js";
/**
---
parent: TreeBrowser
---
**/

var TreeCollection = (_dec = testable(), _dec2 = themeable(theme, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(TreeCollection, _Component);

  var _super = _createSuper(TreeCollection);

  function TreeCollection(props) {
    var _this;

    _classCallCheck(this, TreeCollection);

    _this = _super.call(this, props);

    _this.handleFocus = function (e, item) {
      e.stopPropagation();

      _this.setState({
        focused: "".concat(item.type, "_").concat(item.id)
      });
    };

    _this.handleBlur = function (e, item) {
      e.stopPropagation();

      _this.setState({
        focused: ''
      });
    };

    _this.handleCollectionClick = function (e) {
      var _this$props = _this.props,
          id = _this$props.id,
          onCollectionClick = _this$props.onCollectionClick,
          expanded = _this$props.expanded;
      var collection = {
        id: id,
        expanded: !expanded,
        type: 'collection'
      };

      if (onCollectionClick && typeof onCollectionClick === 'function') {
        onCollectionClick(e, collection);
      }
    };

    _this.handleCollectionKeyDown = function (e) {
      var _this$props2 = _this.props,
          id = _this$props2.id,
          onKeyDown = _this$props2.onKeyDown,
          expanded = _this$props2.expanded;
      var collection = {
        id: id,
        expanded: !expanded,
        type: 'collection'
      };

      if (onKeyDown && typeof onKeyDown === 'function') {
        onKeyDown(e, collection);
      }
    };

    _this.state = {
      focused: ''
    };
    return _this;
  }

  _createClass(TreeCollection, [{
    key: "renderChildren",
    value: function renderChildren() {
      var _this2 = this;

      var _this$props3 = this.props,
          collections = _this$props3.collections,
          items = _this$props3.items,
          id = _this$props3.id,
          renderBeforeItems = _this$props3.renderBeforeItems,
          renderAfterItems = _this$props3.renderAfterItems;
      var position = 1;
      return /*#__PURE__*/React.createElement(React.Fragment, null, renderBeforeItems && this.renderCollectionChildren(id, renderBeforeItems, position++, 'before'), collections.map(function (collection) {
        return _this2.renderCollectionNode(collection, position++);
      }), items.map(function (item) {
        return _this2.renderItemNode(item, position++);
      }), renderAfterItems && this.renderCollectionChildren(id, renderAfterItems, position++, 'after'));
    }
  }, {
    key: "renderCollectionChildren",
    value: function renderCollectionChildren(collectionId, child, position, keyword) {
      var _this3 = this;

      var _this$props4 = this.props,
          selection = _this$props4.selection,
          _onKeyDown = _this$props4.onKeyDown,
          getItemProps = _this$props4.getItemProps;
      var key = "".concat(collectionId, "_").concat(keyword);
      var ariaSelected = {};

      if (selection) {
        ariaSelected['aria-selected'] = selection === "child_".concat(key);
      }

      var itemHash = {
        id: key,
        type: 'child'
      };
      var itemProps = getItemProps({
        key: key,
        selected: selection === "child_".concat(key),
        focused: this.state.focused === "child_".concat(key),
        level: this.itemsLevel
      });
      return /*#__PURE__*/React.createElement("li", Object.assign({
        id: key,
        role: "treeitem",
        className: styles.item,
        tabIndex: "-1",
        key: key,
        "aria-posinset": position,
        "aria-setsize": this.childCount,
        "aria-level": this.itemsLevel
      }, ariaSelected, {
        onClick: function onClick(e, n) {
          if (typeof child.props.onClick === 'function') {
            child.props.onClick(e, n);
          } else {
            e.stopPropagation();
          }
        },
        onFocus: function onFocus(e, n) {
          return _this3.handleFocus(e, itemHash);
        },
        onKeyDown: function onKeyDown(e, n) {
          if (typeof child.props.onKeyDown === 'function') {
            child.props.onKeyDown(e, n);
          } else {
            _onKeyDown(e, itemHash);
          }
        },
        onBlur: function onBlur(e, n) {
          return _this3.handleBlur(e, itemHash);
        }
      }), safeCloneElement(child, itemProps));
    }
  }, {
    key: "renderCollectionNode",
    value: function renderCollectionNode(collection, position) {
      return /*#__PURE__*/React.createElement(TreeCollection, Object.assign({}, this.props, {
        key: "c".concat(position),
        id: collection.id,
        name: collection.name,
        descriptor: collection.descriptor,
        expanded: collection.expanded,
        items: collection.items,
        collections: collection.collections,
        numChildren: this.childCount,
        level: this.itemsLevel,
        containerRef: collection.containerRef,
        position: position,
        renderBeforeItems: collection.renderBeforeItems,
        renderAfterItems: collection.renderAfterItems,
        isCollectionFlattened: false // only the root needs to be flattened

      }));
    }
  }, {
    key: "renderItemNode",
    value: function renderItemNode(item, position) {
      var _this4 = this;

      var _this$props5 = this.props,
          selection = _this$props5.selection,
          onItemClick = _this$props5.onItemClick,
          _onKeyDown2 = _this$props5.onKeyDown,
          getItemProps = _this$props5.getItemProps;
      var ariaSelected = {};

      if (selection) {
        ariaSelected['aria-selected'] = selection === "item_".concat(item.id);
      }

      var itemHash = {
        id: item.id,
        type: 'item'
      };
      var itemProps = getItemProps(_objectSpread({}, this.getCommonButtonProps(), {
        id: item.id,
        name: item.name,
        descriptor: item.descriptor,
        thumbnail: item.thumbnail,
        selected: selection === "item_".concat(item.id),
        focused: this.state.focused === "item_".concat(item.id),
        type: 'item'
      }));
      return /*#__PURE__*/React.createElement("li", Object.assign({
        key: "i".concat(position),
        tabIndex: "-1",
        role: "treeitem",
        "aria-label": item.name,
        className: styles.item,
        "aria-level": this.itemsLevel,
        "aria-posinset": position,
        "aria-setsize": this.childCount,
        onClick: function onClick(e, n) {
          return onItemClick(e, itemHash);
        },
        onKeyDown: function onKeyDown(e, n) {
          return _onKeyDown2(e, itemHash);
        },
        onFocus: function onFocus(e, n) {
          return _this4.handleFocus(e, itemHash);
        },
        onBlur: function onBlur(e, n) {
          return _this4.handleBlur(e, itemHash);
        }
      }, ariaSelected), /*#__PURE__*/React.createElement(TreeButton, itemProps));
    }
  }, {
    key: "getCommonButtonProps",
    value: function getCommonButtonProps() {
      return {
        id: this.props.id,
        name: this.props.name,
        descriptor: this.props.descriptor,
        size: this.props.size,
        variant: this.props.variant,
        itemIcon: this.props.itemIcon,
        level: this.itemsLevel
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _classes,
          _this5 = this;

      var _this$props6 = this.props,
          id = _this$props6.id,
          name = _this$props6.name,
          size = _this$props6.size,
          variant = _this$props6.variant,
          expanded = _this$props6.expanded,
          collectionIcon = _this$props6.collectionIcon,
          collectionIconExpanded = _this$props6.collectionIconExpanded,
          level = _this$props6.level,
          position = _this$props6.position,
          isCollectionFlattened = _this$props6.isCollectionFlattened;
      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles.edge, isEdge), _defineProperty(_classes, styles[size], true), _defineProperty(_classes, styles[variant], true), _defineProperty(_classes, styles.expanded, expanded), _defineProperty(_classes, styles.node, true), _classes);
      var ariaSelected = {};
      if (this.props.selection) ariaSelected['aria-selected'] = this.props.selection === "collection_".concat(id);
      return isCollectionFlattened ? this.renderChildren() : /*#__PURE__*/React.createElement("li", Object.assign({
        className: classnames(classes),
        tabIndex: "-1",
        role: "treeitem",
        "aria-label": this.props.name,
        "aria-level": level,
        "aria-posinset": position,
        "aria-setsize": this.props.numChildren,
        "aria-expanded": expanded,
        onClick: this.handleCollectionClick,
        onKeyDown: this.handleCollectionKeyDown,
        onFocus: function onFocus(e, n) {
          return _this5.handleFocus(e, {
            id: id,
            type: 'collection'
          });
        },
        onBlur: function onBlur(e, n) {
          return _this5.handleBlur(e, {
            id: id,
            type: 'collection'
          });
        }
      }, ariaSelected), /*#__PURE__*/React.createElement(TreeButton, Object.assign({}, this.getCommonButtonProps(), {
        expanded: expanded,
        collectionIcon: collectionIcon,
        collectionIconExpanded: collectionIconExpanded,
        type: "collection",
        containerRef: this.props.containerRef,
        selected: this.props.selection === "collection_".concat(id),
        focused: this.state.focused === "collection_".concat(id),
        level: level
      })), expanded && this.childCount > 0 && /*#__PURE__*/React.createElement("ul", {
        "aria-label": name,
        className: styles.list,
        role: "group"
      }, this.renderChildren()));
    }
  }, {
    key: "itemsLevel",
    get: function get() {
      var _this$props7 = this.props,
          level = _this$props7.level,
          isCollectionFlattened = _this$props7.isCollectionFlattened;
      return isCollectionFlattened ? level : level + 1;
    }
  }, {
    key: "collectionsCount",
    get: function get() {
      var collections = this.props.collections;
      return collections && collections.length > 0 ? collections.length : 0;
    }
  }, {
    key: "itemsCount",
    get: function get() {
      var items = this.props.items;
      return items && items.length > 0 ? items.length : 0;
    }
  }, {
    key: "childCount",
    get: function get() {
      return this.collectionsCount + this.itemsCount + (this.props.renderBeforeItems ? 1 : 0) + (this.props.renderAfterItems ? 1 : 0);
    }
  }]);

  TreeCollection.displayName = "TreeCollection";
  return TreeCollection;
}(Component), _class2.propTypes = {
  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  name: PropTypes.string,
  descriptor: PropTypes.string,
  items: PropTypes.array,
  collections: PropTypes.array,
  expanded: PropTypes.bool,
  selection: PropTypes.string,
  size: PropTypes.oneOf(['small', 'medium', 'large']),
  variant: PropTypes.oneOf(['folderTree', 'indent']),
  collectionIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
  collectionIconExpanded: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
  itemIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
  getItemProps: PropTypes.func,
  onItemClick: PropTypes.func,
  onCollectionClick: PropTypes.func,
  onKeyDown: PropTypes.func,
  numChildren: PropTypes.number,
  level: PropTypes.number,
  position: PropTypes.number,

  /**
   * children of type TreeNode
   */
  renderBeforeItems: Children.oneOf([TreeNode]),

  /**
   * children of type TreeNode
   */
  renderAfterItems: Children.oneOf([TreeNode]),
  containerRef: PropTypes.func,
  isCollectionFlattened: PropTypes.bool
}, _class2.defaultProps = {
  collections: [],
  items: [],
  expanded: false,
  selection: '',
  size: 'medium',
  variant: 'folderTree',
  onItemClick: function onItemClick() {},
  onCollectionClick: function onCollectionClick() {},
  onKeyDown: function onKeyDown() {},
  id: void 0,
  name: void 0,
  descriptor: void 0,
  collectionIconExpanded: void 0,
  collectionIcon: void 0,
  itemIcon: void 0,
  getItemProps: function getItemProps(props) {
    return props;
  },
  numChildren: void 0,
  level: void 0,
  position: void 0,
  renderBeforeItems: null,
  renderAfterItems: null,
  containerRef: function containerRef() {},
  isCollectionFlattened: false
}, _temp)) || _class) || _class);
export default TreeCollection;
export { TreeCollection };