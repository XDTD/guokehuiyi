"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormFieldMessage = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _ScreenReaderContent = require("@instructure/ui-a11y-content/lib/ScreenReaderContent");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'bVlfD',
  template: function template(theme) {
    return "\n\n.bVlfD_bGBk{display:block;font-family:".concat(theme.fontFamily || 'inherit', ";font-size:").concat(theme.fontSize || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";line-height:").concat(theme.lineHeight || 'inherit', "}\n\n.bVlfD_dYYb{color:").concat(theme.colorHint || 'inherit', "}\n\n.bVlfD_ddvR{color:").concat(theme.colorError || 'inherit', "}\n\n.bVlfD_cOXX{color:").concat(theme.colorSuccess || 'inherit', "}");
  },
  'root': 'bVlfD_bGBk',
  'hint': 'bVlfD_dYYb',
  'error': 'bVlfD_ddvR',
  'success': 'bVlfD_cOXX'
};

/**
---
parent: FormField
---

This is a helper component that is used by most of the custom form
components. In most cases it shouldn't be used directly.

```js
---
example: true
---
<FormFieldMessage variant="error">Invalid value</FormFieldMessage>
```
**/
var FormFieldMessage = (_dec = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(FormFieldMessage, _Component);

  var _super = (0, _createSuper2.default)(FormFieldMessage);

  function FormFieldMessage() {
    (0, _classCallCheck2.default)(this, FormFieldMessage);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(FormFieldMessage, [{
    key: "render",
    value: function render() {
      var _classes;

      var classes = (_classes = {}, (0, _defineProperty2.default)(_classes, styles.root, true), (0, _defineProperty2.default)(_classes, styles[this.props.variant], true), _classes);
      return this.props.variant !== 'screenreader-only' ? /*#__PURE__*/_react.default.createElement("span", {
        className: (0, _classnames.default)(classes)
      }, this.props.children) : /*#__PURE__*/_react.default.createElement(_ScreenReaderContent.ScreenReaderContent, null, this.props.children);
    }
  }]);
  FormFieldMessage.displayName = "FormFieldMessage";
  return FormFieldMessage;
}(_react.Component), _class2.propTypes = {
  variant: _propTypes.default.oneOf(['error', 'hint', 'success', 'screenreader-only']),
  children: _propTypes.default.node
}, _class2.defaultProps = {
  variant: 'hint',
  children: null
}, _temp)) || _class);
exports.FormFieldMessage = FormFieldMessage;
var _default = FormFieldMessage;
exports.default = _default;