import * as React from 'react';

export type SelectableSelectedOptionId = string | any[];

export interface SelectableProps {
    /**
     * The id of the trigger element. Set automatically if not provided
     */
    id?: string;
    /**
     * The id of the option in the list that should be considered highlighted
     */
    highlightedOptionId?: string;
    /**
     * The id of the option(s) in the list that should be considered selected
     */
    selectedOptionId?: SelectableSelectedOptionId;
    /**
     * Whether or not the options should be visible
     */
    isShowingOptions?: boolean;
    /**
     * Callback fired when the options want to become visible
     */
    onRequestShowOptions?: (...args: any[])=>any;
    /**
     * Callback fired when the options no longer want to be visible
     */
    onRequestHideOptions?: (...args: any[])=>any;
    /**
     * Callback fired when option is hovered or highlighted via keyboard
     */
    onRequestHighlightOption?: (...args: any[])=>any;
    /**
     * Callback fired when first option should be highlighted
     */
    onRequestHighlightFirstOption?: (...args: any[])=>any;
    /**
     * Callback fired when last option should be highlighted
     */
    onRequestHighlightLastOption?: (...args: any[])=>any;
    /**
     * Callback fired when option clicked or selected via keyboard
     */
    onRequestSelectOption?: (...args: any[])=>any;
    /**
     * @param {Object} renderProps
     * @param {Function} renderProps.getRootProps - Prop getter for root element
     * @param {Function} renderProps.getLabelProps - Prop getter for label element
     * @param {Function} renderProps.getTriggerProps - Prop getter for trigger element
     * @param {Function} renderProps.getInputProps - Prop getter for input element
     * @param {Function} renderProps.getListProps - Prop getter for list element
     * @param {Function} renderProps.getOptionProps - Prop getter for option elements
     * @param {Function} renderProps.getDisabledOptionProps - Prop getter for disabled option elements
     * @param {Function} renderProps.getDescriptionProps - Prop getter for screenreader description element
     */
    children?: (...args: any[])=>any;
    /**
     * Identical to children
     */
    render?: (...args: any[])=>any;
}

export class Selectable extends React.Component<SelectableProps, any> {
    render(): JSX.Element;

}

