import * as React from 'react';

export type TagText = string | React.ReactNode;

export type TagSize = "small" | "medium" | "large";

export type TagVariant = "default" | "inline";

export interface TagProps {
    className?: string;
    text: TagText;
    title?: string;
    /**
     * Whether or not to disable the tag
     */
    disabled?: boolean;
    /**
     * Works just like disabled but keeps the same styles as if it were active
     */
    readOnly?: boolean;
    dismissible?: boolean;
    /**
     * Valid values are `0`, `none`, `auto`, `xxxx-small`, `xx-small`, `x-small`,
     * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
     * familiar CSS-like shorthand. For example: `margin="small auto large"`.
     */
    margin?: any;
    /**
     * If you add an onClick prop, Tag renders as a clickable button
     */
    onClick?: (...args: any[])=>any;
    /**
     * Provides a reference to the underlying html root element
     */
    elementRef?: (...args: any[])=>any;
    size?: TagSize;
    variant?: TagVariant;
}

export class Tag extends React.Component<TagProps, any> {
    render(): JSX.Element;

}

