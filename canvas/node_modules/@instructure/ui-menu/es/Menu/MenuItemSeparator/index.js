import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _class;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import { themeable } from '@instructure/ui-themeable';
import { testable } from '@instructure/ui-testable';
var styles = {
  componentId: 'dpuxe',
  template: function template(theme) {
    return "\n\n.dpuxe_bGBk{background:".concat(theme.background || 'inherit', ";height:").concat(theme.height || 'inherit', ";margin:").concat(theme.margin || 'inherit', ";overflow:hidden}");
  },
  'root': 'dpuxe_bGBk'
};
import theme from "./theme.js";
/**
---
parent: Menu
id: Menu.Separator
---
@module MenuItemSeparator
**/

var MenuItemSeparator = (_dec = testable(), _dec2 = themeable(theme, styles), _dec(_class = _dec2(_class = /*#__PURE__*/function (_Component) {
  _inherits(MenuItemSeparator, _Component);

  var _super = _createSuper(MenuItemSeparator);

  function MenuItemSeparator() {
    _classCallCheck(this, MenuItemSeparator);

    return _super.apply(this, arguments);
  }

  _createClass(MenuItemSeparator, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement("div", Object.assign({}, this.props, {
        role: "presentation",
        className: styles.root
      }));
    }
  }]);

  MenuItemSeparator.displayName = "MenuItemSeparator";
  return MenuItemSeparator;
}(Component)) || _class) || _class);
export default MenuItemSeparator;
export { MenuItemSeparator };