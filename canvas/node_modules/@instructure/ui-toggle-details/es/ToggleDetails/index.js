import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { Button } from '@instructure/ui-buttons';
import { IconArrowOpenEndSolid, IconArrowOpenDownSolid } from '@instructure/ui-icons';
import { Expandable } from '@instructure/ui-expandable';
import { themeable } from '@instructure/ui-themeable';
import { controllable } from '@instructure/ui-prop-types';
import { omitProps, pickProps } from '@instructure/ui-react-utils';
import { isActiveElement } from '@instructure/ui-dom-utils';
import { testable } from '@instructure/ui-testable';
var styles = {
  componentId: 'MlJlv',
  template: function template(theme) {
    return "\n\n.MlJlv_bGBk{font-family:".concat(theme.fontFamily || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";line-height:").concat(theme.lineHeight || 'inherit', "}\n\n.MlJlv_doqw .MlJlv_ebWM,.MlJlv_doqw .MlJlv_cjSw{font-size:").concat(theme.fontSizeSmall || 'inherit', "}\n\n.MlJlv_doqw .MlJlv_dnnz{font-size:").concat(theme.smallIconSize || 'inherit', "}\n\n.MlJlv_doqw .MlJlv_dUEG{-webkit-padding-end:0;-webkit-padding-start:calc(").concat(theme.smallIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ");padding-inline-end:0;padding-inline-start:calc(").concat(theme.smallIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ")}\n\n[dir=ltr] .MlJlv_doqw .MlJlv_dUEG{padding-left:calc(").concat(theme.smallIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ");padding-right:0}\n\n[dir=rtl] .MlJlv_doqw .MlJlv_dUEG{padding-left:0;padding-right:calc(").concat(theme.smallIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ")}\n\n.MlJlv_ycrn .MlJlv_ebWM,.MlJlv_ycrn .MlJlv_cjSw{font-size:").concat(theme.fontSizeMedium || 'inherit', "}\n\n.MlJlv_ycrn .MlJlv_dnnz{font-size:").concat(theme.mediumIconSize || 'inherit', "}\n\n.MlJlv_ycrn .MlJlv_dUEG{-webkit-padding-end:0;-webkit-padding-start:calc(").concat(theme.mediumIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ");padding-inline-end:0;padding-inline-start:calc(").concat(theme.mediumIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ")}\n\n[dir=ltr] .MlJlv_ycrn .MlJlv_dUEG{padding-left:calc(").concat(theme.mediumIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ");padding-right:0}\n\n[dir=rtl] .MlJlv_ycrn .MlJlv_dUEG{padding-left:0;padding-right:calc(").concat(theme.mediumIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ")}\n\n.MlJlv_cMDj .MlJlv_ebWM,.MlJlv_cMDj .MlJlv_cjSw{font-size:").concat(theme.fontSizeLarge || 'inherit', "}\n\n.MlJlv_cMDj .MlJlv_dnnz{font-size:").concat(theme.largeIconSize || 'inherit', "}\n\n.MlJlv_cMDj .MlJlv_dUEG{-webkit-padding-end:0;-webkit-padding-start:calc(").concat(theme.largeIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ");padding-inline-end:0;padding-inline-start:calc(").concat(theme.largeIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ")}\n\n[dir=ltr] .MlJlv_cMDj .MlJlv_dUEG{padding-left:calc(").concat(theme.largeIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ");padding-right:0}\n\n[dir=rtl] .MlJlv_cMDj .MlJlv_dUEG{padding-left:0;padding-right:calc(").concat(theme.largeIconSize || 'inherit', " + ").concat(theme.togglePadding || 'inherit', ")}\n\n.MlJlv_cjSw{-moz-appearance:none;-ms-user-select:none;-webkit-appearance:none;-webkit-user-select:none;appearance:none;background:transparent;border:none;box-sizing:border-box;color:").concat(theme.textColor || 'inherit', ";cursor:pointer;font-family:").concat(theme.fontFamily || 'inherit', ";margin:0;outline:none;overflow:visible;padding:0;position:relative;text-decoration:none;touch-action:manipulation;user-select:none}\n\n.MlJlv_cjSw::-moz-focus-inner{margin:0;padding:0}\n\n.MlJlv_cjSw:before{border:").concat(theme.toggleBorderWidth || 'inherit', " ").concat(theme.toggleBorderStyle || 'inherit', " ").concat(theme.toggleFocusBorderColor || 'inherit', ";border-radius:calc(").concat(theme.toggleBorderRadius || 'inherit', "*1.5);bottom:-0.375rem;content:\"\";left:-0.375rem;opacity:0;pointer-events:none;position:absolute;right:-0.375rem;top:-0.375rem}\n\n.MlJlv_cjSw:focus:before{opacity:1}\n\n.MlJlv_cjSw:active,.MlJlv_cjSw:focus,.MlJlv_cjSw:hover{color:").concat(theme.textColor || 'inherit', ";text-decoration:none}\n\n.MlJlv_cvfe{display:block;width:100%}\n\n.MlJlv_doNn{align-items:center;box-sizing:border-box;display:flex;position:relative;text-align:start}\n\n[dir=ltr] .MlJlv_doNn{text-align:left}\n\n[dir=rtl] .MlJlv_doNn{text-align:right}\n\n.MlJlv_dnnz{color:").concat(theme.iconColor || 'inherit', "}\n\n.MlJlv_dnnz>svg{display:block}\n\n.MlJlv_fuNk{-webkit-margin-end:").concat(theme.iconMargin || 'inherit', ";-webkit-margin-start:0;margin-inline-end:").concat(theme.iconMargin || 'inherit', ";margin-inline-start:0}\n\n[dir=ltr] .MlJlv_fuNk{margin-left:0;margin-right:").concat(theme.iconMargin || 'inherit', "}\n\n[dir=rtl] .MlJlv_fuNk{margin-left:").concat(theme.iconMargin || 'inherit', ";margin-right:0}\n\n.MlJlv_fhZl{-webkit-margin-end:0;-webkit-margin-start:").concat(theme.iconMargin || 'inherit', ";margin-inline-end:0;margin-inline-start:").concat(theme.iconMargin || 'inherit', "}\n\n[dir=ltr] .MlJlv_fhZl{margin-left:").concat(theme.iconMargin || 'inherit', ";margin-right:0}\n\n[dir=rtl] .MlJlv_fhZl{margin-left:0;margin-right:").concat(theme.iconMargin || 'inherit', "}\n\n.MlJlv_btWg{flex-grow:1;min-width:0.0625rem}\n\n.MlJlv_fFWz .MlJlv_btWg{flex:1}\n\n.MlJlv_ebWM{box-sizing:border-box;color:").concat(theme.textColor || 'inherit', ";padding-top:").concat(theme.togglePadding || 'inherit', "}\n\n.MlJlv_eFWP{display:none}\n\n.MlJlv_cMGi{display:block}\n\n@keyframes MlJlv_dFUU{to{opacity:1}}\n\n.MlJlv_caGd{animation-duration:0.3s;animation-fill-mode:forwards;animation-name:MlJlv_dFUU;opacity:0.01}");
  },
  'root': 'MlJlv_bGBk',
  'small': 'MlJlv_doqw',
  'details': 'MlJlv_ebWM',
  'toggle': 'MlJlv_cjSw',
  'icon': 'MlJlv_dnnz',
  'indentDetails': 'MlJlv_dUEG',
  'medium': 'MlJlv_ycrn',
  'large': 'MlJlv_cMDj',
  'fluidWidth': 'MlJlv_cvfe',
  'summary': 'MlJlv_doNn',
  'iconStart': 'MlJlv_fuNk',
  'iconEnd': 'MlJlv_fhZl',
  'summaryText': 'MlJlv_btWg',
  'positionIconAtEnd': 'MlJlv_fFWz',
  'hiddenDetails': 'MlJlv_eFWP',
  'expandedDetails': 'MlJlv_cMGi',
  'content': 'MlJlv_caGd',
  'contentAnimation': 'MlJlv_dFUU'
};
import theme from "./theme.js";
/**
---
category: components
---
**/

var ToggleDetails = (_dec = testable(), _dec2 = themeable(theme, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(ToggleDetails, _Component);

  var _super = _createSuper(ToggleDetails);

  function ToggleDetails() {
    var _this;

    _classCallCheck(this, ToggleDetails);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.shouldAnimateContent = false;

    _this.getButtonRef = function (el) {
      return _this._button = el;
    };

    return _this;
  }

  _createClass(ToggleDetails, [{
    key: "focus",
    value: function focus() {
      this._button.focus();
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.shouldAnimateContent = true;
    }
  }, {
    key: "renderSummary",
    value: function renderSummary(expanded) {
      var _this$props = this.props,
          summary = _this$props.summary,
          iconPosition = _this$props.iconPosition;
      return /*#__PURE__*/React.createElement("span", {
        className: styles.summary
      }, iconPosition === 'start' && this.renderIcon(expanded), /*#__PURE__*/React.createElement("span", {
        className: styles.summaryText
      }, summary), iconPosition === 'end' && this.renderIcon(expanded));
    }
  }, {
    key: "renderToggle",
    value: function renderToggle(toggleProps, expanded) {
      var _this$props2 = this.props,
          variant = _this$props2.variant,
          fluidWidth = _this$props2.fluidWidth;

      var props = _objectSpread({}, omitProps(this.props, ToggleDetails.propTypes), {}, toggleProps, {
        children: this.renderSummary()
      });

      var summary = this.renderSummary(expanded);

      if (variant === 'filled') {
        return /*#__PURE__*/React.createElement(Button, Object.assign({}, props, {
          display: "block",
          textAlign: "start",
          elementRef: this.getButtonRef
        }), summary);
      } else if (props.href) {
        return /*#__PURE__*/React.createElement("a", Object.assign({}, props, {
          className: classnames(styles.toggle, styles[variant], _defineProperty({}, styles.fluidWidth, fluidWidth)),
          ref: this.getButtonRef
        }), summary);
      } else {
        return /*#__PURE__*/React.createElement("button", Object.assign({}, props, {
          type: "button",
          className: classnames(styles.toggle, styles[variant], _defineProperty({}, styles.fluidWidth, fluidWidth)),
          ref: this.getButtonRef
        }), summary);
      }
    }
  }, {
    key: "renderIcon",
    value: function renderIcon(expanded) {
      var _classnames3;

      var iconPosition = this.props.iconPosition;
      var Icon = expanded ? this.props.iconExpanded : this.props.icon;
      return this.props.children ? /*#__PURE__*/React.createElement("span", {
        className: classnames(styles.icon, (_classnames3 = {}, _defineProperty(_classnames3, styles.iconStart, iconPosition === 'start'), _defineProperty(_classnames3, styles.iconEnd, iconPosition === 'end'), _classnames3))
      }, /*#__PURE__*/React.createElement(Icon, null)) : null;
    }
  }, {
    key: "renderDetails",
    value: function renderDetails(expanded, detailsProps) {
      var _classnames4;

      var _this$props3 = this.props,
          children = _this$props3.children,
          size = _this$props3.size,
          iconPosition = _this$props3.iconPosition,
          fluidWidth = _this$props3.fluidWidth;
      return /*#__PURE__*/React.createElement("div", Object.assign({}, detailsProps, {
        className: classnames(styles.details, (_classnames4 = {}, _defineProperty(_classnames4, styles[size], size), _defineProperty(_classnames4, styles.hiddenDetails, !expanded), _defineProperty(_classnames4, styles.expandedDetails, expanded), _defineProperty(_classnames4, styles.indentDetails, iconPosition === 'start' && !fluidWidth), _classnames4))
      }), children && expanded && this.renderContent());
    }
  }, {
    key: "renderContent",
    value: function renderContent() {
      return /*#__PURE__*/React.createElement("div", {
        className: classnames(_defineProperty({}, styles.content, this.shouldAnimateContent))
      }, this.props.children);
    }
  }, {
    key: "render",
    value: function render() {
      var _classes,
          _this2 = this;

      var _this$props4 = this.props,
          variant = _this$props4.variant,
          iconPosition = _this$props4.iconPosition,
          fluidWidth = _this$props4.fluidWidth;
      var positionIconAtEnd = iconPosition === 'end' && (variant === 'filled' || fluidWidth);
      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles[this.props.size], true), _defineProperty(_classes, styles.positionIconAtEnd, positionIconAtEnd), _classes);
      return /*#__PURE__*/React.createElement(Expandable, pickProps(this.props, Expandable.propTypes), function (_ref) {
        var expanded = _ref.expanded,
            getToggleProps = _ref.getToggleProps,
            getDetailsProps = _ref.getDetailsProps;
        return /*#__PURE__*/React.createElement("div", {
          className: classnames(classes)
        }, _this2.renderToggle(getToggleProps(), expanded), _this2.renderDetails(expanded, getDetailsProps()));
      });
    }
  }, {
    key: "focused",
    get: function get() {
      return isActiveElement(this._button);
    }
  }]);

  ToggleDetails.displayName = "ToggleDetails";
  return ToggleDetails;
}(Component), _class2.propTypes = {
  variant: PropTypes.oneOf(['default', 'filled']),

  /**
   * The summary that displays and can be interacted with
   */
  summary: PropTypes.node.isRequired,

  /**
   * Whether the content is expanded or hidden
   */
  expanded: controllable(PropTypes.bool, 'onToggle', 'defaultExpanded'),

  /**
   * Whether the content is initially expanded or hidden (uncontrolled)
   */
  defaultExpanded: PropTypes.bool,
  onToggle: PropTypes.func,

  /**
   * The icon to display next to the summary text when content is hidden
   */
  icon: PropTypes.func,

  /**
   * The icon to display when content is expanded
   */
  iconExpanded: PropTypes.func,

  /**
   * Icon position at the start or end of the summary text
   */
  iconPosition: PropTypes.oneOf(['start', 'end']),

  /**
   * should the summary fill the width of its container
   */
  fluidWidth: PropTypes.bool,

  /**
   * The toggleable content passed inside the ToggleDetails component
   */
  children: PropTypes.node,

  /**
   * Choose a size for the expand/collapse icon
   */
  size: PropTypes.oneOf(['small', 'medium', 'large'])
}, _class2.defaultProps = {
  variant: 'default',
  size: 'medium',
  fluidWidth: false,
  icon: IconArrowOpenEndSolid,
  iconExpanded: IconArrowOpenDownSolid,
  iconPosition: 'start',
  defaultExpanded: false,
  onToggle: function onToggle(event, expanded) {},
  children: null,
  expanded: void 0
}, _temp)) || _class) || _class);
export default ToggleDetails;
export { ToggleDetails };