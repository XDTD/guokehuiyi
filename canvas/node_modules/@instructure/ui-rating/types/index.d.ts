import * as React from 'react';

export type RatingIconCount = 3 | 5;

export type RatingSize = "small" | "medium" | "large";

export interface RatingProps {
    /**
     * A label is required for accessibility
     */
    label: string;
    /**
     * A function that returns the current value formatted for screen readers
     */
    formatValueText?: (...args: any[])=>any;
    /**
     * Choose from a 0-3 or 0-5 rating system
     */
    iconCount?: RatingIconCount;
    /**
     * Choose from different rating icon sizes
     */
    size?: RatingSize;
    /**
     * The maximum rating (defaults to iconCount)
     */
    valueMax?: number;
    /**
     * The current rating
     */
    valueNow?: number;
    /**
     * Set to make the icons animate when they become filled
     */
    animateFill?: boolean;
    /**
     * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
     * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
     * familiar CSS-like shorthand. For example: `margin="small auto large"`.
     */
    margin?: any;
}

export class Rating extends React.Component<RatingProps, any> {
    render(): JSX.Element;

}




export type RatingIconSize = "small" | "medium" | "large";

export interface RatingIconProps {
    animationDelay?: number;
    animateFill?: boolean;
    filled?: boolean;
    size?: RatingIconSize;
}

export class RatingIcon extends React.Component<RatingIconProps, any> {
    render(): JSX.Element;

}

