import * as React from 'react';

export type AvatarSize = "auto" | "xx-small" | "x-small" | "small" | "medium" | "large" | "x-large" | "xx-large";

export type AvatarColor = "default" | "shamrock" | "barney" | "crimson" | "fire" | "licorice" | "ash";

export type AvatarShape = "circle" | "rectangle";

export type AvatarDisplay = "inline-block" | "block";

export type AvatarVariant = "circle" | "rectangle";

export interface AvatarProps {
    name: string;
    /**
     * URL of the image to display as the background image
     */
    src?: string;
    /**
     * Accessible label
     */
    alt?: string;
    size?: AvatarSize;
    color?: AvatarColor;
    shape?: AvatarShape;
    /**
     * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
     * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
     * familiar CSS-like shorthand. For example: `margin="small auto large"`.
     */
    margin?: any;
    display?: AvatarDisplay;
    /**
     * Callback fired when the avatar image has loaded
     */
    onImageLoaded?: (...args: any[])=>any;
    /**
     * the element type to render as
     */
    as?: any;
    elementRef?: (...args: any[])=>any;
    /**
     * eslint-disable react/require-default-props
     */
    inline?: boolean;
    /**
     * __Deprecated - use `shape`__
     */
    variant?: AvatarVariant;
}

export class Avatar extends React.Component<AvatarProps, any> {
    render(): JSX.Element;

}

