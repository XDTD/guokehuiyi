import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _dec3, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { View } from '@instructure/ui-view';
import { themeable, ThemeablePropTypes } from '@instructure/ui-themeable';
import { passthroughProps, deprecated } from '@instructure/ui-react-utils';
import { testable } from '@instructure/ui-testable';
var styles = {
  componentId: 'dsJBj',
  template: function template(theme) {
    return "\n\n.dsJBj_bGBk{background-clip:content-box;background-color:".concat(theme.background || 'inherit', ";background-position:50%;background-repeat:no-repeat;background-size:cover;box-sizing:border-box;height:2.5em;line-height:0;overflow:hidden;text-align:center}\n\n[dir=ltr] .dsJBj_bGBk,[dir=rtl] .dsJBj_bGBk{text-align:center}\n\n.dsJBj_bGBk.dsJBj_uUeq{font-size:inherit}\n\n.dsJBj_bGBk.dsJBj_uUeq,.dsJBj_bGBk.dsJBj_UKsG{border-width:").concat(theme.borderWidthSmall || 'inherit', "}\n\n.dsJBj_bGBk.dsJBj_UKsG{font-size:0.5rem}\n\n.dsJBj_bGBk.dsJBj_dfBC{font-size:0.75rem}\n\n.dsJBj_bGBk.dsJBj_doqw,.dsJBj_bGBk.dsJBj_dfBC{border-width:").concat(theme.borderWidthSmall || 'inherit', "}\n\n.dsJBj_bGBk.dsJBj_doqw{font-size:1rem}\n\n.dsJBj_bGBk.dsJBj_ycrn{font-size:1.25rem}\n\n.dsJBj_bGBk.dsJBj_cMDj,.dsJBj_bGBk.dsJBj_ycrn{border-width:").concat(theme.borderWidthMedium || 'inherit', "}\n\n.dsJBj_bGBk.dsJBj_cMDj{font-size:1.5rem}\n\n.dsJBj_bGBk.dsJBj_eoMd{font-size:1.75rem}\n\n.dsJBj_bGBk.dsJBj_eoMd,.dsJBj_bGBk.dsJBj_fdca{border-width:").concat(theme.borderWidthMedium || 'inherit', "}\n\n.dsJBj_bGBk.dsJBj_fdca{font-size:2rem}\n\n.dsJBj_bGBk.dsJBj_cHTY{border:0;box-shadow:inset 0 0 ").concat(theme.boxShadowBlur || 'inherit', " 0 ").concat(theme.boxShadowColor || 'inherit', "}\n\n.dsJBj_bGBk:not(.dsJBj_cHTY){border-color:").concat(theme.borderColor || 'inherit', ";border-style:solid}\n\n.dsJBj_eYKj{font-family:").concat(theme.fontFamily || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";letter-spacing:0.0313em;line-height:2.375em}\n\n.dsJBj_ddES .dsJBj_eYKj{color:").concat(theme.color || 'inherit', "}\n\n.dsJBj_ekuM .dsJBj_eYKj{color:").concat(theme.colorShamrock || 'inherit', "}\n\n.dsJBj_bXnN .dsJBj_eYKj{color:").concat(theme.colorBarney || 'inherit', "}\n\n.dsJBj_byip .dsJBj_eYKj{color:").concat(theme.colorCrimson || 'inherit', "}\n\n.dsJBj_dKVo .dsJBj_eYKj{color:").concat(theme.colorFire || 'inherit', "}\n\n.dsJBj_eaOe .dsJBj_eYKj{color:").concat(theme.colorLicorice || 'inherit', "}\n\n.dsJBj_fuVp .dsJBj_eYKj{color:").concat(theme.colorAsh || 'inherit', "}\n\n.dsJBj_MrJH{display:none}\n\n.dsJBj_cJVF{border-radius:100%;overflow:hidden;position:relative;width:2.5em}\n\n.dsJBj_bRWf{width:3em}");
  },
  'root': 'dsJBj_bGBk',
  'auto': 'dsJBj_uUeq',
  'xx-small': 'dsJBj_UKsG',
  'x-small': 'dsJBj_dfBC',
  'small': 'dsJBj_doqw',
  'medium': 'dsJBj_ycrn',
  'large': 'dsJBj_cMDj',
  'x-large': 'dsJBj_eoMd',
  'xx-large': 'dsJBj_fdca',
  'loaded': 'dsJBj_cHTY',
  'initials': 'dsJBj_eYKj',
  'default': 'dsJBj_ddES',
  'shamrock': 'dsJBj_ekuM',
  'barney': 'dsJBj_bXnN',
  'crimson': 'dsJBj_byip',
  'fire': 'dsJBj_dKVo',
  'licorice': 'dsJBj_eaOe',
  'ash': 'dsJBj_fuVp',
  'loadImage': 'dsJBj_MrJH',
  'circle': 'dsJBj_cJVF',
  'rectangle': 'dsJBj_bRWf'
};
import theme from "./theme.js";
/**
---
category: components
---
**/

var Avatar = (_dec = testable(), _dec2 = deprecated('8.0.0', {
  inline: 'display',
  variant: 'shape'
}), _dec3 = themeable(theme, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Avatar, _Component);

  var _super = _createSuper(Avatar);

  function Avatar() {
    var _this;

    _classCallCheck(this, Avatar);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      loaded: false
    };

    _this.handleImageLoaded = function (event) {
      _this.setState({
        loaded: true
      });

      _this.props.onImageLoaded(event);
    };

    return _this;
  }

  _createClass(Avatar, [{
    key: "makeInitialsFromName",
    value: function makeInitialsFromName() {
      var name = this.props.name;

      if (!name || typeof name !== 'string') {
        return;
      }

      name = name.trim();

      if (name.length === 0) {
        return;
      }

      if (name.match(/\s+/)) {
        var names = name.split(/\s+/);
        return (names[0][0] + names[names.length - 1][0]).toUpperCase();
      } else {
        return name[0].toUpperCase();
      }
    }
  }, {
    key: "renderLoadImage",
    value: function renderLoadImage() {
      // This image element is visually hidden and is here for loading purposes only
      return /*#__PURE__*/React.createElement("img", {
        src: this.props.src,
        className: styles.loadImage,
        alt: this.props.alt,
        onLoad: this.handleImageLoaded,
        "aria-hidden": "true"
      });
    }
  }, {
    key: "renderInitials",
    value: function renderInitials() {
      return /*#__PURE__*/React.createElement("span", {
        className: styles.initials,
        "aria-hidden": "true"
      }, this.makeInitialsFromName());
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      var _this$props = this.props,
          onImageLoaded = _this$props.onImageLoaded,
          props = _objectWithoutProperties(_this$props, ["onImageLoaded"]);

      var loaded = this.state.loaded;
      return /*#__PURE__*/React.createElement(View, Object.assign({}, passthroughProps(props), {
        style: {
          backgroundImage: loaded ? "url('".concat(this.props.src, "')") : void 0
        },
        className: classnames((_classnames = {}, _defineProperty(_classnames, styles.root, true), _defineProperty(_classnames, styles[this.props.size], true), _defineProperty(_classnames, styles[this.props.variant || this.props.shape], true), _defineProperty(_classnames, styles[this.props.color], true), _defineProperty(_classnames, styles.loaded, loaded), _classnames)),
        "aria-label": this.props.alt ? this.props.alt : null,
        role: this.props.alt ? 'img' : null,
        as: this.props.as,
        elementRef: this.props.elementRef,
        margin: this.props.margin,
        display: this.props.display === 'block' || this.props.inline === false ? 'block' : 'inline-block'
      }), this.renderLoadImage(), !loaded && this.renderInitials());
    }
  }]);

  Avatar.displayName = "Avatar";
  return Avatar;
}(Component), _class2.propTypes = {
  name: PropTypes.string.isRequired,

  /*
   * URL of the image to display as the background image
   */
  src: PropTypes.string,

  /*
   * Accessible label
   */
  alt: PropTypes.string,
  size: PropTypes.oneOf(['auto', 'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large']),
  color: PropTypes.oneOf(['default', 'shamrock', 'barney', 'crimson', 'fire', 'licorice', 'ash']),
  shape: PropTypes.oneOf(['circle', 'rectangle']),

  /**
   * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
   * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
   * familiar CSS-like shorthand. For example: `margin="small auto large"`.
   */
  margin: ThemeablePropTypes.spacing,
  display: PropTypes.oneOf(['inline-block', 'block']),

  /**
   * Callback fired when the avatar image has loaded
   */
  onImageLoaded: PropTypes.func,

  /**
   * the element type to render as
   */
  as: PropTypes.elementType,
  // eslint-disable-line react/require-default-props

  /**
   * provides a reference to the underlying html element
   */
  elementRef: PropTypes.func,

  /* eslint-disable react/require-default-props */

  /**
   * __Deprecated - use `display`__
   */
  inline: PropTypes.bool,

  /**
   * __Deprecated - use `shape`__
   */
  variant: PropTypes.oneOf(['circle', 'rectangle'])
  /* eslint-enable react/require-default-props */

}, _class2.defaultProps = {
  src: void 0,
  alt: void 0,
  margin: void 0,
  elementRef: void 0,
  size: 'medium',
  color: 'default',
  shape: 'circle',
  display: 'inline-block',
  onImageLoaded: function onImageLoaded(event) {}
}, _temp)) || _class) || _class) || _class);
export default Avatar;
export { Avatar };