"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComponentIdentifier = exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _matchComponentTypes = require("./matchComponentTypes.js");

var _ensureSingleChild = require("./ensureSingleChild.js");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
---
category: utilities/react
---
Abstract component identifier. Helpful for picking out a specific child.

  ```js
  class App extends Component {
    render () {
      const title = pick(Title, this.props.children)
      const content = pick(Content, this.props.children)

      return (
        <div>
          {title}
          <ContextView>
            {content}
          </ContextView>
         </div>
     )
    }
  }

  class Title extends ComponentIdentifier { static displayName = 'Title' }
  class Content extends ComponentIdentifier { static displayName = 'Content' }

  ReactDOM.render(
    <App>
      <Title><h2>Hello World!</h2></Title>
      <Content><div>This text gets decorated within `App`.</div></Content>
    </App>,
    document.getElementById('container')
  )
  ```
  @module ComponentIdentifier
**/
var ComponentIdentifier = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(ComponentIdentifier, _Component);

  var _super = (0, _createSuper2.default)(ComponentIdentifier);

  function ComponentIdentifier() {
    (0, _classCallCheck2.default)(this, ComponentIdentifier);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(ComponentIdentifier, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["children"]);
      return (0, _ensureSingleChild.ensureSingleChild)(children, props);
    }
  }]);
  ComponentIdentifier.displayName = "ComponentIdentifier";
  return ComponentIdentifier;
}(_react.Component);

exports.ComponentIdentifier = ComponentIdentifier;
ComponentIdentifier.propTypes = {
  children: _propTypes.default.node
};
ComponentIdentifier.defaultProps = {
  children: null
};

ComponentIdentifier.pick = function (component, children) {
  var result;

  _react.default.Children.forEach(children, function (child) {
    if ((0, _matchComponentTypes.matchComponentTypes)(child, [component])) {
      result = child;
    }
  });

  return result;
};

var _default = ComponentIdentifier;
exports.default = _default;