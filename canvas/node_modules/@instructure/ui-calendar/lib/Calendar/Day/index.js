"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Day = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _View = require("@instructure/ui-view/lib/View");

var _AccessibleContent = require("@instructure/ui-a11y-content/lib/AccessibleContent");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _callRenderProp = require("@instructure/ui-react-utils/lib/callRenderProp.js");

var _getElementType = require("@instructure/ui-react-utils/lib/getElementType.js");

var _I18nPropTypes = require("@instructure/ui-i18n/lib/I18nPropTypes.js");

var _uiTestable = _interopRequireDefault(require("@instructure/ui-testable"));

var _uiThemeable = _interopRequireDefault(require("@instructure/ui-themeable"));

var _theme = _interopRequireDefault(require("./theme.js"));

var _dec, _dec2, _class, _class2, _temp;

var styles = {
  componentId: 'euGrj',
  template: function template(theme) {
    return "\n\n.euGrj_bGBk{padding:0}\n\n.euGrj_eLxY{align-items:center;background:".concat(theme.background || 'inherit', ";border:none;color:").concat(theme.color || 'inherit', ";display:flex;font-size:").concat(theme.fontSize || 'inherit', ";height:").concat(theme.height || 'inherit', ";justify-content:center;line-height:1;margin:0;min-width:").concat(theme.minWidth || 'inherit', ";text-decoration:none}\n\n.euGrj_dtTm{color:").concat(theme.outsideMonthColor || 'inherit', "}\n\n.euGrj_fGhm{background:").concat(theme.selectedBackground || 'inherit', ";border-radius:").concat(theme.selectedBorderRadius || 'inherit', ";color:").concat(theme.selectedColor || 'inherit', "}\n\n.euGrj_fxYf{background:").concat(theme.todayBackground || 'inherit', ";border-radius:").concat(theme.todayBorderRadius || 'inherit', ";color:").concat(theme.todayColor || 'inherit', "}\n\n.euGrj_ywdX{opacity:0.5}");
  },
  'root': 'euGrj_bGBk',
  'day': 'euGrj_eLxY',
  'outsideMonth': 'euGrj_dtTm',
  'selected': 'euGrj_fGhm',
  'today': 'euGrj_fxYf',
  'disabled': 'euGrj_ywdX'
};

/**
---
parent: Calendar
id: Calendar.Day
---
**/
var Day = (_dec = (0, _uiTestable.default)(), _dec2 = (0, _uiThemeable.default)(_theme.default, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Day, _Component);

  var _super = (0, _createSuper2.default)(Day);

  function Day() {
    var _this;

    (0, _classCallCheck2.default)(this, Day);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.handleClick = function (event) {
      var _this$props = _this.props,
          onClick = _this$props.onClick,
          date = _this$props.date;

      if (typeof onClick === 'function') {
        onClick(event, {
          date: date
        });
      }
    };

    _this.handleKeyDown = function (event) {
      var _this$props2 = _this.props,
          onKeyDown = _this$props2.onKeyDown,
          date = _this$props2.date;

      if (typeof onKeyDown === 'function') {
        onKeyDown(event, {
          date: date
        });
      }
    };

    _this.handleElementRef = function (el) {
      var elementRef = _this.props.elementRef;
      elementRef(el);
    };

    return _this;
  }

  (0, _createClass2.default)(Day, [{
    key: "shouldApplyAriaSelected",
    value: function shouldApplyAriaSelected() {
      var role = this.props.role; // eslint-disable-line react/prop-types

      return ['option', 'gridcell'].indexOf(role) > -1;
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      var _this$props3 = this.props,
          children = _this$props3.children,
          label = _this$props3.label,
          interaction = _this$props3.interaction,
          isOutsideMonth = _this$props3.isOutsideMonth,
          isSelected = _this$props3.isSelected,
          isToday = _this$props3.isToday,
          onClick = _this$props3.onClick,
          onKeyDown = _this$props3.onKeyDown,
          as = _this$props3.as,
          props = (0, _objectWithoutProperties2.default)(_this$props3, ["children", "label", "interaction", "isOutsideMonth", "isSelected", "isToday", "onClick", "onKeyDown", "as"]);
      var elementType = this.elementType,
          isDisabled = this.isDisabled;
      var classes = (0, _classnames2.default)((_classnames = {}, (0, _defineProperty2.default)(_classnames, styles.day, true), (0, _defineProperty2.default)(_classnames, styles.outsideMonth, isOutsideMonth), (0, _defineProperty2.default)(_classnames, styles.selected, isSelected), (0, _defineProperty2.default)(_classnames, styles.today, isToday && !isSelected), (0, _defineProperty2.default)(_classnames, styles.disabled, isDisabled), _classnames));

      var passthroughProps = _View.View.omitViewProps((0, _omitProps.omitProps)(props, Day.propTypes), Day);

      return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, passthroughProps, {
        as: elementType,
        className: styles.root,
        display: "inline-block",
        margin: "xxx-small",
        borderWidth: "none",
        borderColor: "transparent",
        background: "transparent",
        cursor: elementType === 'button' || elementType === 'a' ? isDisabled ? 'not-allowed' : 'pointer' : 'auto',
        disabled: isDisabled,
        "aria-current": isToday ? 'date' : null,
        "aria-selected": this.shouldApplyAriaSelected() ? isSelected ? 'true' : 'false' : null,
        onClick: onClick && this.handleClick,
        onKeyDown: onKeyDown && this.handleKeyDown,
        elementRef: this.handleElementRef
      }), /*#__PURE__*/_react.default.createElement("span", {
        className: classes
      }, /*#__PURE__*/_react.default.createElement(_AccessibleContent.AccessibleContent, {
        alt: label
      }, (0, _callRenderProp.callRenderProp)(children))));
    }
  }, {
    key: "isDisabled",
    get: function get() {
      var interaction = this.props.interaction;
      return interaction === 'disabled';
    }
  }, {
    key: "elementType",
    get: function get() {
      var as = this.props.as;
      return as || (0, _getElementType.getElementType)(Day, this.props);
    }
  }]);
  Day.displayName = "Day";
  return Day;
}(_react.Component), _class2.propTypes = {
  /**
   * The rendered representation of the corresponding date.
   */
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),

  /**
   * An ISO 8601 formatted string representing the date corresponding to
   * this `<Calendar.Day />`
   */
  date: _I18nPropTypes.I18nPropTypes.iso8601.isRequired,

  /**
   * Accessible label to provide more context for the date to assistive
   * technologies. This should consist of more than just a numerical date value.
   * It should also include the month and the year. Ex. instead of just `1`,
   * provide `1 August 2019`.
   */
  label: _propTypes.default.string.isRequired,

  /**
   * Is the `<Calendar.Day />` disabled
   */
  interaction: _propTypes.default.oneOf(['enabled', 'disabled']),

  /**
   * Is the `<Calendar.Day />` selected
   */
  isSelected: _propTypes.default.bool,

  /**
   * Is the `<Calendar.Day />` today
   */
  isToday: _propTypes.default.bool,

  /**
   * Is the `<Calendar.Day />` located outside the current rendered month
   */
  isOutsideMonth: _propTypes.default.bool,

  /**
   * Callback fired on click.
   * @param {Object} event - the click event
   * @param {Object} data - additional data
   * @param data.date - the date of the corresponding `<Calendar.Day />`
   */
  onClick: _propTypes.default.func,

  /**
   * Callback fired on key down.
   * @param {Object} event - the key down event
   * @param {Object} data - additional data
   * @param data.date - the date of the corresponding `<Calendar.Day />`
   */
  onKeyDown: _propTypes.default.func,

  /**
   * A ref function for the underlying DOM element.
   */
  elementRef: _propTypes.default.func,

  /**
   * the element type to render as
   */
  as: _propTypes.default.elementType // eslint-disable-line react/require-default-props

}, _class2.defaultProps = {
  interaction: 'enabled',
  isSelected: false,
  isToday: false,
  isOutsideMonth: false,
  elementRef: function elementRef(el) {},
  onClick: void 0,
  onKeyDown: void 0,
  children: null
}, _temp)) || _class) || _class);
exports.Day = Day;
var _default = Day;
exports.default = _default;