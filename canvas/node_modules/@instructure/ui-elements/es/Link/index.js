import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import { warn as _warn } from "@instructure/console";

var _dec, _dec2, _dec3, _class, _class2, _temp;

/*
* The MIT License (MIT)
*
* Copyright (c) 2015 - present Instructure, Inc.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { View } from '@instructure/ui-view';
import { themeable, ThemeablePropTypes } from '@instructure/ui-themeable';
import { hasVisibleChildren } from '@instructure/ui-a11y-utils';
import { findDOMNode, findFocusable, isActiveElement } from '@instructure/ui-dom-utils';
import { deprecated, getElementType, matchComponentTypes, omitProps } from '@instructure/ui-react-utils';
import { testable } from '@instructure/ui-testable';
var styles = {
  componentId: 'cLDjO',
  template: function template(theme) {
    return "\n\n.cLDjO_bGBk,a.cLDjO_bGBk,button.cLDjO_bGBk{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;box-sizing:border-box;font-family:".concat(theme.fontFamily || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";outline-color:transparent;outline-offset:0.25rem;outline-style:").concat(theme.focusOutlineStyle || 'inherit', ";outline-width:").concat(theme.focusOutlineWidth || 'inherit', ";transition:outline-color 0.2s;vertical-align:baseline}\n\n.cLDjO_bGBk:focus,a.cLDjO_bGBk:focus,button.cLDjO_bGBk:focus{outline-color:").concat(theme.focusOutlineColor || 'inherit', "}\n\n.cLDjO_bGBk[aria-disabled],a.cLDjO_bGBk[aria-disabled],button.cLDjO_bGBk[aria-disabled]{cursor:not-allowed;opacity:0.5;pointer-events:none}\n\n.cLDjO_bGBk::-moz-focus-inner,a.cLDjO_bGBk::-moz-focus-inner,button.cLDjO_bGBk::-moz-focus-inner{border:0}\n\na.cLDjO_bGBk,button.cLDjO_bGBk{color:").concat(theme.color || 'inherit', ";cursor:pointer}\n\na.cLDjO_bGBk.cLDjO_vIby,button.cLDjO_bGBk.cLDjO_vIby{-webkit-text-decoration:").concat(theme.textDecoration || 'inherit', ";text-decoration:").concat(theme.textDecoration || 'inherit', "}\n\na.cLDjO_bGBk.cLDjO_bSMN,button.cLDjO_bGBk.cLDjO_bSMN{-webkit-text-decoration:").concat(theme.textDecorationOutsideText || 'inherit', ";text-decoration:").concat(theme.textDecorationOutsideText || 'inherit', "}\n\na.cLDjO_bGBk:focus,button.cLDjO_bGBk:focus{color:").concat(theme.color || 'inherit', "}\n\na.cLDjO_bGBk:active,a.cLDjO_bGBk:hover,button.cLDjO_bGBk:active,button.cLDjO_bGBk:hover{-webkit-text-decoration:").concat(theme.hoverTextDecoration || 'inherit', ";color:").concat(theme.hoverColor || 'inherit', ";text-decoration:").concat(theme.hoverTextDecoration || 'inherit', "}\n\n.cLDjO_bGBk.cLDjO_enfx,a.cLDjO_bGBk.cLDjO_enfx:link,a.cLDjO_bGBk.cLDjO_enfx:visited,button.cLDjO_bGBk.cLDjO_enfx{color:").concat(theme.colorInverse || 'inherit', "}\n\n.cLDjO_bGBk.cLDjO_enfx:focus,a.cLDjO_bGBk.cLDjO_enfx:link:focus,a.cLDjO_bGBk.cLDjO_enfx:visited:focus,button.cLDjO_bGBk.cLDjO_enfx:focus{outline-color:").concat(theme.focusInverseOutlineColor || 'inherit', "}\n\n.cLDjO_bGBk.cLDjO_enfx:active,.cLDjO_bGBk.cLDjO_enfx:focus,.cLDjO_bGBk.cLDjO_enfx:hover,a.cLDjO_bGBk.cLDjO_enfx:link:active,a.cLDjO_bGBk.cLDjO_enfx:link:focus,a.cLDjO_bGBk.cLDjO_enfx:link:hover,a.cLDjO_bGBk.cLDjO_enfx:visited:active,a.cLDjO_bGBk.cLDjO_enfx:visited:focus,a.cLDjO_bGBk.cLDjO_enfx:visited:hover,button.cLDjO_bGBk.cLDjO_enfx:active,button.cLDjO_bGBk.cLDjO_enfx:focus,button.cLDjO_bGBk.cLDjO_enfx:hover{color:").concat(theme.colorInverse || 'inherit', "}\n\nbutton.cLDjO_bGBk{-moz-appearance:none;-ms-user-select:text;-webkit-appearance:none;-webkit-user-select:text;appearance:none;background:none;border:none;cursor:pointer;font-size:1em;margin:0;padding:0;text-align:inherit;user-select:text}\n\n[dir=ltr] button.cLDjO_bGBk,[dir=rtl] button.cLDjO_bGBk{text-align:inherit}\n\n.cLDjO_dnnz{box-sizing:border-box;font-size:").concat(theme.iconSize || 'inherit', "}\n\n.cLDjO_ddMx .cLDjO_dnnz{-webkit-padding-end:").concat(theme.iconPlusTextMargin || 'inherit', ";-webkit-padding-start:0;padding-inline-end:").concat(theme.iconPlusTextMargin || 'inherit', ";padding-inline-start:0}\n\n[dir=ltr] .cLDjO_ddMx .cLDjO_dnnz{padding-left:0;padding-right:").concat(theme.iconPlusTextMargin || 'inherit', "}\n\n[dir=rtl] .cLDjO_ddMx .cLDjO_dnnz{padding-left:").concat(theme.iconPlusTextMargin || 'inherit', ";padding-right:0}\n\n.cLDjO_bkXt .cLDjO_dnnz{-webkit-padding-end:0;-webkit-padding-start:").concat(theme.iconPlusTextMargin || 'inherit', ";padding-inline-end:0;padding-inline-start:").concat(theme.iconPlusTextMargin || 'inherit', "}\n\n[dir=ltr] .cLDjO_bkXt .cLDjO_dnnz{padding-left:").concat(theme.iconPlusTextMargin || 'inherit', ";padding-right:0}\n\n[dir=rtl] .cLDjO_bkXt .cLDjO_dnnz{padding-left:0;padding-right:").concat(theme.iconPlusTextMargin || 'inherit', "}\n\n.cLDjO_FcDy.cLDjO_bkXt,.cLDjO_FcDy.cLDjO_ddMx{align-items:center}");
  },
  'root': 'cLDjO_bGBk',
  'isWithinText': 'cLDjO_vIby',
  'isOutsideText': 'cLDjO_bSMN',
  'inverse': 'cLDjO_enfx',
  'icon': 'cLDjO_dnnz',
  'iconPlacement--start': 'cLDjO_ddMx',
  'iconPlacement--end': 'cLDjO_bkXt',
  'truncates': 'cLDjO_FcDy'
};
import theme from './theme';
/**
---
category: components/deprecated
id: DeprecatedLink
---
**/

var Link = (_dec = deprecated('7.0.0', null, 'Use Link from ui-link instead.'), _dec2 = testable(), _dec3 = themeable(theme, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Link, _Component);

  var _super = _createSuper(Link);

  function Link() {
    var _this;

    _classCallCheck(this, Link);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.handleClick = function (e) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          onClick = _this$props.onClick;

      if (disabled) {
        e.preventDefault();
        e.stopPropagation();
      } else if (typeof onClick === 'function') {
        onClick(e);
      }
    };

    return _this;
  }

  _createClass(Link, [{
    key: "focus",
    value: function focus() {
      findDOMNode(this._link).focus();
    }
  }, {
    key: "renderIcon",
    value: function renderIcon() {
      var Icon = this.props.icon;

      /*#__PURE__*/

      /*#__PURE__*/
      _warn( // if display prop is used, warn about icon or TruncateText
      this.props.display === void 0, '[Link] Using the display property with an icon may cause layout issues.');

      if (typeof this.props.icon === 'function') {
        return /*#__PURE__*/React.createElement("span", {
          className: styles.icon
        }, /*#__PURE__*/React.createElement(Icon, null));
      } else if (Icon) {
        return /*#__PURE__*/React.createElement("span", {
          className: styles.icon
        }, Icon);
      } else {
        return null;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classes,
          _this2 = this;

      var _this$props2 = this.props,
          disabled = _this$props2.disabled,
          children = _this$props2.children,
          onClick = _this$props2.onClick,
          variant = _this$props2.variant,
          href = _this$props2.href,
          margin = _this$props2.margin,
          icon = _this$props2.icon,
          iconPlacement = _this$props2.iconPlacement,
          linkRef = _this$props2.linkRef,
          _elementRef = _this$props2.elementRef,
          isWithinText = _this$props2.isWithinText;
      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles.inverse, variant === 'inverse'), _defineProperty(_classes, styles["iconPlacement--".concat(iconPlacement)], icon && this.hasVisibleChildren), _defineProperty(_classes, styles.truncates, this.containsTruncateText), _defineProperty(_classes, styles["is".concat(isWithinText ? 'Within' : 'Outside', "Text")], true), _classes);
      var role = onClick && this.element !== 'button' ? 'button' : null;
      var type = this.element === 'button' || this.element === 'input' ? 'button' : null;
      var tabIndex = role === 'button' && !disabled ? '0' : null;
      var passthroughProps = View.omitViewProps(omitProps(this.props, Link.propTypes), Link);

      var props = _objectSpread({}, passthroughProps, {
        elementRef: function elementRef(el) {
          _this2._link = el;
          if (typeof linkRef === 'function') linkRef(el);
          if (typeof _elementRef === 'function') _elementRef(el);
        },
        as: this.element,
        display: this.display,
        margin: margin,
        className: classnames(classes),
        href: href,
        onClick: this.handleClick,
        'aria-disabled': disabled ? 'true' : null,
        role: role,
        type: type,
        tabIndex: tabIndex
      });

      return /*#__PURE__*/React.createElement(View, props, icon && iconPlacement === 'start' && this.renderIcon(), children, icon && iconPlacement === 'end' && this.renderIcon());
    }
  }, {
    key: "display",
    get: function get() {
      if (this.props.display) {
        return this.props.display; // user-entered display property
      }

      if (this.props.icon) {
        if (this.containsTruncateText) {
          return 'flex'; // TruncateText displays block, so avoid icon getting bumped
        } else {
            return 'inline-block'; // avoid irregularly shaped focus outline
          }
      } else if (this.containsTruncateText) {
        return 'block'; // TruncateText displays block, so container needs to as well
      } else {
        return 'auto';
      }
    }
  }, {
    key: "hasVisibleChildren",
    get: function get() {
      return hasVisibleChildren(this.props.children);
    }
  }, {
    key: "element",
    get: function get() {
      return getElementType(Link, this.props);
    }
  }, {
    key: "focused",
    get: function get() {
      return isActiveElement(this._link);
    }
  }, {
    key: "focusable",
    get: function get() {
      return findFocusable(this._link);
    }
  }, {
    key: "containsTruncateText",
    get: function get() {
      var truncateText = false;
      React.Children.forEach(this.props.children, function (child) {
        if (child && matchComponentTypes(child, ['TruncateText'])) {
          truncateText = true;
        }
      });

      /*#__PURE__*/

      /*#__PURE__*/
      _warn( // if display prop is used, warn about icon or TruncateText
      !truncateText || this.props.display === void 0, '[Link] Using the display property with TruncateText may cause layout issues.');

      return truncateText;
    }
  }]);

  Link.displayName = "Link";
  return Link;
}(Component), _class2.propTypes = {
  href: PropTypes.string,
  children: PropTypes.node.isRequired,
  variant: PropTypes.oneOf(['default', 'inverse']),

  /**
  * provides a reference to the underlying focusable (`button` or `a`) element
  */
  linkRef: PropTypes.func,

  /**
  * provides a reference to the underlying html element
  */
  elementRef: PropTypes.func,

  /**
  * the element type to render as (will default to `<a>` if href is provided)
  */
  as: PropTypes.elementType,
  disabled: PropTypes.bool,
  onClick: PropTypes.func,

  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: ThemeablePropTypes.spacing,

  /**
  * Add an SVG icon to the Link. Do not add icons directly as
  * children.
  */
  icon: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),

  /**
  * Place the icon before or after the text in the Link.
  */
  iconPlacement: PropTypes.oneOf(['start', 'end']),

  /**
  * Set the CSS display property of the Link element. 'auto' sets no display property.
  */
  display: PropTypes.oneOf(['auto', 'block', 'inline-block', 'flex', 'inline-flex']),

  /**
  * Set `false` to remove default underline if Link does not appear inline with text
  */
  isWithinText: PropTypes.bool
}, _class2.defaultProps = {
  href: void 0,
  elementRef: void 0,
  disabled: false,
  onClick: void 0,
  margin: void 0,
  icon: void 0,
  display: void 0,
  variant: 'default',
  as: void 0,
  linkRef: function linkRef(link) {},
  iconPlacement: 'start',
  isWithinText: true
}, _temp)) || _class) || _class) || _class);
export default Link;
export { Link };