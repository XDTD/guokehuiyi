import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _dec3, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Children, Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { View } from '@instructure/ui-view';
import { themeable, ThemeablePropTypes } from '@instructure/ui-themeable';
import { omitProps, safeCloneElement, deprecated } from '@instructure/ui-react-utils';
import { Children as ChildrenPropTypes } from '@instructure/ui-prop-types';
import { testable } from '@instructure/ui-testable';
import { ListItem } from './ListItem';
var styles = {
  componentId: 'tTloz',
  template: function template(theme) {
    return "\n\n.tTloz_bGBk{font-family:".concat(theme.fontFamily || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";padding:0}\n\n.tTloz_ddES{-webkit-padding-end:0;-webkit-padding-start:").concat(theme.defaultListPadding || 'inherit', ";padding-inline-end:0;padding-inline-start:").concat(theme.defaultListPadding || 'inherit', "}\n\n[dir=ltr] .tTloz_ddES{padding-left:").concat(theme.defaultListPadding || 'inherit', ";padding-right:0}\n\n[dir=rtl] .tTloz_ddES{padding-left:0;padding-right:").concat(theme.defaultListPadding || 'inherit', "}\n\n.tTloz_ddES.tTloz_enMC{-webkit-padding-end:0;-webkit-padding-start:calc(").concat(theme.defaultListPadding || 'inherit', "/2);counter-reset:ol-counter;list-style-type:none;padding-inline-end:0;padding-inline-start:calc(").concat(theme.defaultListPadding || 'inherit', "/2)}\n\n[dir=ltr] .tTloz_ddES.tTloz_enMC{padding-left:calc(").concat(theme.defaultListPadding || 'inherit', "/2);padding-right:0}\n\n[dir=rtl] .tTloz_ddES.tTloz_enMC{padding-left:0;padding-right:calc(").concat(theme.defaultListPadding || 'inherit', "/2)}\n\n.tTloz_ddES.tTloz_enMC li:before{-webkit-margin-end:").concat(theme.orderedNumberMargin || 'inherit', ";-webkit-margin-start:0;content:counters(ol-counter,\".\") \".\";counter-increment:ol-counter;font-weight:").concat(theme.orderedNumberFontWeight || 'inherit', ";margin-inline-end:").concat(theme.orderedNumberMargin || 'inherit', ";margin-inline-start:0}\n\n[dir=ltr] .tTloz_ddES.tTloz_enMC li:before{margin-left:0;margin-right:").concat(theme.orderedNumberMargin || 'inherit', "}\n\n[dir=rtl] .tTloz_ddES.tTloz_enMC li:before{margin-left:").concat(theme.orderedNumberMargin || 'inherit', ";margin-right:0}\n\n.tTloz_eXrk,.tTloz_fLbg{-webkit-padding-start:0;list-style-type:none;padding-inline-start:0}\n\n[dir=ltr] .tTloz_eXrk,[dir=ltr] .tTloz_fLbg{padding-left:0}\n\n[dir=rtl] .tTloz_eXrk,[dir=rtl] .tTloz_fLbg{padding-right:0}");
  },
  'root': 'tTloz_bGBk',
  'default': 'tTloz_ddES',
  'ordered': 'tTloz_enMC',
  'inline': 'tTloz_eXrk',
  'unstyled': 'tTloz_fLbg'
};
import theme from './theme';
/**
---
category: components/deprecated
id: DeprecatedList
---
**/

var List = (_dec = deprecated('7.0.0', null, 'Use List from ui-list instead.'), _dec2 = testable(), _dec3 = themeable(theme, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(List, _Component);

  var _super = _createSuper(List);

  function List() {
    _classCallCheck(this, List);

    return _super.apply(this, arguments);
  }

  _createClass(List, [{
    key: "renderChildren",
    value: function renderChildren() {
      var _this = this;

      return Children.map(this.props.children, function (child) {
        if (!child) return; // ignore null, falsy children

        return safeCloneElement(child, {
          variant: _this.props.variant,
          delimiter: _this.props.delimiter,
          size: _this.props.size,
          spacing: _this.props.itemSpacing
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classes;

      var passthroughProps = View.omitViewProps(omitProps(this.props, List.propTypes), List);
      var _this$props = this.props,
          as = _this$props.as,
          margin = _this$props.margin,
          variant = _this$props.variant,
          elementRef = _this$props.elementRef;
      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles[variant], variant), _defineProperty(_classes, styles.unordered, as === 'ul'), _defineProperty(_classes, styles.ordered, as === 'ol'), _classes);
      return /*#__PURE__*/React.createElement(View, Object.assign({}, passthroughProps, {
        className: classnames(classes),
        as: as,
        margin: margin,
        elementRef: elementRef
      }), this.renderChildren());
    }
  }]);

  List.displayName = "List";
  return List;
}(Component), _class2.propTypes = {
  /**
  * Only accepts `<List.Item>` as a child
  */
  children: ChildrenPropTypes.oneOf([ListItem]),
  as: PropTypes.oneOf(['ul', 'ol']),

  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: ThemeablePropTypes.spacing,
  size: PropTypes.oneOf(['small', 'medium', 'large']),
  variant: PropTypes.oneOf(['default', 'unstyled', 'inline']),
  delimiter: PropTypes.oneOf(['none', 'pipe', 'slash', 'arrow', 'dashed', 'solid']),

  /**
  * Sets the margin separating each ListItem.
  */
  itemSpacing: PropTypes.oneOf(['none', 'xxx-small', 'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large']),
  elementRef: PropTypes.func
}, _class2.defaultProps = {
  children: null,
  itemSpacing: void 0,
  elementRef: void 0,
  as: 'ul',
  margin: 'none',
  variant: 'default',
  delimiter: 'none',
  size: 'medium'
}, _class2.Item = ListItem, _temp)) || _class) || _class) || _class);
export default List;
export { List, ListItem };