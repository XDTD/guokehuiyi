import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { View } from '@instructure/ui-view';
import { omitProps } from '@instructure/ui-react-utils';
import { themeable, ThemeablePropTypes } from '@instructure/ui-themeable';
var styles = {
  componentId: 'dKjcB',
  template: function template(theme) {
    return "\n\n.dKjcB_bGBk{align-items:center;display:flex;font-family:".concat(theme.fontFamily || 'inherit', ";font-size:").concat(theme.fontSize || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";line-height:").concat(theme.lineHeight || 'inherit', ";width:100%}\n\n.dKjcB_fKwc[value]{-moz-appearance:none;-webkit-appearance:none;appearance:none;border:none;box-sizing:border-box;flex:1;width:auto}\n\n.dKjcB_fKwc[value]::-webkit-progress-value{background:linear-gradient(90deg,").concat(theme.meterColorStart || 'inherit', " 0%,").concat(theme.meterColorEnd || 'inherit', ")}\n\n.dKjcB_fKwc[value]::-moz-progress-bar{background:linear-gradient(90deg,").concat(theme.meterColorStart || 'inherit', " 0%,").concat(theme.meterColorEnd || 'inherit', ")}\n\n.dKjcB_fKwc[value]::-ms-fill{background:linear-gradient(90deg,").concat(theme.meterColorStart || 'inherit', " 0%,").concat(theme.meterColorEnd || 'inherit', ");border:none}\n\n.dKjcB_fqzO{-webkit-padding-start:").concat(theme.valuePadding || 'inherit', ";box-sizing:border-box;flex:0 0 5.625rem;line-height:1;padding-inline-start:").concat(theme.valuePadding || 'inherit', "}\n\n[dir=ltr] .dKjcB_fqzO{padding-left:").concat(theme.valuePadding || 'inherit', "}\n\n[dir=rtl] .dKjcB_fqzO{padding-right:").concat(theme.valuePadding || 'inherit', "}\n\n.dKjcB_bpmu{-webkit-margin-end:0.1875rem;-webkit-margin-start:0.1875rem;margin-inline-end:0.1875rem;margin-inline-start:0.1875rem}\n\n[dir=ltr] .dKjcB_bpmu{margin-left:0.1875rem;margin-right:0.1875rem}\n\n[dir=rtl] .dKjcB_bpmu{margin-left:0.1875rem;margin-right:0.1875rem}\n\n.dKjcB_dfBC .dKjcB_fKwc[value]{height:").concat(theme.xSmallHeight || 'inherit', "}\n\n.dKjcB_dfBC .dKjcB_fqzO{font-size:").concat(theme.xSmallValueFontSize || 'inherit', "}\n\n.dKjcB_doqw .dKjcB_fKwc[value]{height:1.125rem}\n\n.dKjcB_doqw .dKjcB_fqzO{font-size:").concat(theme.smallValueFontSize || 'inherit', "}\n\n.dKjcB_ycrn .dKjcB_fKwc[value]{height:").concat(theme.mediumHeight || 'inherit', "}\n\n.dKjcB_ycrn .dKjcB_fqzO{font-size:").concat(theme.mediumValueFontSize || 'inherit', "}\n\n.dKjcB_cMDj .dKjcB_fKwc[value]{height:").concat(theme.largeHeight || 'inherit', "}\n\n.dKjcB_cMDj .dKjcB_fqzO{font-size:").concat(theme.largeValueFontSize || 'inherit', "}\n\n.dKjcB_ddES .dKjcB_fKwc[value]{background-color:").concat(theme.trackColor || 'inherit', "}\n\n.dKjcB_ddES .dKjcB_fKwc[value]::-webkit-progress-bar{background-color:").concat(theme.trackColor || 'inherit', "}\n\n.dKjcB_ddES .dKjcB_fqzO{color:").concat(theme.color || 'inherit', "}\n\n.dKjcB_enfx .dKjcB_fKwc[value]{background-color:").concat(theme.inverseTrackColor || 'inherit', "}\n\n.dKjcB_enfx .dKjcB_fKwc[value]::-webkit-progress-bar{background-color:").concat(theme.inverseTrackColor || 'inherit', "}\n\n.dKjcB_enfx .dKjcB_fqzO{color:").concat(theme.inverseColor || 'inherit', "}\n\n.dKjcB_fFDe .dKjcB_fKwc[value]::-webkit-progress-value{background:linear-gradient(90deg,").concat(theme.doneMeterColorStart || 'inherit', " 0%,").concat(theme.doneMeterColorEnd || 'inherit', ")}\n\n.dKjcB_fFDe .dKjcB_fKwc[value]::-moz-progress-bar{background:linear-gradient(90deg,").concat(theme.doneMeterColorStart || 'inherit', " 0%,").concat(theme.doneMeterColorEnd || 'inherit', ")}\n\n.dKjcB_fFDe .dKjcB_fKwc[value]::-ms-fill{background:linear-gradient(90deg,").concat(theme.doneMeterColorStart || 'inherit', " 0%,").concat(theme.doneMeterColorEnd || 'inherit', ")}");
  },
  'root': 'dKjcB_bGBk',
  'bar': 'dKjcB_fKwc',
  'value': 'dKjcB_fqzO',
  'slash': 'dKjcB_bpmu',
  'x-small': 'dKjcB_dfBC',
  'small': 'dKjcB_doqw',
  'medium': 'dKjcB_ycrn',
  'large': 'dKjcB_cMDj',
  'default': 'dKjcB_ddES',
  'inverse': 'dKjcB_enfx',
  'done': 'dKjcB_fFDe'
};
import theme from './theme';
/**
---
parent: DeprecatedProgress
id: DeprecatedProgressBar
---
**/

var ProgressBar = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(ProgressBar, _Component);

  var _super = _createSuper(ProgressBar);

  function ProgressBar() {
    _classCallCheck(this, ProgressBar);

    return _super.apply(this, arguments);
  }

  _createClass(ProgressBar, [{
    key: "render",
    value: function render() {
      var _classes;

      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles[this.props.size], true), _defineProperty(_classes, styles[this.props.variant], true), _defineProperty(_classes, styles.done, this.props.successColor && this.props.valueNow / this.props.valueMax >= 1), _classes);
      var _this$props = this.props,
          formatDisplayedValue = _this$props.formatDisplayedValue,
          formatValueText = _this$props.formatValueText,
          valueNow = _this$props.valueNow,
          valueMax = _this$props.valueMax,
          label = _this$props.label;
      var valueText = formatValueText(valueNow, valueMax);
      var value = typeof formatDisplayedValue === 'function' && formatDisplayedValue(valueNow, valueMax);
      var passthroughProps = View.omitViewProps(omitProps(this.props, ProgressBar.propTypes, ['animateOnMount']), ProgressBar);
      /* eslint-disable jsx-a11y/no-redundant-roles, jsx-a11y/no-noninteractive-element-to-interactive-role */

      return /*#__PURE__*/React.createElement(View, Object.assign({}, passthroughProps, {
        as: this.props.as,
        className: classnames(classes),
        margin: this.props.margin,
        elementRef: this.props.elementRef
      }), /*#__PURE__*/React.createElement("progress", {
        className: styles.bar,
        max: valueMax,
        value: valueNow,
        role: "progressbar",
        "aria-valuetext": valueText,
        "aria-valuenow": valueNow,
        "aria-valuemax": valueMax,
        "aria-label": label
      }), value && /*#__PURE__*/React.createElement("span", {
        className: styles.value,
        "aria-hidden": "true"
      }, value));
      /* eslint-enable jsx-a11y/no-redundant-roles, jsx-a11y/no-noninteractive-element-to-interactive-role */
    }
  }]);

  ProgressBar.displayName = "ProgressBar";
  return ProgressBar;
}(Component), _class2.propTypes = {
  /**
  * A label is required for accessibility
  */
  label: PropTypes.string.isRequired,

  /**
  * Different-sized progress bars and circles
  */
  size: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),

  /**
  * Maximum value (defaults to 100)
  */
  valueMax: PropTypes.number,

  /**
  * Receives the progress of the event
  */
  valueNow: PropTypes.number,

  /**
  * A function that returns the current value formatted for screen readers
  */
  formatValueText: PropTypes.func,

  /**
  * A function to format the displayed value. If null the value will not display.
  */
  formatDisplayedValue: PropTypes.func,

  /**
  * The bar changes to your theme's success color when complete
  */
  successColor: PropTypes.bool,

  /**
  * Choose either a progress bar or circle. The `-inverse` variants are for
  * when you need the Progress component to appear on inverse backgrounds
  */
  variant: PropTypes.oneOf(['default', 'inverse']),

  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: ThemeablePropTypes.spacing,
  elementRef: PropTypes.func,
  as: PropTypes.elementType
}, _class2.defaultProps = {
  formatValueText: function formatValueText(valueNow, valueMax) {
    return "".concat(valueNow, " / ").concat(valueMax);
  },
  size: 'medium',
  valueMax: 100,
  valueNow: 0,
  variant: 'default',
  successColor: true,
  as: 'div',
  formatDisplayedValue: void 0,
  margin: void 0,
  elementRef: void 0
}, _temp)) || _class);
export default ProgressBar;
export { ProgressBar };