import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _dec3, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import { Children } from '@instructure/ui-prop-types';
import { themeable } from '@instructure/ui-themeable';
import { testable } from '@instructure/ui-testable';
import { omitProps, deprecated } from '@instructure/ui-react-utils';
import { MetricsListItem } from './MetricsListItem';
var styles = {
  componentId: 'cxVYj',
  template: function template(theme) {
    return "\n\n.cxVYj_bGBk{align-items:flex-start;box-sizing:border-box;color:".concat(theme.color || 'inherit', ";display:flex;flex-wrap:wrap;justify-content:space-around;line-height:").concat(theme.lineHeight || 'inherit', "}");
  },
  'root': 'cxVYj_bGBk'
};
import theme from './theme';
/**
---
category: components/deprecated
id: DeprecatedMetricsList
---
**/

var MetricsList = (_dec = deprecated('7.0.0', null, 'Use MetricsList from ui-metric instead.'), _dec2 = testable(), _dec3 = themeable(theme, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(MetricsList, _Component);

  var _super = _createSuper(MetricsList);

  function MetricsList() {
    _classCallCheck(this, MetricsList);

    return _super.apply(this, arguments);
  }

  _createClass(MetricsList, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement("div", Object.assign({}, omitProps(this.props, MetricsList.propTypes), {
        className: styles.root,
        role: "grid",
        "aria-readonly": "true"
      }), this.props.children);
    }
  }]);

  MetricsList.displayName = "MetricsList";
  return MetricsList;
}(Component), _class2.propTypes = {
  /**
  * children of type `MetricsList.Item`
  */
  children: Children.oneOf([MetricsListItem])
}, _class2.defaultProps = {
  children: null
}, _class2.Item = MetricsListItem, _temp)) || _class) || _class) || _class);
export default MetricsList;
export { MetricsList, MetricsListItem };