"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Avatar = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _View = require("@instructure/ui-view/lib/View");

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _ThemeablePropTypes = require("@instructure/ui-themeable/lib/ThemeablePropTypes.js");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _deprecated = require("@instructure/ui-react-utils/lib/deprecated.js");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _dec2, _dec3, _class, _class2, _temp;

var styles = {
  componentId: 'bbhNB',
  template: function template(theme) {
    return "\n\n.bbhNB_bGBk{background-clip:content-box;background-color:".concat(theme.background || 'inherit', ";background-position:50%;background-repeat:no-repeat;background-size:cover;border-color:").concat(theme.borderColor || 'inherit', ";border-style:solid;box-sizing:border-box;height:2.5em;line-height:0;overflow:hidden;text-align:center}\n\n[dir=ltr] .bbhNB_bGBk,[dir=rtl] .bbhNB_bGBk{text-align:center}\n\n.bbhNB_bGBk.bbhNB_uUeq{font-size:inherit}\n\n.bbhNB_bGBk.bbhNB_uUeq,.bbhNB_bGBk.bbhNB_dfBC{border-width:").concat(theme.borderWidthSmall || 'inherit', "}\n\n.bbhNB_bGBk.bbhNB_dfBC{font-size:0.75rem}\n\n.bbhNB_bGBk.bbhNB_doqw{border-width:").concat(theme.borderWidthSmall || 'inherit', ";font-size:1rem}\n\n.bbhNB_bGBk.bbhNB_ycrn{font-size:1.25rem}\n\n.bbhNB_bGBk.bbhNB_cMDj,.bbhNB_bGBk.bbhNB_ycrn{border-width:").concat(theme.borderWidthMedium || 'inherit', "}\n\n.bbhNB_bGBk.bbhNB_cMDj{font-size:1.5rem}\n\n.bbhNB_bGBk.bbhNB_eoMd{border-width:").concat(theme.borderWidthMedium || 'inherit', ";font-size:1.75rem}\n\n.bbhNB_eYKj{color:").concat(theme.color || 'inherit', ";font-family:").concat(theme.fontFamily || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";letter-spacing:0.0313em;line-height:2.375em}\n\n.bbhNB_MrJH{display:none}\n\n.bbhNB_cJVF{border-radius:100%;overflow:hidden;position:relative;width:2.5em}\n\n.bbhNB_bRWf{width:3em}");
  },
  'root': 'bbhNB_bGBk',
  'auto': 'bbhNB_uUeq',
  'x-small': 'bbhNB_dfBC',
  'small': 'bbhNB_doqw',
  'medium': 'bbhNB_ycrn',
  'large': 'bbhNB_cMDj',
  'x-large': 'bbhNB_eoMd',
  'initials': 'bbhNB_eYKj',
  'loadImage': 'bbhNB_MrJH',
  'circle': 'bbhNB_cJVF',
  'rectangle': 'bbhNB_bRWf'
};

/**
---
category: components/deprecated
id: DeprecatedAvatar
---
**/
var Avatar = (_dec = (0, _deprecated.deprecated)('7.0.0', null, 'Use Avatar from ui-avatar instead.'), _dec2 = (0, _testable.testable)(), _dec3 = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Avatar, _Component);

  var _super = (0, _createSuper2.default)(Avatar);

  function Avatar() {
    var _this;

    (0, _classCallCheck2.default)(this, Avatar);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      loaded: false
    };

    _this.handleImageLoaded = function (event) {
      _this.setState({
        loaded: true
      });

      _this.props.onImageLoaded(event);
    };

    return _this;
  }

  (0, _createClass2.default)(Avatar, [{
    key: "makeInitialsFromName",
    value: function makeInitialsFromName() {
      var name = this.props.name;

      if (!name || typeof name !== 'string') {
        return;
      }

      name = name.trim();

      if (name.length === 0) {
        return;
      }

      if (name.match(/\s+/)) {
        var names = name.split(/\s+/);
        return (names[0][0] + names[names.length - 1][0]).toUpperCase();
      } else {
        return name[0].toUpperCase();
      }
    }
  }, {
    key: "renderLoadImage",
    value: function renderLoadImage() {
      // This image element is visually hidden and is here for loading purposes only
      return /*#__PURE__*/_react.default.createElement("img", {
        src: this.props.src,
        className: styles.loadImage,
        alt: this.props.alt,
        onLoad: this.handleImageLoaded,
        "aria-hidden": "true"
      });
    }
  }, {
    key: "renderInitials",
    value: function renderInitials() {
      return /*#__PURE__*/_react.default.createElement("span", {
        className: styles.initials,
        "aria-hidden": "true"
      }, this.makeInitialsFromName());
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      var passthroughProps = _View.View.omitViewProps((0, _omitProps.omitProps)(this.props, Avatar.propTypes), Avatar);

      return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, passthroughProps, {
        style: {
          backgroundImage: this.state.loaded ? "url('".concat(this.props.src, "')") : void 0
        },
        className: (0, _classnames2.default)((_classnames = {}, (0, _defineProperty2.default)(_classnames, styles.root, true), (0, _defineProperty2.default)(_classnames, styles[this.props.size], true), (0, _defineProperty2.default)(_classnames, styles[this.props.variant], true), _classnames)),
        "aria-label": this.props.alt ? this.props.alt : null,
        role: this.props.alt ? 'img' : null,
        as: this.props.as,
        elementRef: this.props.elementRef,
        margin: this.props.margin,
        display: this.props.inline ? 'inline-block' : 'block'
      }), this.renderLoadImage(), !this.state.loaded && this.renderInitials());
    }
  }]);
  Avatar.displayName = "Avatar";
  return Avatar;
}(_react.Component), _class2.propTypes = {
  name: _propTypes.default.string.isRequired,

  /*
  * URL of the image to display as the background image
  */
  src: _propTypes.default.string,

  /*
  * Accessible label
  */
  alt: _propTypes.default.string,
  size: _propTypes.default.oneOf(['auto', 'x-small', 'small', 'medium', 'large', 'x-large']),
  variant: _propTypes.default.oneOf(['circle', 'rectangle']),

  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: _ThemeablePropTypes.ThemeablePropTypes.spacing,
  inline: _propTypes.default.bool,

  /**
  * Callback fired when the avatar image has loaded
  */
  onImageLoaded: _propTypes.default.func,

  /**
  * the element type to render as
  */
  as: _propTypes.default.elementType,
  // eslint-disable-line react/require-default-props

  /**
  * provides a reference to the underlying html element
  */
  elementRef: _propTypes.default.func
}, _class2.defaultProps = {
  src: void 0,
  alt: void 0,
  margin: void 0,
  elementRef: void 0,
  size: 'medium',
  variant: 'circle',
  inline: true,
  onImageLoaded: function onImageLoaded(event) {}
}, _temp)) || _class) || _class) || _class);
exports.Avatar = Avatar;
var _default = Avatar;
exports.default = _default;