"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CloseButton = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _console = require("@instructure/console");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _IconXSolid = require("@instructure/ui-icons/lib/IconXSolid");

var _ScreenReaderContent = require("@instructure/ui-a11y-content/lib/ScreenReaderContent");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _ThemeablePropTypes = require("@instructure/ui-themeable/lib/ThemeablePropTypes.js");

var _getInteraction = require("@instructure/ui-react-utils/lib/getInteraction.js");

var _passthroughProps = require("@instructure/ui-react-utils/lib/passthroughProps.js");

var _deprecated = require("@instructure/ui-react-utils/lib/deprecated.js");

var _BaseButton = require("../BaseButton");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _dec2, _dec3, _class, _class2, _temp;

var styles = {
  componentId: 'ejhDx',
  template: function template(theme) {
    return "\n\n.ejhDx_bGBk{display:inline-block;z-index:".concat(theme.zIndex || 'inherit', "}\n\n.ejhDx_doBn{position:static}\n\n.ejhDx_bQpq,.ejhDx_bxia{position:absolute}\n\n.ejhDx_coHh{top:").concat(theme.offsetXSmall || 'inherit', "}\n\n.ejhDx_cDib{top:").concat(theme.offsetSmall || 'inherit', "}\n\n.ejhDx_faeR{top:").concat(theme.offsetMedium || 'inherit', "}\n\n.ejhDx_bQpq{inset-inline-end:0;inset-inline-start:auto}\n\n[dir=ltr] .ejhDx_bQpq{left:auto;right:0}\n\n[dir=rtl] .ejhDx_bQpq{left:0;right:auto}\n\n.ejhDx_bQpq.ejhDx_coHh{inset-inline-end:").concat(theme.offsetXSmall || 'inherit', ";inset-inline-start:auto}\n\n[dir=ltr] .ejhDx_bQpq.ejhDx_coHh{left:auto;right:").concat(theme.offsetXSmall || 'inherit', "}\n\n[dir=rtl] .ejhDx_bQpq.ejhDx_coHh{left:").concat(theme.offsetXSmall || 'inherit', ";right:auto}\n\n.ejhDx_bQpq.ejhDx_cDib{inset-inline-end:").concat(theme.offsetSmall || 'inherit', ";inset-inline-start:auto}\n\n[dir=ltr] .ejhDx_bQpq.ejhDx_cDib{left:auto;right:").concat(theme.offsetSmall || 'inherit', "}\n\n[dir=rtl] .ejhDx_bQpq.ejhDx_cDib{left:").concat(theme.offsetSmall || 'inherit', ";right:auto}\n\n.ejhDx_bQpq.ejhDx_faeR{inset-inline-end:").concat(theme.offsetMedium || 'inherit', ";inset-inline-start:auto}\n\n[dir=ltr] .ejhDx_bQpq.ejhDx_faeR{left:auto;right:").concat(theme.offsetMedium || 'inherit', "}\n\n[dir=rtl] .ejhDx_bQpq.ejhDx_faeR{left:").concat(theme.offsetMedium || 'inherit', ";right:auto}\n\n.ejhDx_bxia{inset-inline-end:auto;inset-inline-start:0}\n\n[dir=ltr] .ejhDx_bxia{left:0;right:auto}\n\n[dir=rtl] .ejhDx_bxia{left:auto;right:0}\n\n.ejhDx_bxia.ejhDx_coHh{inset-inline-end:auto;inset-inline-start:").concat(theme.offsetXSmall || 'inherit', "}\n\n[dir=ltr] .ejhDx_bxia.ejhDx_coHh{left:").concat(theme.offsetXSmall || 'inherit', ";right:auto}\n\n[dir=rtl] .ejhDx_bxia.ejhDx_coHh{left:auto;right:").concat(theme.offsetXSmall || 'inherit', "}\n\n.ejhDx_bxia.ejhDx_cDib{inset-inline-end:auto;inset-inline-start:").concat(theme.offsetSmall || 'inherit', "}\n\n[dir=ltr] .ejhDx_bxia.ejhDx_cDib{left:").concat(theme.offsetSmall || 'inherit', ";right:auto}\n\n[dir=rtl] .ejhDx_bxia.ejhDx_cDib{left:auto;right:").concat(theme.offsetSmall || 'inherit', "}\n\n.ejhDx_bxia.ejhDx_faeR{inset-inline-end:auto;inset-inline-start:").concat(theme.offsetMedium || 'inherit', "}\n\n[dir=ltr] .ejhDx_bxia.ejhDx_faeR{left:").concat(theme.offsetMedium || 'inherit', ";right:auto}\n\n[dir=rtl] .ejhDx_bxia.ejhDx_faeR{left:auto;right:").concat(theme.offsetMedium || 'inherit', "}");
  },
  'root': 'ejhDx_bGBk',
  'placement--static': 'ejhDx_doBn',
  'placement--end': 'ejhDx_bQpq',
  'placement--start': 'ejhDx_bxia',
  'offset--x-small': 'ejhDx_coHh',
  'offset--small': 'ejhDx_cDib',
  'offset--medium': 'ejhDx_faeR'
};

/**
---
category: components
---
**/
var CloseButton = (_dec = (0, _deprecated.deprecated)('8.0.0', {
  children: 'screenReaderLabel',
  buttonRef: 'elementRef',
  variant: 'color'
}), _dec2 = (0, _testable.testable)(), _dec3 = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(CloseButton, _Component);

  var _super = (0, _createSuper2.default)(CloseButton);

  function CloseButton() {
    (0, _classCallCheck2.default)(this, CloseButton);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(CloseButton, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      /*#__PURE__*/
      ( /*#__PURE__*/0, _console.error)(this.props.screenReaderLabel || this.props.children, "[CloseButton] The `screenReaderLabel` prop is required but was not provided.");
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      /*#__PURE__*/
      ( /*#__PURE__*/0, _console.error)(this.props.screenReaderLabel || this.props.children, "[CloseButton] The `screenReaderLabel` prop is required but was not provided.");
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      var _this$props = this.props,
          children = _this$props.children,
          screenReaderLabel = _this$props.screenReaderLabel,
          elementRef = _this$props.elementRef,
          buttonRef = _this$props.buttonRef,
          size = _this$props.size,
          onClick = _this$props.onClick,
          margin = _this$props.margin,
          placement = _this$props.placement,
          offset = _this$props.offset,
          type = _this$props.type,
          as = _this$props.as,
          href = _this$props.href,
          cursor = _this$props.cursor,
          tabIndex = _this$props.tabIndex,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["children", "screenReaderLabel", "elementRef", "buttonRef", "size", "onClick", "margin", "placement", "offset", "type", "as", "href", "cursor", "tabIndex"]);
      return /*#__PURE__*/_react.default.createElement("span", Object.assign({}, (0, _passthroughProps.passthroughProps)(props), {
        className: (0, _classnames2.default)((_classnames = {}, (0, _defineProperty2.default)(_classnames, styles.root, true), (0, _defineProperty2.default)(_classnames, styles["placement--".concat(placement)], placement), (0, _defineProperty2.default)(_classnames, styles["offset--".concat(offset)], offset), _classnames))
      }), /*#__PURE__*/_react.default.createElement(_BaseButton.BaseButton, {
        renderIcon: _IconXSolid.IconXSolid,
        elementRef: elementRef || buttonRef,
        interaction: this.interaction,
        type: type,
        color: this.color,
        size: size,
        onClick: onClick,
        margin: margin,
        withBorder: false,
        withBackground: false,
        as: as,
        href: href,
        cursor: cursor,
        tabIndex: tabIndex,
        __dangerouslyIgnoreExperimentalWarnings: true
      }, /*#__PURE__*/_react.default.createElement(_ScreenReaderContent.ScreenReaderContent, null, screenReaderLabel || children)));
    }
  }, {
    key: "interaction",
    get: function get() {
      return (0, _getInteraction.getInteraction)({
        props: this.props
      });
    }
  }, {
    key: "color",
    get: function get() {
      var _this$props2 = this.props,
          color = _this$props2.color,
          variant = _this$props2.variant;
      if (variant === 'icon-inverse' || color === 'primary-inverse') return 'primary-inverse';
      return 'secondary';
    }
  }]);
  CloseButton.displayName = "CloseButton";
  return CloseButton;
}(_react.Component), _class2.propTypes = {
  /**
  * An accessible label for the `CloseButton` (required)
  */
  screenReaderLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),
  // CloseButton could previously accept node children, loosening this type for backwards compatibility

  /**
  * Specifies the color for the `CloseButton`.
  */
  color: _propTypes.default.oneOf(['primary', 'primary-inverse']),

  /**
  * Specifies if interaction with the `CloseButton` is enabled, disabled, or readonly.
  */
  interaction: _propTypes.default.oneOf(['enabled', 'disabled', 'readonly']),

  /**
  * Provides a reference to the `CloseButton`'s underlying html element.
  */
  elementRef: _propTypes.default.func,

  /**
  * The size of the `CloseButton`
  */
  size: _propTypes.default.oneOf(['small', 'medium', 'large']),

  /**
  * Callback fired when the `CloseButton` is clicked.
  */
  onClick: _propTypes.default.func,

  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: _ThemeablePropTypes.ThemeablePropTypes.spacing,

  /**
  * Specifies the placement of the `CloseButton`
  */
  placement: _propTypes.default.oneOf(['start', 'end', 'static']),

  /**
  * Specifies the offset distance for the `CloseButton` with respect to both the top and start/end of the container.
  * Note that for this property to have an effect, the `placement` prop must be set to either `start` or `end`. The
  * offset will also be created with respect to a positioned parent. If it does not appear to be working, try setting
  * the `position` of the parent container to `relative`.
  */
  offset: _propTypes.default.oneOf(['none', 'x-small', 'small', 'medium']),

  /**
  * Specifies the type of the `Button`'s underlying html element.
  */
  type: _propTypes.default.oneOf(['button', 'submit', 'reset']),

  /**
  * The element to render as the component root, `CloseButton` by default.
  */
  as: _propTypes.default.elementType,

  /**
  * Specifies an href attribute for the `CloseButton`'s underlying html element.
  */
  href: _propTypes.default.string,

  /**
   * Specify a mouse cursor to use when hovering over the `CloseButton`.
   */
  cursor: _propTypes.default.string,

  /**
  * Specifies the tabindex of the `CloseButton`.
  */
  tabIndex: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),

  /**
  * __Deprecated - use `screenReaderLabel` instead__
  */
  children: _propTypes.default.node,

  /**
  * __Deprecated - use `elementRef` instead__
  */
  buttonRef: _propTypes.default.func,

  /**
  * __Deprecated - use `color` instead__
  */
  variant: _propTypes.default.oneOf(['icon', 'icon-inverse'])
}, _class2.defaultProps = {
  screenReaderLabel: void 0,
  children: void 0,
  onClick: function onClick(event) {},
  elementRef: void 0,
  buttonRef: void 0,
  variant: void 0,
  color: void 0,
  // Leave interaction default undefined so that `disabled` and `readOnly` can also be supplied
  interaction: void 0,
  disabled: void 0,
  readOnly: void 0,
  type: 'button',
  placement: 'static',
  offset: 'x-small',
  size: 'small',
  margin: '0',
  as: 'button',
  href: void 0,
  cursor: 'pointer',
  tabIndex: void 0
}, _temp)) || _class) || _class) || _class);
exports.CloseButton = CloseButton;
var _default = CloseButton;
exports.default = _default;