"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Portal = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _element = require("@instructure/ui-prop-types/lib/element.js");

var _ReactPortal = require("./ReactPortal");

var _SubtreePortal = require("./SubtreePortal");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var IS_CREATE_PORTAL_SUPPORTED = typeof _reactDom.default.createPortal === 'function';
/**
---
category: components/utilities
---
@module Portal
**/

var Portal = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Portal, _Component);

  var _super = (0, _createSuper2.default)(Portal);

  function Portal() {
    var _this;

    (0, _classCallCheck2.default)(this, Portal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.handleElementRef = function (el) {
      if (el) {
        _this.DOMNode = el;

        if (typeof _this.props.elementRef === 'function') {
          _this.props.elementRef(el);
        }
      }
    };

    return _this;
  }

  (0, _createClass2.default)(Portal, [{
    key: "render",
    value: function render() {
      return IS_CREATE_PORTAL_SUPPORTED ? /*#__PURE__*/_react.default.createElement(_ReactPortal.ReactPortal, Object.assign({}, this.props, {
        elementRef: this.handleElementRef
      })) : /*#__PURE__*/_react.default.createElement(_SubtreePortal.SubtreePortal, Object.assign({}, this.props, {
        elementRef: this.handleElementRef
      }));
    }
  }]);
  Portal.displayName = "Portal";
  return Portal;
}(_react.Component);

exports.Portal = Portal;
Portal.propTypes = {
  /**
   * Wheter or not the `<Portal />` is open
   */
  open: _propTypes.default.bool,

  /**
   * Callback fired when `<Portal />` content has been mounted in the DOM
   */
  onOpen: _propTypes.default.func,

  /**
   * Callback fired when `<Portal />` has been unmounted from the DOM
   */
  onClose: _propTypes.default.func,

  /**
   * An element or a function returning an element to use as the mount node
   * for the `<Portal />` (defaults to `document.body`)
   */
  mountNode: _propTypes.default.oneOfType([_element.element, _propTypes.default.func]),

  /**
   * Insert the element at the 'top' of the mountNode or at the 'bottom'
   */
  insertAt: _propTypes.default.oneOf(['bottom', 'top']),

  /**
   * The children to be rendered within the `<Portal />`
   */
  children: _propTypes.default.node,

  /**
  * provides a reference to the underlying html element
  */
  elementRef: _propTypes.default.func
};
Portal.defaultProps = {
  open: false,
  insertAt: 'bottom',
  onOpen: function onOpen(DOMNode) {},
  onClose: function onClose() {},
  mountNode: null,
  children: null,
  elementRef: function elementRef(el) {}
};
var _default = Portal;
exports.default = _default;