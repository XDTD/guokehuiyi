"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bidirectional = exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _decorator = require("@instructure/ui-decorator/lib/decorator.js");

var _TextDirectionContext = require("./TextDirectionContext");

var _getTextDirection = require("./getTextDirection");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var DIRECTION = _TextDirectionContext.TextDirectionContext.DIRECTION,
    getTextDirectionContext = _TextDirectionContext.TextDirectionContext.getTextDirectionContext;
/**
* ---
* category: utilities/i18n
* ---
* A decorator or higher order component that makes a component `bidirectional`.
*
* As a HOC:
*
* ```js
* import { bidirectional } from '@instructure/ui-i18n'
*
* class Example extends React.Component {
*   render () {
*     return this.dir === bidirectional.DIRECTION.rtl ? <div>rtl</div> : <div>ltr</div>
*   }
* }
*
* export default bidirectional()(Example)
* ```
*
* When used as a child of [ApplyTextDirection](#ApplyTextDirection), bidirectional components use
* the direction provided in the context. When used without [ApplyTextDirection](#ApplyTextDirection),
* the direction can be supplied explicitly via the `dir` prop. If no `dir` prop is provided,
* bidirectional components query the documentElement for the `dir` attribute, defaulting to `ltr`
* if it is not present.
*
* @return {function} composes the bidirectional component.
*/

var bidirectional = (0, _decorator.decorator)(function (ComposedComponent) {
  var _class, _temp;

  return _temp = _class = /*#__PURE__*/function (_ComposedComponent) {
    (0, _inherits2.default)(BidirectionalComponent, _ComposedComponent);

    var _super = (0, _createSuper2.default)(BidirectionalComponent);

    function BidirectionalComponent() {
      (0, _classCallCheck2.default)(this, BidirectionalComponent);
      return _super.apply(this, arguments);
    }

    (0, _createClass2.default)(BidirectionalComponent, [{
      key: "dir",
      get: function get() {
        var context = getTextDirectionContext(this.context) || {};
        return context.dir || this.props.dir || (0, _getTextDirection.getTextDirection)();
      }
    }, {
      key: "rtl",
      get: function get() {
        return this.dir === DIRECTION.rtl;
      }
    }, {
      key: "ltr",
      get: function get() {
        return this.dir === DIRECTION.ltr;
      }
    }]);
    return BidirectionalComponent;
  }(ComposedComponent), _class.propTypes = (0, _objectSpread2.default)({}, ComposedComponent.propTypes, {
    dir: _propTypes.default.oneOf(Object.values(_TextDirectionContext.TextDirectionContext.DIRECTION))
  }), _class.contextTypes = (0, _objectSpread2.default)({}, ComposedComponent.contextTypes, {}, _TextDirectionContext.TextDirectionContext.types), _temp;
});
exports.bidirectional = bidirectional;
bidirectional.DIRECTION = DIRECTION;
var _default = bidirectional;
exports.default = _default;