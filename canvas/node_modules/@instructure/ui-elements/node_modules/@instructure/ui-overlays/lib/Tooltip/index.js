"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tooltip = exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _PositionPropTypes = require("@instructure/ui-position/lib/PositionPropTypes.js");

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _deprecated = require("@instructure/ui-react-utils/lib/deprecated.js");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _Tooltip = require("@instructure/ui-tooltip/lib/Tooltip");

var _element = require("@instructure/ui-prop-types/lib/element.js");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _dec2, _dec3, _class, _class2, _temp;

var styles = {
  componentId: 'eZLSb',
  template: function template(theme) {
    return "\n\n.eZLSb_bGBk{box-sizing:border-box;display:block;font-family:".concat(theme.fontFamily || 'inherit', ";font-size:").concat(theme.fontSize || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";padding:").concat(theme.padding || 'inherit', "}");
  },
  'root': 'eZLSb_bGBk'
};

/**
---
category: components/deprecated
id: DeprecatedTooltip
---
**/
var Tooltip = (_dec = (0, _deprecated.deprecated)('7.0.0', null, 'Use Tooltip from ui-tooltip instead.'), _dec2 = (0, _testable.testable)(), _dec3 = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Tooltip, _Component);

  var _super = (0, _createSuper2.default)(Tooltip);

  function Tooltip() {
    (0, _classCallCheck2.default)(this, Tooltip);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Tooltip, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          tip = _this$props.tip,
          variant = _this$props.variant,
          on = _this$props.on,
          placement = _this$props.placement,
          mountNode = _this$props.mountNode,
          positionTarget = _this$props.positionTarget,
          constrain = _this$props.constrain,
          passthroughProps = (0, _objectWithoutProperties2.default)(_this$props, ["children", "tip", "variant", "on", "placement", "mountNode", "positionTarget", "constrain"]);
      return /*#__PURE__*/_react.default.createElement(_Tooltip.Tooltip, Object.assign({}, passthroughProps, {
        renderTip: tip,
        on: on,
        color: variant === 'inverse' ? 'primary' : 'primary-inverse',
        placement: placement,
        mountNode: mountNode,
        positionTarget: positionTarget,
        constrain: constrain
      }), children);
    }
  }]);
  Tooltip.displayName = "Tooltip";
  return Tooltip;
}(_react.Component), _class2.propTypes = {
  /**
  * @param {Object} renderProps
  * @param {Boolean} renderProps.focused - Is the Tooltip trigger focused?
  * @param {Function} renderProps.getTriggerProps - Props to be spread onto the trigger element
  */
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]).isRequired,
  tip: _propTypes.default.node.isRequired,

  /**
  * the element type to render as (assumes a single child if 'as' is undefined)
  */
  as: _propTypes.default.elementType,
  // eslint-disable-line react/require-default-props

  /**
   * The action that causes the Content to display (`click`, `hover`, `focus`)
   */
  on: _propTypes.default.oneOfType([_propTypes.default.oneOf(['click', 'hover', 'focus']), _propTypes.default.arrayOf(_propTypes.default.oneOf(['click', 'hover', 'focus']))]),
  variant: _propTypes.default.oneOf(['default', 'inverse']),

  /**
   * Specifies where the Tooltip will be placed in relation to the target element.
   * Ex. placement="bottom" will render the Tooltip below the triggering element
   * (Note: if there is not room, it will position opposite. Ex. "top" will
   * automatically switch to "bottom").
   */
  placement: _PositionPropTypes.PositionPropTypes.placement,

  /**
   * An element or a function returning an element to use as the mount node
   * for the `<Tooltip />` (defaults to `document.body`)
   */
  mountNode: _PositionPropTypes.PositionPropTypes.mountNode,

  /**
   * Target element for positioning the Tooltip (if it differs from children/trigger)
   */
  positionTarget: _propTypes.default.oneOfType([_element.element, _propTypes.default.func]),

  /**
   * The parent in which to constrain the tooltip.
   * One of: 'window', 'scroll-parent', 'parent', 'none', an element,
   * or a function returning an element
   */
  constrain: _PositionPropTypes.PositionPropTypes.constrain
}, _class2.defaultProps = {
  on: void 0,
  variant: 'inverse',
  placement: 'top',
  mountNode: null,
  positionTarget: void 0,
  constrain: 'window'
}, _temp)) || _class) || _class) || _class);
exports.Tooltip = Tooltip;
var _default = Tooltip;
exports.default = _default;