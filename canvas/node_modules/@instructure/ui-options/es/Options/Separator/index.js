import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { getElementType } from '@instructure/ui-react-utils';
import { themeable } from '@instructure/ui-themeable';
var styles = {
  componentId: 'clioX',
  template: function template(theme) {
    return "\n\n.clioX_fatK{background:".concat(theme.background || 'inherit', ";height:").concat(theme.height || 'inherit', ";margin:").concat(theme.margin || 'inherit', ";overflow:hidden}");
  },
  'separator': 'clioX_fatK'
};
import theme from "./theme.js";
/**
---
parent: Options
id: Options.Separator
---
@module Separator
**/

var Separator = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Separator, _Component);

  var _super = _createSuper(Separator);

  function Separator() {
    _classCallCheck(this, Separator);

    return _super.apply(this, arguments);
  }

  _createClass(Separator, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          as = _this$props.as,
          rest = _objectWithoutProperties(_this$props, ["as"]);

      var ElementType = getElementType(Separator, this.props, function () {
        return as;
      });
      return /*#__PURE__*/React.createElement(ElementType, {
        role: "none"
      }, /*#__PURE__*/React.createElement("div", Object.assign({}, rest, {
        className: styles.separator,
        role: "presentation"
      })));
    }
  }]);

  Separator.displayName = "Separator";
  return Separator;
}(Component), _class2.propTypes = {
  /**
   * Element type to render as
   */
  as: PropTypes.elementType
}, _class2.defaultProps = {
  as: 'span'
}, _temp)) || _class);
export default Separator;
export { Separator };