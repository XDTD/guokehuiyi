"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Options = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _uiPropTypes = require("@instructure/ui-prop-types");

var _uiReactUtils = require("@instructure/ui-react-utils");

var _uiThemeable = require("@instructure/ui-themeable");

var _uiTestable = require("@instructure/ui-testable");

var _uid = require("@instructure/uid");

var _uiView = require("@instructure/ui-view");

var _index = require("./Item/index.js");

var _index2 = require("./Separator/index.js");

var _theme = _interopRequireDefault(require("./theme.js"));

var _dec, _dec2, _class, _class2, _temp;

var styles = {
  componentId: 'ctdXH',
  template: function template(theme) {
    return "\n\n.ctdXH_bGBk{box-sizing:border-box;word-wrap:break-word}\n\n.ctdXH_cpmC{list-style-type:none;position:relative}\n\n.ctdXH_blJt{color:".concat(theme.labelColor || 'inherit', ";cursor:default;display:block;font-weight:").concat(theme.labelFontWeight || 'inherit', ";padding:").concat(theme.nestedLabelPadding || 'inherit', "}");
  },
  'root': 'ctdXH_bGBk',
  'list': 'ctdXH_cpmC',
  'label': 'ctdXH_blJt'
};

/**
---
category: components
---
**/
var Options = (_dec = (0, _uiTestable.testable)(), _dec2 = (0, _uiThemeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Options, _Component);

  var _super = (0, _createSuper2.default)(Options);

  function Options() {
    var _this;

    (0, _classCallCheck2.default)(this, Options);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this._labelId = (0, _uid.uid)('Options-label');
    return _this;
  }

  (0, _createClass2.default)(Options, [{
    key: "renderLabel",
    value: function renderLabel() {
      var renderLabel = this.props.renderLabel;
      return /*#__PURE__*/_react.default.createElement("span", {
        id: this._labelId,
        role: "presentation",
        "aria-hidden": "true",
        className: (0, _classnames2.default)((0, _defineProperty2.default)({}, styles.label, true))
      }, (0, _uiReactUtils.callRenderProp)(renderLabel));
    }
  }, {
    key: "renderSubList",
    value: function renderSubList(children) {
      return /*#__PURE__*/_react.default.createElement(_index.Item, {
        as: this.childAs,
        role: "presentation",
        className: styles.label
      }, children);
    }
  }, {
    key: "renderChildren",
    value: function renderChildren() {
      var _this2 = this;

      var children = this.props.children;
      return _react.Children.map(children, function (child) {
        if ((0, _uiReactUtils.matchComponentTypes)(child, ['Options'])) {
          return _this2.renderSubList(child);
        }

        if ((0, _uiReactUtils.matchComponentTypes)(child, ['Item', 'Separator'])) {
          return (0, _uiReactUtils.safeCloneElement)(child, {
            as: _this2.childAs
          });
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var passthroughProps = _uiView.View.omitViewProps((0, _uiReactUtils.omitProps)(this.props, Options.propTypes), Options);

      var _this$props = this.props,
          as = _this$props.as,
          role = _this$props.role,
          elementRef = _this$props.elementRef,
          renderLabel = _this$props.renderLabel;
      return /*#__PURE__*/_react.default.createElement("div", {
        className: styles.root,
        role: "presentation"
      }, renderLabel && this.renderLabel(), /*#__PURE__*/_react.default.createElement(_uiView.View, Object.assign({}, passthroughProps, {
        elementRef: elementRef,
        className: styles.list,
        as: as,
        role: role,
        display: "block",
        margin: "none",
        padding: "none",
        background: "primary",
        "aria-labelledby": renderLabel && this._labelId
      }), this.renderChildren()));
    }
  }, {
    key: "childAs",
    get: function get() {
      var as = this.props.as;

      if (as === 'ul' || as === 'ol') {
        return 'li';
      }

      return void 0;
    }
  }]);
  Options.displayName = "Options";
  return Options;
}(_react.Component), _class2.Item = _index.Item, _class2.Separator = _index2.Separator, _class2.propTypes = {
  /**
   * Element type to render as
   */
  as: _propTypes.default.elementType,

  /**
   * The aria role of the element
   */
  role: _propTypes.default.string,

  /**
   * The the actual list element
   */
  elementRef: _propTypes.default.func,

  /**
   * Content to render as a label. Mostly for when the component is nested
   */
  renderLabel: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  children: _uiPropTypes.Children.oneOf(['Options', 'Item', 'Separator'])
}, _class2.defaultProps = {
  as: 'span',
  role: 'list',
  elementRef: function elementRef(node) {},
  renderLabel: null,
  children: null
}, _temp)) || _class) || _class);
exports.Options = Options;
var _default = Options;
exports.default = _default;