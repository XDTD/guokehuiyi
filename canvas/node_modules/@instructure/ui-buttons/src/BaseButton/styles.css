/* stylelint-disable selector-max-class, no-descending-specificity */

.content {
  box-sizing: border-box;
  width: 100%;
  display: block;
  direction: inherit;
  user-select: none;
  transition: background 0.2s, transform 0.2s;
  transform: var(--transform);
  font-family: var(--fontFamily);
  font-weight: var(--fontWeight);
  text-transform: var(--textTransform);
  letter-spacing: var(--letterSpacing);
  border-style: var(--borderStyle);
  border-width: var(--borderWidth);
  border-radius: var(--borderRadius);
  line-height: var(--lineHeight);

  &:hover {
    transform: var(--hoverTransform);
  }

  &.textAlign--start {
    text-align: start;
  }

  &.textAlign--center {
    text-align: center;
  }

  &.isCondensed {
    padding-left: 0; /* stylelint-disable-line property-blacklist */
    padding-right: 0; /* stylelint-disable-line property-blacklist */

    .children {
      padding-top: 0;
      padding-bottom: 0;
    }
  }
}

.isDisabled {
  opacity: 0.5;
}

.size--small {
  font-size: var(--smallFontSize);
  padding-left: var(--smallPaddingHorizontal); /* stylelint-disable-line property-blacklist */
  padding-right: var(--smallPaddingHorizontal); /* stylelint-disable-line property-blacklist */

  .children {
    padding-top: var(--smallPaddingTop);
    padding-bottom: var(--smallPaddingBottom);
  }

  .iconSVG {
    font-size: var(--iconSizeSmall);
  }

  &.hasOnlyIconVisible {
    padding-left: 0; /* stylelint-disable-line property-blacklist */
    padding-right: 0; /* stylelint-disable-line property-blacklist */
    height: var(--smallHeight);
    width: var(--smallHeight);
  }

  &.isCondensed {
    .iconSVG {
      font-size: var(--smallFontSize);
    }
  }
}

.size--medium {
  font-size: var(--mediumFontSize);
  padding-left: var(--mediumPaddingHorizontal); /* stylelint-disable-line property-blacklist */
  padding-right: var(--mediumPaddingHorizontal); /* stylelint-disable-line property-blacklist */

  .children {
    padding-top: var(--mediumPaddingTop);
    padding-bottom: var(--mediumPaddingBottom);
  }

  .iconSVG {
    font-size: var(--iconSizeMedium);
  }

  &.hasOnlyIconVisible {
    padding-left: 0; /* stylelint-disable-line property-blacklist */
    padding-right: 0; /* stylelint-disable-line property-blacklist */
    height: var(--mediumHeight);
    width: var(--mediumHeight);
  }

  &.isCondensed {
    .iconSVG {
      font-size: var(--mediumFontSize);
    }
  }
}

.size--large {
  font-size: var(--largeFontSize);
  padding-left: var(--largePaddingHorizontal); /* stylelint-disable-line property-blacklist */
  padding-right: var(--largePaddingHorizontal); /* stylelint-disable-line property-blacklist */

  .children {
    padding-top: var(--largePaddingTop);
    padding-bottom: var(--largePaddingBottom);
  }

  .iconSVG {
    font-size: var(--iconSizeLarge);
  }

  &.hasOnlyIconVisible {
    padding-left: 0; /* stylelint-disable-line property-blacklist */
    padding-right: 0; /* stylelint-disable-line property-blacklist */
    height: var(--largeHeight);
    width: var(--largeHeight);
  }

  &.isCondensed {
    .iconSVG {
      font-size: var(--largeFontSize);
    }
  }
}

.iconSVG {
  display: flex;
  align-items: center;
}

.children {
  display: block;
}

.hasOnlyIconVisible {
  line-height: 1;
}

.shape--circle {
  border-radius: 50%;
}

.withBackground {
  &.color--primary {
    color: var(--primaryColor);
    background: var(--primaryBackground);
    border-color: var(--primaryBorderColor);
  }

  &.color--secondary {
    color: var(--secondaryColor);
    background: var(--secondaryBackground);
    border-color: var(--secondaryBorderColor);
  }

  &.color--primary-inverse {
    color: var(--primaryInverseColor);
    background: var(--primaryInverseBackground);
    border-color: var(--primaryInverseBorderColor);
  }

  &.color--success {
    color: var(--successColor);
    background: var(--successBackground);
    border-color: var(--successBorderColor);
  }

  &.color--danger {
    color: var(--dangerColor);
    background: var(--dangerBackground);
    border-color: var(--dangerBorderColor);
  }
}

.withoutBackground {
  &.color--primary {
    color: var(--primaryGhostColor);
    border-color: var(--primaryGhostBorderColor);
    background: var(--primaryGhostBackground);
  }

  &.color--secondary {
    color: var(--secondaryGhostColor);
    border-color: var(--secondaryGhostBorderColor);
    background: var(--secondaryGhostBackground);
  }

  &.color--primary-inverse {
    color: var(--primaryInverseGhostColor);
    border-color: var(--primaryInverseGhostBorderColor);
    background: var(--primaryInverseGhostBackground);
  }

  &.color--success {
    color: var(--successGhostColor);
    border-color: var(--successGhostBorderColor);
    background: var(--successGhostBackground);
  }

  &.color--danger {
    color: var(--dangerGhostColor);
    border-color: var(--dangerGhostBorderColor);
    background: var(--dangerGhostBackground);
  }
}

.withoutBorder {
  border-style: none;
}

.root {
  appearance: none;
  text-decoration: none; /* for links styled as buttons */
  touch-action: manipulation;

  &::-moz-focus-inner {
    border: 0; /* removes default dotted focus outline in Firefox */
  }

  * { /* stylelint-disable-line selector-max-universal */
    pointer-events: none; /* Ensures that button or link is always the event target */
  }

  &:active {
    .content.withBackground.color--primary {
      background: var(--primaryActiveBackground);
      box-shadow: var(--primaryActiveBoxShadow);
    }

    .content.withBackground.color--secondary {
      background: var(--secondaryActiveBackground);
      box-shadow: var(--secondaryActiveBoxShadow);
    }

    .content.withBackground.color--primary-inverse {
      background: var(--primaryInverseActiveBackground);
      box-shadow: var(--primaryInverseActiveBoxShadow);
    }

    .content.withBackground.color--success {
      background: var(--successActiveBackground);
      box-shadow: var(--successActiveBoxShadow);
    }

    .content.withBackground.color--danger {
      background: var(--dangerActiveBackground);
      box-shadow: var(--dangerActiveBoxShadow);
    }

    .content.withoutBackground.color--primary {
      background: var(--primaryGhostActiveBackground);
      box-shadow: var(--primaryGhostActiveBoxShadow);
    }

    .content.withoutBackground.color--secondary {
      background: var(--secondaryGhostActiveBackground);
      box-shadow: var(--secondaryGhostActiveBoxShadow);
    }

    .content.withoutBackground.color--primary-inverse {
      background: var(--primaryInverseGhostActiveBackground);
      box-shadow: var(--primaryInverseGhostActiveBoxShadow);
    }

    .content.withoutBackground.color--success {
      background: var(--successGhostActiveBackground);
      box-shadow: var(--successGhostActiveBoxShadow);
    }

    .content.withoutBackground.color--danger {
      background: var(--dangerGhostActiveBackground);
      box-shadow: var(--dangerGhostActiveBoxShadow);
    }
  }

  &:hover {
    .withBackground.color--primary {
      background: var(--primaryHoverBackground);
    }

    .withBackground.color--secondary {
      background: var(--secondaryHoverBackground);
    }

    .withBackground.color--primary-inverse {
      background: var(--primaryInverseHoverBackground);
    }

    .withBackground.color--success {
      background: var(--successHoverBackground);
    }

    .withBackground.color--danger {
      background: var(--dangerHoverBackground);
    }

    .withoutBackground.color--primary {
      background: var(--primaryGhostHoverBackground);
    }

    .withoutBackground.color--secondary {
      background: var(--secondaryGhostHoverBackground);
    }

    .withoutBackground.color--primary-inverse {
      background: var(--primaryInverseGhostHoverBackground);
    }

    .withoutBackground.color--success {
      background: var(--successGhostHoverBackground);
    }

    .withoutBackground.color--danger {
      background: var(--dangerGhostHoverBackground);
    }
  }
}

/* stylelint-enable selector-max-class, no-descending-specificity */
