import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component, Children } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { themeable } from '@instructure/ui-themeable';
import { omitProps, matchComponentTypes, safeCloneElement } from '@instructure/ui-react-utils';
import { Children as ChildrenPropTypes } from '@instructure/ui-prop-types';
import { View } from '@instructure/ui-view';
import { ColHeader } from "../ColHeader/index.js";
import { RowHeader } from "../RowHeader/index.js";
import { Cell } from "../Cell/index.js";
var styles = {
  componentId: 'eIQkd',
  template: function template(theme) {
    return "\n\n.eIQkd_bGBk{background:".concat(theme.background || 'inherit', ";border-bottom-color:").concat(theme.borderColor || 'inherit', ";border-bottom-style:solid;border-bottom-width:0.0625rem;box-sizing:border-box;color:").concat(theme.color || 'inherit', ";font-family:").concat(theme.fontFamily || 'inherit', ";font-size:").concat(theme.fontSize || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', "}\n\n.eIQkd_fxsO{padding:").concat(theme.padding || 'inherit', "}\n\n.eIQkd_fKeI{border-left:0.1875rem solid transparent;border-right:0.1875rem solid transparent}\n\n.eIQkd_fKeI:hover{border-left-color:").concat(theme.hoverBorderColor || 'inherit', ";border-right-color:").concat(theme.hoverBorderColor || 'inherit', "}");
  },
  'root': 'eIQkd_bGBk',
  'stacked': 'eIQkd_fxsO',
  'hover': 'eIQkd_fKeI'
};
import theme from "./theme.js";
/**
---
parent: Table
id: Table.Row
---
**/

var Row = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Row, _Component);

  var _super = _createSuper(Row);

  function Row() {
    _classCallCheck(this, Row);

    return _super.apply(this, arguments);
  }

  _createClass(Row, [{
    key: "render",

    /* eslint-disable react/require-default-props */

    /* eslint-enable react/require-default-props */
    value: function render() {
      var _classnames;

      var _this$props = this.props,
          children = _this$props.children,
          hover = _this$props.hover,
          isStacked = _this$props.isStacked,
          headers = _this$props.headers;
      return /*#__PURE__*/React.createElement(View, Object.assign({}, View.omitViewProps(omitProps(this.props, Row.propTypes), Row), {
        as: isStacked ? 'div' : 'tr',
        className: classnames((_classnames = {}, _defineProperty(_classnames, styles.root, true), _defineProperty(_classnames, styles.hover, hover), _defineProperty(_classnames, styles.stacked, isStacked), _classnames)),
        role: isStacked ? 'row' : null
      }), Children.toArray(children).filter(Boolean).map(function (child, index) {
        if (matchComponentTypes(child, [ColHeader])) {
          return child;
        }

        if (matchComponentTypes(child, [RowHeader])) {
          return safeCloneElement(child, {
            key: child.props.name,
            isStacked: isStacked
          });
        }

        if (matchComponentTypes(child, [Cell])) {
          return safeCloneElement(child, {
            key: child.props.name,
            isStacked: isStacked,
            header: headers && headers[index]
          });
        }

        return null;
      }));
    }
  }]);

  Row.displayName = "Row";
  return Row;
}(Component), _class2.propTypes = {
  /**
   * `Table.ColHeader`, `Table.RowHeader` or `Table.Cell`
   */
  children: ChildrenPropTypes.oneOf([ColHeader, RowHeader, Cell]),
  hover: PropTypes.bool,
  isStacked: PropTypes.bool,
  headers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.node, PropTypes.func]))
}, _class2.defaultProps = {
  children: null
}, _temp)) || _class);
export default Row;
export { Row };