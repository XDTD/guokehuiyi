"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Cell = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _callRenderProp = require("@instructure/ui-react-utils/lib/callRenderProp.js");

var _View = require("@instructure/ui-view/lib/View");

var _theme = _interopRequireDefault(require("./theme.js"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'ccWIh',
  template: function template(theme) {
    return "\n\n.ccWIh_bGBk{background:".concat(theme.background || 'inherit', ";box-sizing:border-box;color:").concat(theme.color || 'inherit', ";font-family:").concat(theme.fontFamily || 'inherit', ";font-size:").concat(theme.fontSize || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";line-height:").concat(theme.lineHeight || 'inherit', ";padding:").concat(theme.padding || 'inherit', ";vertical-align:middle}\n\n.ccWIh_EMjX{text-align:start}\n\n[dir=ltr] .ccWIh_EMjX{text-align:left}\n\n[dir=rtl] .ccWIh_EMjX{text-align:right}\n\n.ccWIh_ImeN,[dir=ltr] .ccWIh_ImeN,[dir=rtl] .ccWIh_ImeN{text-align:center}\n\n.ccWIh_dBtH{text-align:end}\n\n[dir=ltr] .ccWIh_dBtH{text-align:right}\n\n[dir=rtl] .ccWIh_dBtH{text-align:left}");
  },
  'root': 'ccWIh_bGBk',
  'textAlign--start': 'ccWIh_EMjX',
  'textAlign--center': 'ccWIh_ImeN',
  'textAlign--end': 'ccWIh_dBtH'
};

/**
---
parent: Table
id: Table.Cell
---
**/
var Cell = (_dec = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Cell, _Component);

  var _super = (0, _createSuper2.default)(Cell);

  function Cell() {
    (0, _classCallCheck2.default)(this, Cell);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Cell, [{
    key: "render",

    /* eslint-disable react/require-default-props */

    /* eslint-enable react/require-default-props */
    value: function render() {
      var _classnames;

      var _this$props = this.props,
          children = _this$props.children,
          textAlign = _this$props.textAlign,
          isStacked = _this$props.isStacked,
          header = _this$props.header;
      return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, _View.View.omitViewProps((0, _omitProps.omitProps)(this.props, Cell.propTypes), Cell), {
        as: isStacked ? 'div' : 'td',
        className: (0, _classnames2.default)((_classnames = {}, (0, _defineProperty2.default)(_classnames, styles.root, true), (0, _defineProperty2.default)(_classnames, styles["textAlign--".concat(textAlign)], textAlign), _classnames)),
        role: isStacked ? 'cell' : null
      }), header && (0, _callRenderProp.callRenderProp)(header), header && ': ', (0, _callRenderProp.callRenderProp)(children));
    }
  }]);
  Cell.displayName = "Cell";
  return Cell;
}(_react.Component), _class2.propTypes = {
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  isStacked: _propTypes.default.bool,
  header: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),

  /**
   * Control the text alignment in cell
   */
  textAlign: _propTypes.default.oneOf(['start', 'center', 'end'])
}, _class2.defaultProps = {
  textAlign: 'start',
  children: null
}, _temp)) || _class);
exports.Cell = Cell;
var _default = Cell;
exports.default = _default;