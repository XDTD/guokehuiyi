"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Head = exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _matchComponentTypes = require("@instructure/ui-react-utils/lib/matchComponentTypes.js");

var _callRenderProp = require("@instructure/ui-react-utils/lib/callRenderProp.js");

var _Children = require("@instructure/ui-prop-types/lib/Children.js");

var _SimpleSelect = require("@instructure/ui-simple-select/lib/SimpleSelect");

var _ScreenReaderContent = require("@instructure/ui-a11y-content/lib/ScreenReaderContent");

var _IconCheckLine = require("@instructure/ui-icons/lib/IconCheckLine.js");

var _console = require("@instructure/console");

var _theme = _interopRequireDefault(require("./theme.js"));

var _index = require("../Row/index.js");

var _index2 = require("../ColHeader/index.js");

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'bGgTf',
  template: function template(theme) {
    return "\n\n.bGgTf_bGBk{background:".concat(theme.background || 'inherit', ";color:").concat(theme.color || 'inherit', ";font-family:").concat(theme.fontFamily || 'inherit', ";font-size:").concat(theme.fontSize || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', "}");
  },
  'root': 'bGgTf_bGBk'
};

var _ref2 = /*#__PURE__*/_react.default.createElement(_ScreenReaderContent.ScreenReaderContent, null);

/**
---
parent: Table
id: Table.Head
---
**/
var Head = (_dec = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Head, _Component);

  var _super = (0, _createSuper2.default)(Head);

  function Head() {
    (0, _classCallCheck2.default)(this, Head);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Head, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.isSortable && typeof this.props.renderSortLabel === 'undefined') {
        (0, _console.warn)(false, '[Table.Head] The `renderSortLabel` prop should be provided when Table is sortable.');
      }
    }
  }, {
    key: "renderSelect",
    value: function renderSelect() {
      var _this$props = this.props,
          children = _this$props.children,
          renderSortLabel = _this$props.renderSortLabel;

      var _Children$toArray = _react.Children.toArray(children),
          _Children$toArray2 = (0, _slicedToArray2.default)(_Children$toArray, 1),
          row = _Children$toArray2[0];

      if (!(0, _matchComponentTypes.matchComponentTypes)(row, [_index.Row])) {
        return null;
      }

      var options = [];
      var clickHandlers = {};
      var selectedOption = null;
      var count = 0;

      _react.Children.forEach(row.props.children, function (colHeader) {
        count += 1;

        if ((0, _matchComponentTypes.matchComponentTypes)(colHeader, [_index2.ColHeader])) {
          var _colHeader$props = colHeader.props,
              id = _colHeader$props.id,
              sortDirection = _colHeader$props.sortDirection,
              onRequestSort = _colHeader$props.onRequestSort;

          if (onRequestSort) {
            options.push(id);
            clickHandlers[id] = onRequestSort;

            if (sortDirection !== 'none') {
              selectedOption = id;
            }
          }
        }
      });

      if (!options.length) {
        return null;
      }

      var handleSelect = function handleSelect(event, _ref) {
        var value = _ref.value;
        clickHandlers[value](event, {
          id: value
        });
      };

      return /*#__PURE__*/_react.default.createElement("div", {
        role: "rowgroup"
      }, /*#__PURE__*/_react.default.createElement("div", {
        role: "row"
      }, /*#__PURE__*/_react.default.createElement("div", {
        role: "cell",
        "aria-colspan": count
      }, /*#__PURE__*/_react.default.createElement(_SimpleSelect.SimpleSelect, {
        renderLabel: renderSortLabel ? (0, _callRenderProp.callRenderProp)(renderSortLabel) : _ref2,
        renderBeforeInput: selectedOption && _IconCheckLine.IconCheckLine,
        value: selectedOption,
        onChange: handleSelect
      }, options.map(function (option) {
        return /*#__PURE__*/_react.default.createElement(_SimpleSelect.SimpleSelect.Option, {
          id: option,
          key: option,
          value: option,
          renderBeforeLabel: option === selectedOption ? _IconCheckLine.IconCheckLine : function () {
            return /*#__PURE__*/_react.default.createElement(_IconCheckLine.IconCheckLine, {
              style: {
                color: 'transparent'
              }
            });
          }
        }, option);
      })))));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          children = _this$props2.children,
          isStacked = _this$props2.isStacked;
      return isStacked ? this.renderSelect() : /*#__PURE__*/_react.default.createElement("thead", Object.assign({}, (0, _omitProps.omitProps)(this.props, Head.propTypes), {
        className: styles.root
      }), _react.Children.map(children, function (child) {
        return (0, _matchComponentTypes.matchComponentTypes)(child, [_index.Row]) ? child : null;
      }));
    }
  }, {
    key: "isSortable",

    /* eslint-disable react/require-default-props */

    /* eslint-enable react/require-default-props */
    get: function get() {
      var _Children$toArray3 = _react.Children.toArray(this.props.children),
          _Children$toArray4 = (0, _slicedToArray2.default)(_Children$toArray3, 1),
          row = _Children$toArray4[0];

      var sortable = false;

      _react.Children.forEach(row.props.children, function (colHeader) {
        if ((0, _matchComponentTypes.matchComponentTypes)(colHeader, [_index2.ColHeader])) {
          if (colHeader.props.onRequestSort) sortable = true;
        }
      });

      return sortable;
    }
  }]);
  Head.displayName = "Head";
  return Head;
}(_react.Component), _class2.propTypes = {
  /**
   * `Table.Row`
   */
  children: _Children.Children.oneOf([_index.Row]),
  isStacked: _propTypes.default.bool,
  renderSortLabel: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func])
}, _class2.defaultProps = {
  children: null
}, _temp)) || _class);
exports.Head = Head;
var _default = Head;
exports.default = _default;