"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = runAxe;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _axeCore = _interopRequireDefault(require("axe-core"));

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
function runAxe(_x) {
  return _runAxe.apply(this, arguments);
}

function _runAxe() {
  _runAxe = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(element) {
    var options,
        result,
        context,
        config,
        axeResult,
        ignores,
        violations,
        _args = arguments;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            options = _args.length > 1 && _args[1] !== void 0 ? _args[1] : {};
            result = true;
            context = {
              include: [element],
              exclude: options.exclude
            };
            config = {
              runOnly: {
                type: 'tag',
                values: ['wcag2a', 'wcag2aa', 'section508', 'best-practice']
              }
            };
            _context.prev = 4;
            _context.next = 7;
            return _axeCore.default.run(context, config);

          case 7:
            axeResult = _context.sent;
            // violations to ignore/filter out
            ignores = [].concat((0, _toConsumableArray2.default)(options.ignores || []), ['aria-hidden-focus', // TODO: remove this and fix the broken tests
            'color-contrast' // because we test color contrast in theme tests
            ]);
            violations = (axeResult.violations || []).filter(function (violation) {
              return !ignores.includes(violation.id);
            });
            violations.forEach(function (violation) {
              /* eslint-disable no-console */
              console.groupCollapsed("[".concat(violation.id, "] ").concat(violation.help));
              violation.nodes.forEach(function (node) {
                var el = document.querySelector(node.target.toString());

                if (!el) {
                  console.info(node.target.toString());
                } else {
                  console.info(el);
                }
              });
              console.groupEnd();
              /* eslint-enable no-console */
            });

            if (violations.length > 0) {
              result = new Error(formatError(violations));
            }

            _context.next = 17;
            break;

          case 14:
            _context.prev = 14;
            _context.t0 = _context["catch"](4);
            result = _context.t0;

          case 17:
            return _context.abrupt("return", result);

          case 18:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[4, 14]]);
  }));
  return _runAxe.apply(this, arguments);
}

function formatError(violations) {
  return violations.map(function (violation) {
    return ["[".concat(violation.id, "] ").concat(violation.help), violation.nodes.map(function (node) {
      return node.target.toString();
    }).join('\n'), violation.description, "".concat(violation.helpUrl, "\n")].join('\n');
  });
}