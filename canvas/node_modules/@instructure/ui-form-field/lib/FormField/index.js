"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormField = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _pickProps = require("@instructure/ui-react-utils/lib/pickProps.js");

var _FormPropTypes = require("../FormPropTypes.js");

var _index = require("../FormFieldLayout/index.js");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
---
category: components
---
**/
var FormField = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(FormField, _Component);

  var _super = (0, _createSuper2.default)(FormField);

  function FormField() {
    (0, _classCallCheck2.default)(this, FormField);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(FormField, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react.default.createElement(_index.FormFieldLayout, Object.assign({}, (0, _omitProps.omitProps)(this.props, FormField.propTypes), (0, _pickProps.pickProps)(this.props, _index.FormFieldLayout.propTypes), {
        vAlign: this.props.vAlign,
        as: "label",
        htmlFor: this.props.id
      }));
    }
  }]);
  FormField.displayName = "FormField";
  return FormField;
}(_react.Component);

exports.FormField = FormField;
FormField.propTypes = {
  label: _propTypes.default.node.isRequired,

  /**
   * the id of the input (to link it to its label for a11y)
   */
  id: _propTypes.default.string.isRequired,

  /**
   * object with shape: `{
   *   text: PropTypes.string,
   *   type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])
   * }`
   */
  messages: _propTypes.default.arrayOf(_FormPropTypes.FormPropTypes.message),
  messagesId: _propTypes.default.string,
  children: _propTypes.default.node,
  inline: _propTypes.default.bool,
  layout: _propTypes.default.oneOf(['stacked', 'inline']),
  labelAlign: _propTypes.default.oneOf(['start', 'end']),
  vAlign: _propTypes.default.oneOf(['top', 'middle', 'bottom']),
  width: _propTypes.default.string,
  inputContainerRef: _propTypes.default.func
};
FormField.defaultProps = {
  inline: false,
  layout: 'stacked',
  labelAlign: 'end',
  vAlign: 'middle',
  messages: void 0,
  messagesId: void 0,
  children: null,
  width: void 0,
  inputContainerRef: void 0
};
var _default = FormField;
exports.default = _default;