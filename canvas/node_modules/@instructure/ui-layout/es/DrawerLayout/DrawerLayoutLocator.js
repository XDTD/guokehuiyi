/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import { locator } from '@instructure/ui-test-locator';
import { DrawerLayout } from './index';
import { DrawerContentLocator } from './DrawerContent/DrawerContentLocator';
import { DrawerTrayLocator } from './DrawerTray/DrawerTrayLocator';
export { DrawerContentLocator, DrawerTrayLocator };
export var DrawerLayoutLocator = locator(DrawerLayout.selector, {
  findContent: function findContent() {
    return DrawerContentLocator.find.apply(DrawerContentLocator, arguments);
  },
  findTray: function findTray(element) {
    if (element && element.getAttribute) {
      var _locator;

      var id = element.getAttribute(DrawerLayout.locatorAttribute);

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return (_locator = locator("[".concat(DrawerLayout.Tray.locatorAttribute, "=\"").concat(id, "\"]"))).find.apply(_locator, args);
    } else {
      return null;
    }
  }
});