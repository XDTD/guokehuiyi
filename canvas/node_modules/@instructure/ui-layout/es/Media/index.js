import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { themeable, ThemeablePropTypes } from '@instructure/ui-themeable';
import { omitProps, deprecated } from '@instructure/ui-react-utils';
import { View } from '@instructure/ui-view';
var styles = {
  componentId: 'cBtUM',
  template: function template(theme) {
    return "\n\nfigure.cBtUM_bGBk{background:".concat(theme.background || 'inherit', ";display:flex;font-family:").concat(theme.fontFamily || 'inherit', ";margin:0;padding:0}\n\n.cBtUM_dacV{align-items:flex-start}\n\n.cBtUM_cwzs{align-items:center}\n\nfigcaption.cBtUM_cFEh{color:").concat(theme.color || 'inherit', ";margin:0;padding:0}\n\n.cBtUM_cvpn{-webkit-margin-end:").concat(theme.figureMargin || 'inherit', ";-webkit-margin-start:0;margin-inline-end:").concat(theme.figureMargin || 'inherit', ";margin-inline-start:0}\n\n[dir=ltr] .cBtUM_cvpn{margin-left:0;margin-right:").concat(theme.figureMargin || 'inherit', "}\n\n[dir=rtl] .cBtUM_cvpn{margin-left:").concat(theme.figureMargin || 'inherit', ";margin-right:0}\n\n.cBtUM_nvdO{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:block;font-size:").concat(theme.titleFontSize || 'inherit', ";font-weight:").concat(theme.titleFontWeight || 'inherit', ";line-height:").concat(theme.titleLineHeight || 'inherit', ";margin:").concat(theme.titleMargin || 'inherit', ";text-rendering:optimizeLegibility}\n\n.cBtUM_difO{font-size:").concat(theme.descriptionFontSize || 'inherit', ";font-weight:").concat(theme.descriptionFontWeight || 'inherit', ";line-height:").concat(theme.descriptionLineHeight || 'inherit', "}");
  },
  'root': 'cBtUM_bGBk',
  'top': 'cBtUM_dacV',
  'center': 'cBtUM_cwzs',
  'caption': 'cBtUM_cFEh',
  'figure': 'cBtUM_cvpn',
  'title': 'cBtUM_nvdO',
  'description': 'cBtUM_difO'
};
import theme from './theme';
/**
---
category: components/deprecated
id: DeprecatedMedia
---
**/

var Media = (_dec = deprecated('7.0.0', null, 'Use Media from ui-byline instead.'), _dec2 = themeable(theme, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Media, _Component);

  var _super = _createSuper(Media);

  function Media() {
    _classCallCheck(this, Media);

    return _super.apply(this, arguments);
  }

  _createClass(Media, [{
    key: "render",
    value: function render() {
      var _classnames;

      var passthroughProps = View.omitViewProps(omitProps(this.props, Media.propTypes), Media);
      return /*#__PURE__*/React.createElement(View, Object.assign({}, passthroughProps, {
        elementRef: this.props.elementRef,
        className: classnames((_classnames = {}, _defineProperty(_classnames, styles.root, true), _defineProperty(_classnames, styles[this.props.alignContent], true), _classnames)),
        as: "figure",
        margin: this.props.margin,
        maxWidth: this.theme[this.props.size]
      }), /*#__PURE__*/React.createElement("div", {
        className: styles.figure
      }, this.props.children), /*#__PURE__*/React.createElement("figcaption", {
        className: styles.caption
      }, this.props.title && /*#__PURE__*/React.createElement("span", {
        className: styles.title
      }, this.props.title), this.props.description && /*#__PURE__*/React.createElement("div", {
        className: styles.description
      }, this.props.description)));
    }
  }]);

  Media.displayName = "Media";
  return Media;
}(Component), _class2.propTypes = {
  /**
  * the media object
  */
  children: PropTypes.node.isRequired,

  /**
  * the media title
  */
  title: PropTypes.node,

  /**
  * the media description
  */
  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),

  /**
  * how should the title and description align
  */
  alignContent: PropTypes.oneOf(['top', 'center']),

  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: ThemeablePropTypes.spacing,
  size: PropTypes.oneOf(['small', 'medium', 'large']),
  elementRef: PropTypes.func
}, _class2.defaultProps = {
  alignContent: 'center',
  elementRef: void 0,
  margin: void 0,
  title: void 0,
  size: void 0,
  description: void 0
}, _temp)) || _class) || _class);
export default Media;
export { Media };