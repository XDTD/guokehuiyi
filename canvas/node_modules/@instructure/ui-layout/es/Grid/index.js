import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _dec2, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component, Children } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { themeable } from '@instructure/ui-themeable';
import { Children as ChildrenPropTypes } from '@instructure/ui-prop-types';
import { capitalizeFirstLetter } from '@instructure/ui-utils';
import { safeCloneElement, matchComponentTypes, omitProps, pickProps, deprecated } from '@instructure/ui-react-utils';
import { ScreenReaderContent } from '@instructure/ui-a11y-content';
import { GridRow } from './GridRow';
import { GridCol } from './GridCol';
var styles = {
  componentId: 'cMIPy',
  template: function template(theme) {
    return "\n\n.cMIPy_bGBk{display:block}\n\n.cMIPy_fFVr{outline:0.0625rem dashed red}\n\n.cMIPy_dTOw{box-sizing:border-box}\n\n@media screen and (--mediumMin){.cMIPy_crIs{box-sizing:border-box}}\n\n@media screen and (--largeMin){.cMIPy_cpbQ{box-sizing:border-box}}\n\n@media screen and (--xLargeMin){.cMIPy_dsuu{box-sizing:border-box}}";
  },
  'root': 'cMIPy_bGBk',
  'visualDebug': 'cMIPy_fFVr',
  'startAtSmall': 'cMIPy_dTOw',
  'startAtMedium': 'cMIPy_crIs',
  'startAtLarge': 'cMIPy_cpbQ',
  'startAtXLarge': 'cMIPy_dsuu'
};
import theme from './theme';
/**
---
category: components/deprecated
id: DeprecatedGrid
---
**/

var Grid = (_dec = deprecated('7.0.0', null, 'Use Grid from ui-grid instead.'), _dec2 = themeable(theme, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Grid, _Component);

  var _super = _createSuper(Grid);

  function Grid() {
    _classCallCheck(this, Grid);

    return _super.apply(this, arguments);
  }

  _createClass(Grid, [{
    key: "startAtClass",
    value: function startAtClass() {
      return !!this.props.startAt && "startAt".concat(capitalizeFirstLetter(this.props.startAt));
    }
  }, {
    key: "renderChildren",
    value: function renderChildren() {
      var _this = this;

      var children = Children.toArray(this.props.children);
      return children.map(function (child, index) {
        if (matchComponentTypes(child, [GridRow])) {
          return safeCloneElement(child, _objectSpread({}, pickProps(_this.props, Grid.propTypes), {}, child.props, {
            /* child props should override parent */
            isLastRow: index + 1 === children.length
          }));
        } else {
          return child; // PropType validation should handle errors
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classes;

      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles[this.startAtClass()], !!this.props.startAt), _defineProperty(_classes, styles.visualDebug, this.props.visualDebug), _classes);
      var props = omitProps(this.props, Grid.propTypes);
      return /*#__PURE__*/React.createElement("span", Object.assign({}, props, {
        className: classnames(classes)
      }), this.renderChildren());
    }
  }]);

  Grid.displayName = "Grid";
  return Grid;
}(Component), _class2.propTypes = {
  children: ChildrenPropTypes.oneOf([GridRow, ScreenReaderContent]),
  colSpacing: PropTypes.oneOf(['none', 'small', 'medium', 'large']),
  rowSpacing: PropTypes.oneOf(['none', 'small', 'medium', 'large']),
  hAlign: PropTypes.oneOf(['start', 'center', 'end', 'space-around', 'space-between']),
  vAlign: PropTypes.oneOf(['top', 'middle', 'bottom']),
  startAt: PropTypes.oneOf(['small', 'medium', 'large', 'x-large', null]),
  visualDebug: PropTypes.bool
}, _class2.defaultProps = {
  colSpacing: 'medium',
  rowSpacing: 'medium',
  hAlign: 'start',
  startAt: 'small',
  vAlign: 'top',
  visualDebug: false,
  children: null
}, _class2.Row = GridRow, _class2.Col = GridCol, _temp)) || _class) || _class);
export default Grid;
export { Grid, GridRow, GridCol };