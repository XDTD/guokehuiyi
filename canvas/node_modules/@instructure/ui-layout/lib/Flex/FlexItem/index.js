"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FlexItem = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _ThemeablePropTypes = require("@instructure/ui-themeable/lib/ThemeablePropTypes.js");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _View = require("@instructure/ui-view/lib/View");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'dHGMZ',
  template: function template(theme) {
    return "\n\n.dHGMZ_bGBk{box-sizing:border-box;flex-shrink:0;min-width:0.0625rem}\n\n.dHGMZ_ffgL{align-self:flex-start}\n\n.dHGMZ_fjOx{align-self:flex-end}\n\n.dHGMZ_bJAR{align-self:center}\n\n.dHGMZ_eFer{align-self:stretch}\n\n.dHGMZ_SpYf{flex-grow:1}\n\n.dHGMZ_buwJ{flex-shrink:1}\n\n.dHGMZ_fFVr{outline:0.0625rem dashed ".concat(theme.debugOutlineColor || 'inherit', "}");
  },
  'root': 'dHGMZ_bGBk',
  'align--start': 'dHGMZ_ffgL',
  'align--end': 'dHGMZ_fjOx',
  'align--center': 'dHGMZ_bJAR',
  'align--stretch': 'dHGMZ_eFer',
  'grow': 'dHGMZ_SpYf',
  'shrink': 'dHGMZ_buwJ',
  'visualDebug': 'dHGMZ_fFVr'
};

/**
---
parent: DeprecatedFlex
id: DeprecatedFlex.Item
---
**/
var FlexItem = (_dec = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(FlexItem, _Component);

  var _super = (0, _createSuper2.default)(FlexItem);

  function FlexItem() {
    (0, _classCallCheck2.default)(this, FlexItem);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(FlexItem, [{
    key: "render",

    /* eslint-disable react/require-default-props */

    /* eslint-enable react/require-default-props */
    value: function render() {
      var _classes;

      var props = (0, _omitProps.omitProps)(this.props, FlexItem.propTypes);
      var _this$props = this.props,
          align = _this$props.align,
          as = _this$props.as,
          elementRef = _this$props.elementRef,
          children = _this$props.children,
          direction = _this$props.direction,
          grow = _this$props.grow,
          margin = _this$props.margin,
          overflowX = _this$props.overflowX,
          overflowY = _this$props.overflowY,
          padding = _this$props.padding,
          shrink = _this$props.shrink,
          size = _this$props.size,
          textAlign = _this$props.textAlign,
          visualDebug = _this$props.visualDebug;
      var dirColumn = direction === 'column';
      var style = {
        flexBasis: size
      };
      var classes = (_classes = {}, (0, _defineProperty2.default)(_classes, styles.root, true), (0, _defineProperty2.default)(_classes, styles.visualDebug, visualDebug), (0, _defineProperty2.default)(_classes, styles.grow, grow), (0, _defineProperty2.default)(_classes, styles.shrink, shrink), (0, _defineProperty2.default)(_classes, styles["align--".concat(align)], align), _classes);
      return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, props, {
        className: (0, _classnames.default)(classes),
        style: style,
        elementRef: elementRef,
        as: as,
        minHeight: dirColumn ? size : void 0,
        minWidth: direction === 'row' ? size : void 0,
        textAlign: textAlign,
        margin: margin,
        padding: padding,
        overflowX: overflowX,
        overflowY: overflowY || (dirColumn ? 'auto' : 'visible')
      }), children);
    }
  }]);
  FlexItem.displayName = "FlexItem";
  return FlexItem;
}(_react.Component), _class2.propTypes = {
  /**
  * overrides the parent Flex's alignItems prop, if needed
  */
  align: _propTypes.default.oneOf(['center', 'start', 'end', 'stretch']),

  /**
  * the element type to render as
  */
  as: _propTypes.default.elementType,

  /**
  * provides a reference to the underlying html root element
  */
  elementRef: _propTypes.default.func,
  children: _propTypes.default.node,

  /**
  * Inherits from the parent Flex component
  */
  direction: _propTypes.default.oneOf(['row', 'column']),

  /**
  * Should the FlexItem grow to fill any available space?
  */
  grow: _propTypes.default.bool,

  /**
  * Should the FlexItem shrink (stopping at its `size`)?
  */
  shrink: _propTypes.default.bool,

  /**
  * Sets the base size of the FlexItem (width if direction is `row`; height if direction is `column`)
  */
  size: _propTypes.default.string,
  textAlign: _propTypes.default.oneOf(['start', 'center', 'end']),

  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: _ThemeablePropTypes.ThemeablePropTypes.spacing,

  /**
  * Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `padding="small x-large large"`.
  */
  padding: _ThemeablePropTypes.ThemeablePropTypes.spacing,

  /**
  * Places dashed lines around the component's borders to help debug your layout
  */
  visualDebug: _propTypes.default.bool,
  overflowX: _propTypes.default.oneOf(['auto', 'hidden', 'visible']),
  overflowY: _propTypes.default.oneOf(['auto', 'hidden', 'visible'])
}, _class2.defaultProps = {
  as: 'span',
  elementRef: function elementRef(el) {},
  grow: false,
  shrink: false
}, _temp)) || _class);
exports.FlexItem = FlexItem;
var _default = FlexItem;
exports.default = _default;