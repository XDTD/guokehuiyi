"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DrawerContent = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _debounce = require("@instructure/debounce");

var _addResizeListener = require("@instructure/ui-dom-utils/lib/addResizeListener.js");

var _getBoundingClientRect = require("@instructure/ui-dom-utils/lib/getBoundingClientRect.js");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _dec2, _class, _class2, _temp;

var styles = {
  componentId: 'eHNud',
  template: function template(theme) {
    return "\n\n.eHNud_dBzQ{box-sizing:content-box;height:100%;overflow-y:auto}\n\n.eHNud_fgMr{transition:margin ".concat(theme.duration || 'inherit', "}");
  },
  'drawerContentRoot': 'eHNud_dBzQ',
  'transition': 'eHNud_fgMr'
};

/**
---
parent: DeprecatedDrawerLayout
id: DeprecatedDrawerLayout.Content
---
**/
var DrawerContent = (_dec = (0, _testable.testable)(), _dec2 = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(DrawerContent, _Component);

  var _super = (0, _createSuper2.default)(DrawerContent);

  function DrawerContent() {
    var _this;

    (0, _classCallCheck2.default)(this, DrawerContent);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      shouldTransition: false
    };
    _this._content = null;
    _this._resizeListener = null;
    _this._debounced = null;
    _this._timeouts = [];

    _this.handleContentRef = function (node) {
      if (typeof _this.props.contentRef === 'function') {
        _this._content = node;

        _this.props.contentRef(node);
      }
    };

    return _this;
  }

  (0, _createClass2.default)(DrawerContent, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var rect = (0, _getBoundingClientRect.getBoundingClientRect)(this._content); // set initial size

      this.props.onSizeChange({
        width: rect.width,
        height: rect.height
      }); // listen for changes to size

      this._debounced = (0, _debounce.debounce)(this.props.onSizeChange, 100, {
        leading: false,
        trailing: true
      });
      this._resizeListener = (0, _addResizeListener.addResizeListener)(this._content, this._debounced);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this2 = this;

      this._timeouts.push(setTimeout(function () {
        _this2.setState({
          shouldTransition: true
        });
      }));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this._resizeListener) {
        this._resizeListener.remove();
      }

      if (this._debounced) {
        this._debounced.cancel();
      }

      this._timeouts.forEach(function (timeout) {
        clearTimeout(timeout);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      var _this$props = this.props,
          style = _this$props.style,
          label = _this$props.label,
          role = _this$props.role;
      return /*#__PURE__*/_react.default.createElement("div", Object.assign({}, (0, _omitProps.omitProps)(this.props, DrawerContent.propTypes, ['shouldTransition']), {
        role: role,
        style: style,
        ref: this.handleContentRef,
        "aria-label": label,
        className: (0, _classnames2.default)((_classnames = {}, (0, _defineProperty2.default)(_classnames, styles.drawerContentRoot, true), (0, _defineProperty2.default)(_classnames, styles.transition, this.state.shouldTransition), _classnames))
      }), this.props.children);
    }
  }]);
  DrawerContent.displayName = "DrawerContent";
  return DrawerContent;
}(_react.Component), _class2.locatorAttribute = 'data-drawer-content', _class2.propTypes = {
  label: _propTypes.default.string.isRequired,
  children: _propTypes.default.node,
  contentRef: _propTypes.default.func,

  /**
   * Callback fired whenever the `<DrawerLayout.Content />` changes size
   */
  onSizeChange: _propTypes.default.func,
  role: _propTypes.default.string
}, _class2.defaultProps = {
  children: null,
  contentRef: function contentRef(node) {},
  onSizeChange: function onSizeChange(size) {},
  role: 'region'
}, _temp)) || _class) || _class);
exports.DrawerContent = DrawerContent;
var _default = DrawerContent;
exports.default = _default;