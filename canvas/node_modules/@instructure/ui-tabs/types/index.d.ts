import * as React from 'react';

export type TabsVariant = "default" | "secondary";

export type TabsMaxWidth = string | number;

export type TabsMaxHeight = string | number;

export type TabsMinHeight = string | number;

export type TabsTextAlign = "start" | "center" | "end";

export type TabsTabOverflow = "stack" | "scroll";

export type TabsSize = "small" | "medium" | "large";

export interface TabsProps {
    /**
     * children of type `Tabs.Panel`
     */
    children?: any;
    variant?: TabsVariant;
    /**
     * A screen ready only label for the list of tabs
     */
    screenReaderLabel?: string;
    /**
     * Called when the selected tab should change
     */
    onRequestTabChange?: (...args: any[])=>any;
    maxWidth?: TabsMaxWidth;
    maxHeight?: TabsMaxHeight;
    minHeight?: TabsMinHeight;
    /**
     * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
     * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
     * familiar CSS-like shorthand. For example: `margin="small auto large"`.
     */
    margin?: any;
    /**
     * Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,
     * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
     * familiar CSS-like shorthand. For example: `padding="small x-large large"`.
     */
    padding?: any;
    textAlign?: TabsTextAlign;
    elementRef?: (...args: any[])=>any;
    /**
     * Choose whether Tabs should stack or scroll when they exceed the width of their
     * container.
     */
    tabOverflow?: TabsTabOverflow;
    shouldFocusOnRender?: boolean;
    /**
     * __Deprecated - use `onRequestTabChange` instead__
     */
    onChange?: (...args: any[])=>any;
    /**
     * __Deprecated__
     */
    size?: TabsSize;
    /**
     * __Deprecated__
     */
    selectedIndex?: number;
    /**
     * __Deprecated - use `shouldFocusOnRender` instead__
     */
    focus?: boolean;
}

export class Tabs extends React.Component<TabsProps, any> {
    render(): JSX.Element;

}

