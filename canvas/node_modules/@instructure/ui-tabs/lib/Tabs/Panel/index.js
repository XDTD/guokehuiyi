"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Panel = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames3 = _interopRequireDefault(require("classnames"));

var _View = require("@instructure/ui-view/lib/View");

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _ThemeablePropTypes = require("@instructure/ui-themeable/lib/ThemeablePropTypes.js");

var _passthroughProps = require("@instructure/ui-react-utils/lib/passthroughProps.js");

var _deprecated = require("@instructure/ui-react-utils/lib/deprecated.js");

var _Transition = require("@instructure/ui-motion/lib/Transition");

var _theme = _interopRequireDefault(require("./theme.js"));

var _dec, _dec2, _class, _class2, _temp;

var styles = {
  componentId: 'dpCPB',
  template: function template(theme) {
    return "\n\n.dpCPB_bGBk{font-family:".concat(theme.fontFamily || 'inherit', ";font-size:").concat(theme.fontSize || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";line-height:").concat(theme.lineHeight || 'inherit', "}\n\n.dpCPB_caGd,.dpCPB_bGBk{box-sizing:border-box}\n\n.dpCPB_caGd{background:").concat(theme.background || 'inherit', ";border-color:").concat(theme.borderColor || 'inherit', ";border-style:").concat(theme.borderStyle || 'inherit', ";border-width:").concat(theme.borderWidth || 'inherit', ";color:").concat(theme.color || 'inherit', ";width:100%}\n\n.dpCPB_cLQw{overflow:auto}\n\n.dpCPB_ddES .dpCPB_caGd,.dpCPB_eLeB .dpCPB_caGd{border-bottom:none;border-left:none;border-right:none}");
  },
  'root': 'dpCPB_bGBk',
  'content': 'dpCPB_caGd',
  'overflow': 'dpCPB_cLQw',
  'default': 'dpCPB_ddES',
  'secondary': 'dpCPB_eLeB'
};

/**
---
parent: Tabs
id: Tabs.Panel
---
**/
var Panel = (_dec = (0, _deprecated.deprecated)('8.0.0', {
  title: 'renderTitle',
  selected: 'isSelected',
  disabled: 'isDisabled'
}), _dec2 = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Panel, _Component);

  var _super = (0, _createSuper2.default)(Panel);

  function Panel() {
    (0, _classCallCheck2.default)(this, Panel);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Panel, [{
    key: "render",
    value: function render() {
      var _classnames, _classnames2;

      var _this$props = this.props,
          selected = _this$props.selected,
          disabled = _this$props.disabled,
          labelledBy = _this$props.labelledBy,
          variant = _this$props.variant,
          id = _this$props.id,
          maxHeight = _this$props.maxHeight,
          minHeight = _this$props.minHeight,
          padding = _this$props.padding,
          textAlign = _this$props.textAlign,
          children = _this$props.children,
          elementRef = _this$props.elementRef,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["selected", "disabled", "labelledBy", "variant", "id", "maxHeight", "minHeight", "padding", "textAlign", "children", "elementRef"]); // TODO: clean this up when selected and disabled props are removed in 7.0:

      var isSelected = selected || props.isSelected;
      var isDisabled = disabled || props.isDisabled;
      var isHidden = !isSelected || !!isDisabled;
      return /*#__PURE__*/_react.default.createElement("div", Object.assign({}, (0, _passthroughProps.passthroughProps)(props), {
        className: (0, _classnames3.default)((_classnames = {}, (0, _defineProperty2.default)(_classnames, styles.root, true), (0, _defineProperty2.default)(_classnames, styles[variant], true), _classnames)),
        role: "tabpanel",
        id: id,
        "aria-labelledby": labelledBy,
        "aria-hidden": isHidden ? 'true' : null,
        ref: elementRef
      }), /*#__PURE__*/_react.default.createElement(_Transition.Transition, {
        type: "fade",
        in: !isHidden,
        unmountOnExit: true,
        transitionExit: false
      }, /*#__PURE__*/_react.default.createElement(_View.View, {
        className: (0, _classnames3.default)((_classnames2 = {}, (0, _defineProperty2.default)(_classnames2, styles.content, true), (0, _defineProperty2.default)(_classnames2, styles.overflow, maxHeight), _classnames2)),
        maxHeight: maxHeight,
        minHeight: minHeight,
        as: "div",
        padding: padding,
        textAlign: textAlign
      }, children)));
    }
  }]);
  Panel.displayName = "Panel";
  return Panel;
}(_react.Component), _class2.propTypes = {
  /**
   * The content that will be rendered in the corresponding <Tab /> and will label
   * this `<Tabs.Panel />` for screen readers
   */
  renderTitle: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]).isRequired,
  children: _propTypes.default.node,
  variant: _propTypes.default.oneOf(['default', 'secondary']),
  isSelected: _propTypes.default.bool,
  isDisabled: _propTypes.default.bool,
  maxHeight: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  minHeight: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  id: _propTypes.default.string,
  labelledBy: _propTypes.default.string,
  padding: _ThemeablePropTypes.ThemeablePropTypes.spacing,
  textAlign: _propTypes.default.oneOf(['start', 'center', 'end']),

  /**
   * __Deprecated - use `renderTitle` instead__
   */
  title: _propTypes.default.node,

  /**
   * __Deprecated - use `isSelected` instead__
   */
  selected: _propTypes.default.bool,

  /**
   * __Deprecated - use `isDisabled` instead__
   */
  disabled: _propTypes.default.bool,
  elementRef: _propTypes.default.func
}, _class2.defaultProps = {
  children: null,
  id: void 0,
  disabled: void 0,
  isDisabled: false,
  maxHeight: void 0,
  minHeight: void 0,
  textAlign: 'start',
  variant: 'default',
  labelledBy: null,
  selected: void 0,
  isSelected: false,
  padding: 'small',
  title: void 0,
  elementRef: function elementRef(el) {}
}, _temp)) || _class) || _class);
exports.Panel = Panel;
var _default = Panel;
exports.default = _default;