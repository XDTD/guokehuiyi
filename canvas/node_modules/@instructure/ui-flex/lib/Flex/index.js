"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "FlexItem", {
  enumerable: true,
  get: function get() {
    return _index.Item;
  }
});
exports.Flex = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _ThemeablePropTypes = require("@instructure/ui-themeable/lib/ThemeablePropTypes.js");

var _safeCloneElement = require("@instructure/ui-react-utils/lib/safeCloneElement.js");

var _passthroughProps = require("@instructure/ui-react-utils/lib/passthroughProps.js");

var _deprecated = require("@instructure/ui-react-utils/lib/deprecated.js");

var _matchComponentTypes = require("@instructure/ui-react-utils/lib/matchComponentTypes.js");

var _callRenderProp = require("@instructure/ui-react-utils/lib/callRenderProp.js");

var _View = require("@instructure/ui-view/lib/View");

var _index = require("./Item/index.js");

var _theme = _interopRequireDefault(require("./theme.js"));

var _dec, _dec2, _class, _class2, _temp;

var styles = {
  componentId: 'bDzpk',
  template: function template(theme) {
    return "\n\n.bDzpk_bGBk{box-sizing:border-box;font-family:".concat(theme.fontFamily || 'inherit', "}\n\n.bDzpk_bZNM{flex-direction:column}\n\n.bDzpk_eUXf{flex-direction:column-reverse}\n\n.bDzpk_qOas{flex-direction:row}\n\n.bDzpk_sGoV{flex-direction:row-reverse}\n\n.bDzpk_dyGy{flex-wrap:wrap}\n\n.bDzpk_cdHk{flex-wrap:wrap-reverse}\n\n.bDzpk_ePRQ{flex-wrap:wrap}\n\n.bDzpk_busO{justify-content:flex-start}\n\n.bDzpk_crdn{justify-content:flex-end}\n\n.bDzpk_eRIA{justify-content:center}\n\n.bDzpk_flTs{justify-content:space-around}\n\n.bDzpk_oDLF{justify-content:space-between}\n\n.bDzpk_fZWR{align-items:center}\n\n.bDzpk_cCxO{align-items:flex-start}\n\n.bDzpk_fncw{align-items:flex-end}\n\n.bDzpk_cQFX{align-items:stretch}");
  },
  'root': 'bDzpk_bGBk',
  'column': 'bDzpk_bZNM',
  'column-reverse': 'bDzpk_eUXf',
  'row': 'bDzpk_qOas',
  'row-reverse': 'bDzpk_sGoV',
  'wrap--wrap': 'bDzpk_dyGy',
  'wrap--wrap-reverse': 'bDzpk_cdHk',
  'wrapItems': 'bDzpk_ePRQ',
  'justifyItems--start': 'bDzpk_busO',
  'justifyItems--end': 'bDzpk_crdn',
  'justifyItems--center': 'bDzpk_eRIA',
  'justifyItems--space-around': 'bDzpk_flTs',
  'justifyItems--space-between': 'bDzpk_oDLF',
  'alignItems--center': 'bDzpk_fZWR',
  'alignItems--start': 'bDzpk_cCxO',
  'alignItems--end': 'bDzpk_fncw',
  'alignItems--stretch': 'bDzpk_cQFX'
};

/**
---
category: components
---
@module Flex
**/
var Flex = (_dec = (0, _deprecated.deprecated)('8.0.0', {
  inline: 'display',
  wrapItems: 'wrap',
  visualDeug: 'withVisualDebug'
}), _dec2 = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Flex, _Component);

  var _super = (0, _createSuper2.default)(Flex);

  function Flex() {
    (0, _classCallCheck2.default)(this, Flex);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Flex, [{
    key: "renderChildren",
    value: function renderChildren(children) {
      var _this = this;

      return _react.Children.map(children, function (child) {
        if (child) {
          if ((0, _matchComponentTypes.matchComponentTypes)(child, ['Item'])) {
            return (0, _safeCloneElement.safeCloneElement)(child, (0, _objectSpread2.default)({
              withVisualDebug: _this.props.withVisualDebug || _this.props.visualDebug
            }, child.props, {
              /* child visualDebug prop should override parent */
              direction: _this.props.direction.replace(/-reverse/, '')
            }));
          } else {
            return child;
          }
        } else {
          return null;
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classes;

      var _this$props = this.props,
          as = _this$props.as,
          elementRef = _this$props.elementRef,
          direction = _this$props.direction,
          height = _this$props.height,
          display = _this$props.display,
          margin = _this$props.margin,
          padding = _this$props.padding,
          justifyItems = _this$props.justifyItems,
          textAlign = _this$props.textAlign,
          withVisualDebug = _this$props.withVisualDebug,
          width = _this$props.width,
          wrap = _this$props.wrap,
          visualDebug = _this$props.visualDebug,
          wrapItems = _this$props.wrapItems,
          inline = _this$props.inline;
      var children = (0, _callRenderProp.callRenderProp)(this.props.children); // When flex direction is row, 'center' is the most useful default because it
      // vertically aligns Items. For column direction, though, we want 'stretch'.

      var alignItems = this.props.alignItems || (direction === 'column' || direction === 'column-reverse' ? 'stretch' : 'center');
      var backwardsDisplay = inline ? 'inline-flex' : null;
      var classes = (_classes = {}, (0, _defineProperty2.default)(_classes, styles.root, true), (0, _defineProperty2.default)(_classes, styles["justifyItems--".concat(justifyItems)], true), (0, _defineProperty2.default)(_classes, styles["alignItems--".concat(alignItems)], true), (0, _defineProperty2.default)(_classes, styles["wrap--".concat(wrap)], wrap !== 'no-wrap'), (0, _defineProperty2.default)(_classes, styles.wrapItems, wrapItems), _classes);

      if (children && _react.default.Children.count(children) > 0) {
        return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, (0, _passthroughProps.passthroughProps)(this.props), {
          className: (0, _classnames.default)(classes, styles[direction]),
          elementRef: elementRef,
          as: as,
          display: backwardsDisplay || display,
          width: width,
          height: height,
          margin: margin,
          padding: padding,
          textAlign: textAlign,
          withVisualDebug: withVisualDebug || visualDebug
        }), this.renderChildren(children));
      } else {
        return null;
      }
    }
  }]);
  Flex.displayName = "Flex";
  return Flex;
}(_react.Component), _class2.Item = _index.Item, _class2.propTypes = {
  /**
   * It's recommended that you use `Flex.Item` for children, but you can also pass any markup or a function
   * returning markup. Note that if you do not use `Flex.Item`, the `withVisualDebug` and `direction` props
   * will not automatically be set on the children.
   */
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),

  /**
   * the element type to render as
   */
  as: _propTypes.default.elementType,

  /**
   * provides a reference to the underlying html root element
   */
  elementRef: _propTypes.default.func,

  /**
   * Sets the height of the component's container (optional)
   */
  height: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),

  /**
   * Sets the width of the component's container (optional)
   */
  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),

  /**
   * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
   * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
   * familiar CSS-like shorthand. For example: `margin="small auto large"`.
   */
  margin: _ThemeablePropTypes.ThemeablePropTypes.spacing,

  /**
   * Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,
   * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
   * familiar CSS-like shorthand. For example: `padding="small x-large large"`.
   */
  padding: _ThemeablePropTypes.ThemeablePropTypes.spacing,

  /**
   * Sets the CSS display rule for the component's container
   */
  display: _propTypes.default.oneOf(['flex', 'inline-flex']),

  /**
   * Designates the text alignment
   */
  textAlign: _propTypes.default.oneOf(['start', 'center', 'end']),

  /**
   * Sets the flex-direction to row (horizontal) or column (vertical)
   */
  direction: _propTypes.default.oneOf(['row', 'column', 'row-reverse', 'column-reverse']),

  /**
   * Aligns Flex.Items on the vertical axis (horizontal if direction is column)
   */
  alignItems: _propTypes.default.oneOf(['center', 'start', 'end', 'stretch']),

  /**
   * Aligns Flex.Items on the horizontal axis (vertical if direction is column)
   */
  justifyItems: _propTypes.default.oneOf(['center', 'start', 'end', 'space-around', 'space-between']),

  /**
   * Determines if the Flex.Items should wrap when they exceed their container's width
   */
  wrap: _propTypes.default.oneOf(['wrap', 'no-wrap', 'wrap-reverse']),

  /**
   * Activate a dotted outline around the component to make building your
   * layout easier
   */
  withVisualDebug: _propTypes.default.bool,

  /* eslint-disable react/require-default-props */

  /**
   * __Deprecated - use 'display'__
   */
  inline: _propTypes.default.bool,

  /**
   * __Deprecated - use 'wrap'__
   */
  wrapItems: _propTypes.default.bool,

  /**
   * __Deprecated - use 'withVisualDebug'__
   */
  visualDebug: _propTypes.default.bool
  /* eslint-enable react/require-default-props */

}, _class2.defaultProps = {
  children: null,
  as: 'span',
  elementRef: function elementRef(el) {},
  direction: 'row',
  justifyItems: 'start',
  display: 'flex',
  withVisualDebug: false,
  wrap: 'no-wrap',
  width: void 0,
  height: void 0,
  padding: void 0,
  margin: void 0,
  alignItems: void 0,
  textAlign: void 0
}, _temp)) || _class) || _class);
exports.Flex = Flex;
var _default = Flex;
exports.default = _default;