import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import { warn as _warn } from "@instructure/console";

var _dec, _dec2, _dec3, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import { View } from '@instructure/ui-view';
import { themeable, ThemeablePropTypes } from '@instructure/ui-themeable';
import { hasVisibleChildren } from '@instructure/ui-a11y-utils';
import { isActiveElement, findFocusable } from '@instructure/ui-dom-utils';
import { deprecated, getElementType, getInteraction, matchComponentTypes, passthroughProps, callRenderProp } from '@instructure/ui-react-utils';
import { testable } from '@instructure/ui-testable';
var styles = {
  componentId: 'fbyHH',
  template: function template(theme) {
    return "\n\n.fbyHH_bGBk,a.fbyHH_bGBk,button.fbyHH_bGBk{box-sizing:border-box;font-family:".concat(theme.fontFamily || 'inherit', ";font-weight:").concat(theme.fontWeight || 'inherit', ";outline-color:transparent;outline-offset:0.25rem;outline-style:").concat(theme.focusOutlineStyle || 'inherit', ";outline-width:").concat(theme.focusOutlineWidth || 'inherit', ";transition:outline-color 0.2s;vertical-align:baseline}\n\n.fbyHH_bGBk:focus,a.fbyHH_bGBk:focus,button.fbyHH_bGBk:focus{outline-color:").concat(theme.focusOutlineColor || 'inherit', "}\n\n.fbyHH_bGBk[aria-disabled],a.fbyHH_bGBk[aria-disabled],button.fbyHH_bGBk[aria-disabled]{cursor:not-allowed;opacity:0.5;pointer-events:none}\n\n.fbyHH_bGBk::-moz-focus-inner,a.fbyHH_bGBk::-moz-focus-inner,button.fbyHH_bGBk::-moz-focus-inner{border:0}\n\na.fbyHH_bGBk,button.fbyHH_bGBk{color:").concat(theme.color || 'inherit', ";cursor:pointer}\n\na.fbyHH_bGBk.fbyHH_vIby,button.fbyHH_bGBk.fbyHH_vIby{-webkit-text-decoration:").concat(theme.textDecorationWithinText || 'inherit', ";text-decoration:").concat(theme.textDecorationWithinText || 'inherit', "}\n\na.fbyHH_bGBk.fbyHH_bSMN,button.fbyHH_bGBk.fbyHH_bSMN{-webkit-text-decoration:").concat(theme.textDecorationOutsideText || 'inherit', ";text-decoration:").concat(theme.textDecorationOutsideText || 'inherit', "}\n\na.fbyHH_bGBk:focus,button.fbyHH_bGBk:focus{color:").concat(theme.color || 'inherit', "}\n\na.fbyHH_bGBk:active,a.fbyHH_bGBk:hover,button.fbyHH_bGBk:active,button.fbyHH_bGBk:hover{color:").concat(theme.hoverColor || 'inherit', "}\n\na.fbyHH_bGBk:active.fbyHH_vIby,a.fbyHH_bGBk:hover.fbyHH_vIby,button.fbyHH_bGBk:active.fbyHH_vIby,button.fbyHH_bGBk:hover.fbyHH_vIby{-webkit-text-decoration:").concat(theme.hoverTextDecorationWithinText || 'inherit', ";text-decoration:").concat(theme.hoverTextDecorationWithinText || 'inherit', "}\n\na.fbyHH_bGBk:active.fbyHH_bSMN,a.fbyHH_bGBk:hover.fbyHH_bSMN,button.fbyHH_bGBk:active.fbyHH_bSMN,button.fbyHH_bGBk:hover.fbyHH_bSMN{-webkit-text-decoration:").concat(theme.hoverTextDecorationOutsideText || 'inherit', ";text-decoration:").concat(theme.hoverTextDecorationOutsideText || 'inherit', "}\n\n.fbyHH_bGBk.fbyHH_dQmH,a.fbyHH_bGBk.fbyHH_dQmH:link,a.fbyHH_bGBk.fbyHH_dQmH:visited,button.fbyHH_bGBk.fbyHH_dQmH{color:").concat(theme.colorInverse || 'inherit', "}\n\n.fbyHH_bGBk.fbyHH_dQmH:focus,a.fbyHH_bGBk.fbyHH_dQmH:link:focus,a.fbyHH_bGBk.fbyHH_dQmH:visited:focus,button.fbyHH_bGBk.fbyHH_dQmH:focus{outline-color:").concat(theme.focusInverseOutlineColor || 'inherit', "}\n\n.fbyHH_bGBk.fbyHH_dQmH:active,.fbyHH_bGBk.fbyHH_dQmH:focus,.fbyHH_bGBk.fbyHH_dQmH:hover,a.fbyHH_bGBk.fbyHH_dQmH:link:active,a.fbyHH_bGBk.fbyHH_dQmH:link:focus,a.fbyHH_bGBk.fbyHH_dQmH:link:hover,a.fbyHH_bGBk.fbyHH_dQmH:visited:active,a.fbyHH_bGBk.fbyHH_dQmH:visited:focus,a.fbyHH_bGBk.fbyHH_dQmH:visited:hover,button.fbyHH_bGBk.fbyHH_dQmH:active,button.fbyHH_bGBk.fbyHH_dQmH:focus,button.fbyHH_bGBk.fbyHH_dQmH:hover{color:").concat(theme.colorInverse || 'inherit', "}\n\nbutton.fbyHH_bGBk{-moz-appearance:none;-ms-user-select:text;-webkit-appearance:none;-webkit-user-select:text;appearance:none;background:none;border:none;cursor:pointer;font-size:1em;margin:0;padding:0;text-align:inherit;user-select:text}\n\n[dir=ltr] button.fbyHH_bGBk,[dir=rtl] button.fbyHH_bGBk{text-align:inherit}\n\n.fbyHH_dnnz{box-sizing:border-box;font-size:").concat(theme.iconSize || 'inherit', "}\n\n.fbyHH_ddMx .fbyHH_dnnz{-webkit-padding-end:").concat(theme.iconPlusTextMargin || 'inherit', ";-webkit-padding-start:0;padding-inline-end:").concat(theme.iconPlusTextMargin || 'inherit', ";padding-inline-start:0}\n\n[dir=ltr] .fbyHH_ddMx .fbyHH_dnnz{padding-left:0;padding-right:").concat(theme.iconPlusTextMargin || 'inherit', "}\n\n[dir=rtl] .fbyHH_ddMx .fbyHH_dnnz{padding-left:").concat(theme.iconPlusTextMargin || 'inherit', ";padding-right:0}\n\n.fbyHH_bkXt .fbyHH_dnnz{-webkit-padding-end:0;-webkit-padding-start:").concat(theme.iconPlusTextMargin || 'inherit', ";padding-inline-end:0;padding-inline-start:").concat(theme.iconPlusTextMargin || 'inherit', "}\n\n[dir=ltr] .fbyHH_bkXt .fbyHH_dnnz{padding-left:").concat(theme.iconPlusTextMargin || 'inherit', ";padding-right:0}\n\n[dir=rtl] .fbyHH_bkXt .fbyHH_dnnz{padding-left:0;padding-right:").concat(theme.iconPlusTextMargin || 'inherit', "}\n\n.fbyHH_FcDy.fbyHH_bkXt,.fbyHH_FcDy.fbyHH_ddMx{align-items:center}");
  },
  'root': 'fbyHH_bGBk',
  'isWithinText': 'fbyHH_vIby',
  'isOutsideText': 'fbyHH_bSMN',
  'color--link-inverse': 'fbyHH_dQmH',
  'icon': 'fbyHH_dnnz',
  'iconPlacement--start': 'fbyHH_ddMx',
  'iconPlacement--end': 'fbyHH_bkXt',
  'truncates': 'fbyHH_FcDy'
};
import theme from "./theme.js";
/**
---
category: components
---
**/

var Link = (_dec = deprecated('8.0.0', {
  linkRef: 'elementRef',
  variant: 'color'
}), _dec2 = testable(), _dec3 = themeable(theme, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Link, _Component);

  var _super = _createSuper(Link);

  function Link() {
    var _this;

    _classCallCheck(this, Link);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      hasFocus: false
    };

    _this.handleElementRef = function (el) {
      var _this$props = _this.props,
          elementRef = _this$props.elementRef,
          linkRef = _this$props.linkRef;
      _this._link = el;
      if (typeof linkRef === 'function') linkRef(el);
      if (typeof elementRef === 'function') elementRef(el);
    };

    _this.handleClick = function (event) {
      var onClick = _this.props.onClick;

      var _assertThisInitialize = _assertThisInitialized(_this),
          interaction = _assertThisInitialize.interaction;

      if (interaction === 'disabled') {
        event.preventDefault();
        event.stopPropagation();
      } else if (typeof onClick === 'function') {
        onClick(event);
      }
    };

    _this.handleFocus = function (event) {
      _this.setState({
        hasFocus: true
      });

      if (typeof _this.props.onFocus === 'function') {
        _this.props.onFocus(event);
      }
    };

    _this.handleBlur = function (event) {
      _this.setState({
        hasFocus: false
      });

      if (typeof _this.props.onBlur === 'function') {
        _this.props.onBlur(event);
      }
    };

    return _this;
  }

  _createClass(Link, [{
    key: "focus",
    value: function focus() {
      this._link && this._link.focus();
    }
  }, {
    key: "renderIcon",
    value: function renderIcon() {
      /*#__PURE__*/

      /*#__PURE__*/
      _warn( // if display prop is used, warn about icon or TruncateText
      this.props.display === void 0, '[Link] Using the display property with an icon may cause layout issues.');

      return /*#__PURE__*/React.createElement("span", {
        className: styles.icon
      }, callRenderProp(this.props.renderIcon));
    }
  }, {
    key: "render",
    value: function render() {
      var _classes;

      var _this$props2 = this.props,
          children = _this$props2.children,
          onClick = _this$props2.onClick,
          color = _this$props2.color,
          href = _this$props2.href,
          margin = _this$props2.margin,
          renderIcon = _this$props2.renderIcon,
          iconPlacement = _this$props2.iconPlacement,
          isWithinText = _this$props2.isWithinText,
          variant = _this$props2.variant,
          props = _objectWithoutProperties(_this$props2, ["children", "onClick", "color", "href", "margin", "renderIcon", "iconPlacement", "isWithinText", "variant"]);

      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles['color--link-inverse'], variant === 'inverse' || color === 'link-inverse'), _defineProperty(_classes, styles["iconPlacement--".concat(iconPlacement)], renderIcon && this.hasVisibleChildren), _defineProperty(_classes, styles.truncates, this.containsTruncateText), _defineProperty(_classes, styles["is".concat(isWithinText ? 'Within' : 'Outside', "Text")], true), _classes);
      var interaction = this.interaction;
      var isDisabled = interaction === 'disabled';
      var role = onClick && this.element !== 'button' ? 'button' : null;
      var type = this.element === 'button' || this.element === 'input' ? 'button' : null;
      var tabIndex = role === 'button' && !isDisabled ? '0' : null;
      return /*#__PURE__*/React.createElement(View, Object.assign({}, passthroughProps(props), {
        elementRef: this.handleElementRef,
        as: this.element,
        display: this.display,
        margin: margin,
        href: href,
        onClick: this.handleClick,
        onFocus: this.handleFocus,
        onBlur: this.handleBlur,
        "aria-disabled": isDisabled ? 'true' : null,
        role: role,
        type: type,
        tabIndex: tabIndex,
        className: classnames(classes)
      }), renderIcon && iconPlacement === 'start' && this.renderIcon(), children, renderIcon && iconPlacement === 'end' && this.renderIcon());
    }
  }, {
    key: "containsTruncateText",
    get: function get() {
      var truncateText = false;
      React.Children.forEach(this.props.children, function (child) {
        if (child && matchComponentTypes(child, ['TruncateText'])) {
          truncateText = true;
        }
      });

      /*#__PURE__*/

      /*#__PURE__*/
      _warn( // if display prop is used, warn about icon or TruncateText
      !truncateText || this.props.display === void 0, '[Link] Using the display property with TruncateText may cause layout issues.');

      return truncateText;
    }
  }, {
    key: "display",
    get: function get() {
      if (this.props.display) {
        return this.props.display; // user-entered display property
      }

      var containsTruncateText = this.containsTruncateText;

      if (this.props.renderIcon) {
        return containsTruncateText ? 'inline-flex' : 'inline-block';
      } else {
        return containsTruncateText ? 'block' : 'auto';
      }
    }
  }, {
    key: "interaction",
    get: function get() {
      return getInteraction({
        props: this.props,
        interactionTypes: ['disabled']
      });
    }
  }, {
    key: "element",
    get: function get() {
      return getElementType(Link, this.props);
    }
  }, {
    key: "focused",
    get: function get() {
      return isActiveElement(this._link);
    }
  }, {
    key: "focusable",
    get: function get() {
      return findFocusable(this._link);
    }
  }, {
    key: "hasVisibleChildren",
    get: function get() {
      return hasVisibleChildren(this.props.children);
    }
  }]);

  Link.displayName = "Link";
  return Link;
}(Component), _class2.propTypes = {
  /**
   * The text and/or icon displayed by the link
   */
  children: PropTypes.node.isRequired,

  /**
   * Sets the link's `href` attribute
   */
  href: PropTypes.string,

  /**
   * Designates Link's text color to accommodate light and dark backgrounds
   */
  color: PropTypes.oneOf(['link', 'link-inverse']),

  /**
   * Provides a reference to the underlying HTML element
   */
  elementRef: PropTypes.func,

  /**
   * The element type to render as (will default to `<a>` if href is provided)
   */
  as: PropTypes.elementType,

  /**
   * Determines if the link is enabled or disabled
   */
  interaction: PropTypes.oneOf(['enabled', 'disabled']),

  /**
   * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
   * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
   * familiar CSS-like shorthand. For example: `margin="small auto large"`.
   */
  margin: ThemeablePropTypes.spacing,

  /**
   * Add an SVG icon to the Link. Do not add icons directly as
   * children.
   */
  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),

  /**
   * Place the icon before or after the text in the Link.
   */
  iconPlacement: PropTypes.oneOf(['start', 'end']),

  /**
   * Set the CSS display property of the Link element. 'auto' sets no display property.
   */
  display: PropTypes.oneOf(['auto', 'block', 'inline-block', 'flex', 'inline-flex']),

  /**
   * Set `false` to remove default underline if Link does not appear inline with text
   */
  isWithinText: PropTypes.bool,

  /**
   * Fires when the Link is clicked
   */
  onClick: PropTypes.func,

  /**
   * Fires when the Link gains focus
   */
  onFocus: PropTypes.func,

  /**
   * Fires when the Link loses focus
   */
  onBlur: PropTypes.func,

  /* eslint-disable react/require-default-props */

  /**
   * __deprecated: use elementRef__
   */
  linkRef: PropTypes.func,

  /**
   * __deprecated: use color__
   */
  variant: PropTypes.oneOf(['default', 'inverse'])
}, _class2.defaultProps = {
  href: void 0,
  elementRef: void 0,
  // Leave interaction default undefined so that `disabled` can also be supplied
  interaction: void 0,
  margin: void 0,
  renderIcon: void 0,
  display: void 0,
  color: 'link',
  as: void 0,
  iconPlacement: 'start',
  isWithinText: true,
  onClick: void 0,
  onFocus: void 0,
  onBlur: void 0
}, _temp)) || _class) || _class) || _class);
export default Link;
export { Link };