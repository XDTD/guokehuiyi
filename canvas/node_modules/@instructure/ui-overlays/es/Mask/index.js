import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import noScroll from 'no-scroll';
import { themeable } from '@instructure/ui-themeable';
import { ensureSingleChild, omitProps } from '@instructure/ui-react-utils';
var styles = {
  componentId: 'fvvQs',
  template: function template(theme) {
    return "\n\n.fvvQs_bGBk{background:".concat(theme.background || 'inherit', ";border:").concat(theme.borderWidth || 'inherit', " solid ").concat(theme.borderColor || 'inherit', ";border-radius:").concat(theme.borderRadius || 'inherit', ";bottom:0;box-sizing:border-box;display:flex;justify-content:center;left:0;outline:none;overflow:auto;position:absolute;right:0;top:0;z-index:").concat(theme.zIndex || 'inherit', "}\n\n.fvvQs_bGBk:focus{border-color:").concat(theme.focusBorderColor || 'inherit', "}\n\n.fvvQs_cMOR{position:fixed}\n\n.fvvQs_dacV{align-items:flex-start}\n\n.fvvQs_cwzs{align-items:center}\n\n.fvvQs_cGWj{align-items:flex-end}\n\n.fvvQs_eFiI{align-items:stretch}");
  },
  'root': 'fvvQs_bGBk',
  'fullscreen': 'fvvQs_cMOR',
  'top': 'fvvQs_dacV',
  'center': 'fvvQs_cwzs',
  'bottom': 'fvvQs_cGWj',
  'stretch': 'fvvQs_eFiI'
};
import theme from "./theme.js";
/**
---
category: components/utilities
---
**/

var Mask = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(Mask, _Component);

  var _super = _createSuper(Mask);

  function Mask() {
    var _this;

    _classCallCheck(this, Mask);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.handleElementRef = function (el) {
      _this.props.elementRef(el);
    };

    _this.contentRef = function (el) {
      _this._content = el;
    };

    return _this;
  }

  _createClass(Mask, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.fullscreen) {
        noScroll.on();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.props.fullscreen) {
        noScroll.off();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      var content = ensureSingleChild(this.props.children, {
        ref: this.contentRef
      });
      var classes = classnames((_classnames = {}, _defineProperty(_classnames, styles.root, true), _defineProperty(_classnames, styles[this.props.placement], true), _defineProperty(_classnames, styles.fullscreen, this.props.fullscreen), _classnames));

      var props = _objectSpread({}, omitProps(this.props, Mask.propTypes), {
        className: classes,
        ref: this.handleElementRef
      });

      if (typeof this.props.onClick === 'function') {
        props.onClick = this.props.onClick;
        props.tabIndex = -1;
      }

      return /*#__PURE__*/React.createElement("span", props, content);
    }
  }]);

  Mask.displayName = "Mask";
  return Mask;
}(Component), _class2.propTypes = {
  onDismiss: PropTypes.func,
  placement: PropTypes.oneOf(['top', 'center', 'bottom', 'stretch']),
  fullscreen: PropTypes.bool,
  children: PropTypes.node,
  onClick: PropTypes.func,
  elementRef: PropTypes.func
}, _class2.defaultProps = {
  placement: 'center',
  fullscreen: false,
  onDismiss: void 0,
  children: null,
  onClick: void 0,
  elementRef: function elementRef(el) {}
}, _temp)) || _class);
export default Mask;
export { Mask };