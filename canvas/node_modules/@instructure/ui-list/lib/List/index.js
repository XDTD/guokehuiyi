"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ListItem", {
  enumerable: true,
  get: function get() {
    return _index2.ListItem;
  }
});
exports.List = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _View = require("@instructure/ui-view/lib/View");

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _ThemeablePropTypes = require("@instructure/ui-themeable/lib/ThemeablePropTypes.js");

var _passthroughProps = require("@instructure/ui-react-utils/lib/passthroughProps.js");

var _safeCloneElement = require("@instructure/ui-react-utils/lib/safeCloneElement.js");

var _deprecated = require("@instructure/ui-react-utils/lib/deprecated.js");

var _Children = require("@instructure/ui-prop-types/lib/Children.js");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _index = require("../InlineList/index.js");

var _index2 = require("./ListItem/index.js");

var _theme = _interopRequireDefault(require("./theme.js"));

var _dec, _dec2, _dec3, _class, _class2, _temp;

var styles = {
  componentId: 'fClCc',
  template: function template(theme) {
    return "\n\n.fClCc_bGBk{-webkit-padding-end:0;-webkit-padding-start:".concat(theme.listPadding || 'inherit', ";padding-inline-end:0;padding-inline-start:").concat(theme.listPadding || 'inherit', "}\n\n[dir=ltr] .fClCc_bGBk{padding-left:").concat(theme.listPadding || 'inherit', ";padding-right:0}\n\n[dir=rtl] .fClCc_bGBk{padding-left:0;padding-right:").concat(theme.listPadding || 'inherit', "}\n\n.fClCc_bGBk.fClCc_enMC{-webkit-padding-end:0;-webkit-padding-start:calc(").concat(theme.listPadding || 'inherit', "/2);counter-reset:ol-counter;list-style-type:none;padding-inline-end:0;padding-inline-start:calc(").concat(theme.listPadding || 'inherit', "/2)}\n\n[dir=ltr] .fClCc_bGBk.fClCc_enMC{padding-left:calc(").concat(theme.listPadding || 'inherit', "/2);padding-right:0}\n\n[dir=rtl] .fClCc_bGBk.fClCc_enMC{padding-left:0;padding-right:calc(").concat(theme.listPadding || 'inherit', "/2)}\n\n.fClCc_bGBk.fClCc_enMC li:before{-webkit-margin-end:").concat(theme.orderedNumberMargin || 'inherit', ";-webkit-margin-start:0;content:counters(ol-counter,\".\") \".\";counter-increment:ol-counter;font-weight:").concat(theme.orderedNumberFontWeight || 'inherit', ";margin-inline-end:").concat(theme.orderedNumberMargin || 'inherit', ";margin-inline-start:0}\n\n[dir=ltr] .fClCc_bGBk.fClCc_enMC li:before{margin-left:0;margin-right:").concat(theme.orderedNumberMargin || 'inherit', "}\n\n[dir=rtl] .fClCc_bGBk.fClCc_enMC li:before{margin-left:").concat(theme.orderedNumberMargin || 'inherit', ";margin-right:0}\n\n.fClCc_bGBk.fClCc_fLbg{-webkit-padding-start:0;list-style-type:none;padding-inline-start:0}\n\n[dir=ltr] .fClCc_bGBk.fClCc_fLbg{padding-left:0}\n\n[dir=rtl] .fClCc_bGBk.fClCc_fLbg{padding-right:0}");
  },
  'root': 'fClCc_bGBk',
  'ordered': 'fClCc_enMC',
  'unstyled': 'fClCc_fLbg'
};

/**
---
category: components
---
**/
var List = (_dec = (0, _deprecated.deprecated)('8.0.0', {
  variant: 'List with the isUnstyled boolean or InlineList'
}), _dec2 = (0, _testable.testable)(), _dec3 = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(List, _Component);

  var _super = (0, _createSuper2.default)(List);

  function List() {
    (0, _classCallCheck2.default)(this, List);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(List, [{
    key: "renderChildren",
    value: function renderChildren() {
      var _this = this;

      return _react.Children.map(this.props.children, function (child) {
        if (!child) return; // ignore null, falsy children

        return (0, _safeCloneElement.safeCloneElement)(child, {
          isUnstyled: _this.props.isUnstyled,
          delimiter: _this.props.delimiter,
          size: _this.props.size,
          spacing: _this.props.itemSpacing
        });
      });
    }
  }, {
    key: "renderInlineChild",
    value: function renderInlineChild() {
      return _react.Children.map(this.props.children, function (child) {
        if (!child) return;
        return /*#__PURE__*/_react.default.createElement(_index.InlineList.Item, child.props);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classes;

      var _this$props = this.props,
          as = _this$props.as,
          margin = _this$props.margin,
          isUnstyled = _this$props.isUnstyled,
          elementRef = _this$props.elementRef,
          variant = _this$props.variant,
          rest = (0, _objectWithoutProperties2.default)(_this$props, ["as", "margin", "isUnstyled", "elementRef", "variant"]);
      var classes = (_classes = {}, (0, _defineProperty2.default)(_classes, styles.root, true), (0, _defineProperty2.default)(_classes, styles.unstyled, isUnstyled === true || variant === 'unstyled'), (0, _defineProperty2.default)(_classes, styles.ordered, as === 'ol'), (0, _defineProperty2.default)(_classes, styles.inline, variant === 'inline'), _classes);

      if (!variant || variant === 'default' || variant === 'unstyled') {
        return /*#__PURE__*/_react.default.createElement(_View.View, Object.assign({}, (0, _passthroughProps.passthroughProps)(rest), {
          className: (0, _classnames.default)(classes),
          as: as,
          margin: margin,
          elementRef: elementRef,
          display: "block"
        }), this.renderChildren());
      } else {
        return /*#__PURE__*/_react.default.createElement(_index.InlineList, this.props, this.renderInlineChild());
      }
    }
  }]);
  List.displayName = "List";
  return List;
}(_react.Component), _class2.propTypes = {
  /**
   * Only accepts `<List.Item>` as a child
   */
  children: _Children.Children.oneOf([_index2.ListItem]),
  as: _propTypes.default.oneOf(['ul', 'ol']),

  /**
   * One of: none, dashed, solid
   */
  delimiter: _deprecated.deprecated.deprecatePropValues(_propTypes.default.oneOf(['none', 'dashed', 'solid', 'pipe', 'slash', 'arrow']), ['pipe', 'slash', 'arrow'], function (_ref) {
    var propValue = _ref.propValue;
    return "with 'delimiter' set to ".concat(propValue, " will only be available when using [InlineList] as of version 8.0.0.");
  }),

  /**
   * When set, renders the List Items without a list style type.
   */
  isUnstyled: _propTypes.default.bool,

  /**
   * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
   * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
   * familiar CSS-like shorthand. For example: `margin="small auto large"`.
   */
  margin: _ThemeablePropTypes.ThemeablePropTypes.spacing,
  size: _propTypes.default.oneOf(['small', 'medium', 'large']),

  /**
   * Sets the margin separating each ListItem.
   */
  itemSpacing: _propTypes.default.oneOf(['none', 'xxx-small', 'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large']),
  elementRef: _propTypes.default.func,

  /**
   * __deprecated__ Option will be to use the isUnstyled prop or the InlineList component
   */
  variant: _propTypes.default.oneOf(['default', 'unstyled', 'inline'])
}, _class2.defaultProps = {
  children: null,
  as: 'ul',
  delimiter: 'none',
  isUnstyled: false,
  margin: void 0,
  size: 'medium',
  itemSpacing: 'none',
  elementRef: function elementRef(el) {},
  variant: void 0
}, _class2.Item = _index2.ListItem, _temp)) || _class) || _class) || _class);
exports.List = List;
var _default = List;
exports.default = _default;