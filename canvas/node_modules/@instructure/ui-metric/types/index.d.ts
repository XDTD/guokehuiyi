import * as React from 'react';

export type MetricTextAlign = "start" | "center" | "end";

export type MetricRenderLabel = ((...args: any[])=>any) | React.ReactNode;

export type MetricRenderValue = ((...args: any[])=>any) | React.ReactNode;

export interface MetricProps {
    textAlign?: MetricTextAlign;
    renderLabel?: MetricRenderLabel;
    renderValue?: MetricRenderValue;
    /**
     * Set to true when a child of MetricGroup so the appropriate
     * aria labels get set
     */
    isGroupChild?: boolean;
}

export class Metric extends React.Component<MetricProps, any> {
    render(): JSX.Element;

}




export interface MetricGroupProps {
    /**
     * children of type `Metric`
     */
    children?: any;
}

export class MetricGroup extends React.Component<MetricGroupProps, any> {
    render(): JSX.Element;

}




export interface MetricsListProps {
    /**
     * children of type `MetricsList.Item`
     */
    children?: any;
}

export class MetricsList extends React.Component<MetricsListProps, any> {
    render(): JSX.Element;

}

