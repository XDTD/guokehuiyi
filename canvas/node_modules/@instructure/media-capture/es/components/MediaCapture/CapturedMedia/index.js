import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import MediaStream from '../MediaStream';
import MediaPlayback from '../MediaPlayback';
import { READY, RECORDING, PREVIEWSAVE, STARTING, SAVING, LOADING, FINISHED } from '../../../constants/CaptureStates';
/**
---
private: true
---
**/

var CapturedMedia = /*#__PURE__*/function (_Component) {
  _inherits(CapturedMedia, _Component);

  var _super = _createSuper(CapturedMedia);

  function CapturedMedia() {
    _classCallCheck(this, CapturedMedia);

    return _super.apply(this, arguments);
  }

  _createClass(CapturedMedia, [{
    key: "render",
    value: function render() {
      var _this = this;

      var MediaStreamGuard = function MediaStreamGuard(state) {
        if (![LOADING, READY, STARTING, RECORDING].includes(state)) return null;
        return /*#__PURE__*/React.createElement(MediaStream, {
          captureState: state,
          videoDeviceId: _this.props.videoDeviceId,
          audioDeviceId: _this.props.audioDeviceId,
          requestAudioOnly: _this.props.requestAudioOnly,
          actions: _objectSpread({}, _this.props.actions)
        });
      };

      var MediaPlaybackGuard = function MediaPlaybackGuard(state) {
        if (![PREVIEWSAVE, SAVING, FINISHED].includes(state)) return null;
        return /*#__PURE__*/React.createElement(MediaPlayback, {
          videoSrc: _this.props.videoSrc
        });
      };

      return MediaStreamGuard(this.props.captureState) || MediaPlaybackGuard(this.props.captureState);
    }
  }]);

  CapturedMedia.displayName = "CapturedMedia";
  return CapturedMedia;
}(Component);

CapturedMedia.propTypes = {
  captureState: PropTypes.string.isRequired,
  videoSrc: PropTypes.string.isRequired,
  videoDeviceId: PropTypes.string.isRequired,
  audioDeviceId: PropTypes.string.isRequired,
  requestAudioOnly: PropTypes.bool.isRequired,
  actions: PropTypes.object.isRequired // eslint-disable-line react/forbid-prop-types

};
export { CapturedMedia as default };