import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { requestAnimationFrame } from '@instructure/ui-dom-utils';
import themeable from '@instructure/ui-themeable';
import { translate } from '../../../constants/translated/translations';
var styles = {
  componentId: 'dJGBS',
  template: function template(theme) {
    return "\n\n.dJGBS_Cjqa[value]{-webkit-appearance:none;appearance:none;background-color:".concat(theme.backgroundColor || 'inherit', ";border:none;box-sizing:border-box;flex:1;height:100%;width:auto}\n\n.dJGBS_Cjqa[value]::-webkit-progress-bar{background-color:").concat(theme.backgroundColor || 'inherit', "}\n\n.dJGBS_Cjqa[value]::-webkit-progress-value{background:linear-gradient(90deg,").concat(theme.meterColorStart || 'inherit', " 0%,").concat(theme.meterColorEnd || 'inherit', ")}\n\n.dJGBS_Cjqa[value]::-moz-progress-bar{background:linear-gradient(90deg,").concat(theme.meterColorStart || 'inherit', " 0%,").concat(theme.meterColorEnd || 'inherit', ")}\n\n.dJGBS_Cjqa[value]::-ms-fill{background:linear-gradient(90deg,").concat(theme.meterColorStart || 'inherit', " 0%,").concat(theme.meterColorEnd || 'inherit', ");border:none}");
  },
  'progress': 'dJGBS_Cjqa'
};
import theme from './theme';
var MULTIPLIER = 1.5;
/**
---
private: true
---
**/

var AudioSignal = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(AudioSignal, _Component);

  var _super = _createSuper(AudioSignal);

  function AudioSignal(props) {
    var _this;

    _classCallCheck(this, AudioSignal);

    _this = _super.call(this, props);
    _this.state = {
      value: 0
    };
    _this.raf = [];
    return _this;
  }

  _createClass(AudioSignal, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.raf.forEach(function (request) {
        request.cancel();
      });
      this.raf = [];
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.raf.push(requestAnimationFrame(function () {
        _this2.getVolume();
      }));
    }
  }, {
    key: "getVolume",
    value: function getVolume() {
      var _this3 = this;

      var volume = Math.floor(this.props.soundMeter.volume * 100) * MULTIPLIER;

      if (volume !== this.state.value) {
        this.setState({
          value: volume
        });
      }

      this.raf.push(requestAnimationFrame(function () {
        _this3.getVolume();
      }));
    }
  }, {
    key: "render",
    value: function render() {
      /* eslint-disable jsx-a11y/no-redundant-roles, jsx-a11y/no-noninteractive-element-to-interactive-role */
      return /*#__PURE__*/React.createElement("progress", {
        className: styles.progress,
        role: "progressbar",
        "aria-valuemin": "0",
        "aria-valuenow": this.state.value,
        "aria-valuemax": "100",
        "aria-label": translate('ARIA_VOLUME'),
        max: "100",
        value: this.state.value
      });
      /* eslint-enable jsx-a11y/no-redundant-roles, jsx-a11y/no-noninteractive-element-to-interactive-role */
    }
  }]);

  AudioSignal.displayName = "AudioSignal";
  return AudioSignal;
}(Component), _class2.propTypes = {
  soundMeter: PropTypes.shape({
    volume: PropTypes.number.isRequired
  }).isRequired
}, _temp)) || _class);
export default AudioSignal;