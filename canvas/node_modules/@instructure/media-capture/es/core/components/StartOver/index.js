import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Button } from '@instructure/ui-buttons';
import { View } from '@instructure/ui-view';
import { IconResetSolid } from '@instructure/ui-icons';
import { translate } from '../../../constants/translated/translations';
/**
---
private: true
---
**/

var _ref = /*#__PURE__*/React.createElement(View, {
  position: "absolute",
  insetInlineStart: "1rem",
  insetBlockStart: ".5rem"
}, /*#__PURE__*/React.createElement(IconResetSolid, null));

var _ref2 = /*#__PURE__*/React.createElement(IconResetSolid, null);

var StartOver = /*#__PURE__*/function (_Component) {
  _inherits(StartOver, _Component);

  var _super = _createSuper(StartOver);

  function StartOver() {
    _classCallCheck(this, StartOver);

    return _super.apply(this, arguments);
  }

  _createClass(StartOver, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          actions = _this$props.actions,
          fluidWidth = _this$props.fluidWidth; // Button comes in block and inline shapes,
      // and for former we have to position icon absolutely,
      // so that it doesn't shift centered text to the right

      return fluidWidth ? /*#__PURE__*/React.createElement(Button, {
        onClick: actions.startoverClicked,
        color: "secondary",
        display: "block",
        textAlign: "center"
      }, _ref, translate('START_OVER')) : /*#__PURE__*/React.createElement(Button, {
        onClick: actions.startoverClicked,
        color: "secondary",
        renderIcon: _ref2
      }, translate('START_OVER'));
    }
  }]);

  StartOver.displayName = "StartOver";
  return StartOver;
}(Component);

StartOver.propTypes = {
  actions: PropTypes.shape({
    startoverClicked: PropTypes.func.isRequired
  }).isRequired,
  fluidWidth: PropTypes.bool
};
StartOver.defaultProps = {
  fluidWidth: false
};
export { StartOver as default };