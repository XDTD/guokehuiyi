import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Button } from '@instructure/ui-buttons';
import { TextInput } from '@instructure/ui-text-input';
import themeable from '@instructure/ui-themeable';
import StartOver from '../StartOver';
import { SAVING } from '../../../constants/CaptureStates';
import { translate } from '../../../constants/translated/translations';
var styles = {
  componentId: 'bJOVo',
  template: function template(theme) {
    return "\n\n.bJOVo_bDqC{margin-bottom:12px;width:100%}\n\n.bJOVo_cbTY{display:flex;flex-direction:column;justify-content:space-between;width:100%}\n\n.bJOVo_dQII{flex:1}\n\n.bJOVo_btKH{flex:1;margin-left:0;margin-top:12px}\n\n@media (min-width:480px){.bJOVo_bDqC{margin-bottom:24px}.bJOVo_cbTY,.bJOVo_bDqC{margin-left:auto;margin-right:auto;width:440px}.bJOVo_cbTY{flex-direction:row}.bJOVo_btKH{margin-left:8px;margin-top:0}}";
  },
  'videoTitleContainer': 'bJOVo_bDqC',
  'buttonContainer': 'bJOVo_cbTY',
  'startOverButton': 'bJOVo_dQII',
  'saveMediaButton': 'bJOVo_btKH'
};
/**
---
private: true
---
**/

var FileSave = (_dec = themeable(function () {}, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(FileSave, _Component);

  var _super = _createSuper(FileSave);

  function FileSave(props) {
    var _this;

    _classCallCheck(this, FileSave);

    _this = _super.call(this, props);

    _this.onChange = function () {
      _this.setState({
        fileName: _this.input.value
      });
    };

    _this.saveClicked = function (e) {
      e.preventDefault();

      _this.props.actions.saveClicked(_this.state.fileName.trim());
    };

    _this.state = {
      fileName: _this.props.fileName
    };
    return _this;
  }

  _createClass(FileSave, [{
    key: "renderStartOverButton",
    value: function renderStartOverButton() {
      return /*#__PURE__*/React.createElement(StartOver, {
        actions: _objectSpread({}, this.props.actions),
        fluidWidth: true
      });
    }
  }, {
    key: "renderSaveMediaButton",
    value: function renderSaveMediaButton() {
      return /*#__PURE__*/React.createElement(Button, {
        type: "submit",
        onClick: this.saveClicked,
        disabled: this.props.captureState === SAVING,
        color: "success",
        display: "block",
        textAlign: "center"
      }, translate('SAVE_MEDIA'));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
        className: styles.videoTitleContainer
      }, /*#__PURE__*/React.createElement(TextInput, {
        label: translate('SR_FILE_INPUT'),
        placeholder: this.props.fileName,
        onChange: this.onChange,
        inputRef: function inputRef(e) {
          _this2.input = e;
        }
      })), /*#__PURE__*/React.createElement("div", {
        className: styles.buttonContainer
      }, /*#__PURE__*/React.createElement("div", {
        className: styles.startOverButton
      }, this.renderStartOverButton()), /*#__PURE__*/React.createElement("div", {
        className: styles.saveMediaButton
      }, this.renderSaveMediaButton())));
    }
  }]);

  FileSave.displayName = "FileSave";
  return FileSave;
}(Component), _class2.propTypes = {
  captureState: PropTypes.string.isRequired,
  fileName: PropTypes.string.isRequired,
  actions: PropTypes.shape({
    saveClicked: PropTypes.func.isRequired,
    startoverClicked: PropTypes.func.isRequired
  }).isRequired
}, _temp)) || _class);
export { FileSave as default };