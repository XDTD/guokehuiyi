"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _uiThemeable = _interopRequireDefault(require("@instructure/ui-themeable"));

var _PlayPauseButton = _interopRequireDefault(require("../PlayPauseButton"));

var _Timebar = _interopRequireDefault(require("../Timebar"));

var VideoStates = _interopRequireWildcard(require("../videoStates"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'ssryr',
  template: function template(theme) {
    return "\n\n.ssryr_crZr{bottom:0;cursor:pointer;display:flex;height:2.8125rem;opacity:1;position:absolute;transition:height 0.25s ease-in-out,opacity 0.25s linear;width:100%}\n\n.ssryr_duqv{height:0;opacity:0}";
  },
  'container': 'ssryr_crZr',
  'hidden': 'ssryr_duqv'
};

/**
---
private: true
---
**/
var VideoPlayerControls = (_dec = (0, _uiThemeable.default)({}, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(VideoPlayerControls, _Component);

  var _super = (0, _createSuper2.default)(VideoPlayerControls);

  function VideoPlayerControls() {
    var _this;

    (0, _classCallCheck2.default)(this, VideoPlayerControls);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.preventBubbling = function (e) {
      e.stopPropagation();

      _this.props.actions.showControls();
    };

    _this.handleTimebarClick = function (time) {
      _this.props.actions.seek(time);
    };

    _this.buttonRef = function (el) {
      _this.playButton = el;
    };

    _this.timebarRef = function (el) {
      _this.timebar = el;
    };

    return _this;
  }

  (0, _createClass2.default)(VideoPlayerControls, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.props.onMount({
        playButton: this.playButton,
        timebar: this.timebar
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classes;

      var _this$props = this.props,
          state = _this$props.state,
          duration = _this$props.duration,
          buffered = _this$props.buffered,
          currentTime = _this$props.currentTime,
          showControls = _this$props.showControls,
          actions = _this$props.actions,
          videoId = _this$props.videoId;
      var classes = (_classes = {}, (0, _defineProperty2.default)(_classes, styles.container, true), (0, _defineProperty2.default)(_classes, styles.hidden, !showControls), _classes);
      /* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */

      return /*#__PURE__*/_react.default.createElement("div", {
        className: (0, _classnames.default)(classes),
        onClick: this.preventBubbling
      }, /*#__PURE__*/_react.default.createElement(_PlayPauseButton.default, {
        variant: state,
        onClick: actions.togglePlay,
        videoId: videoId,
        buttonRef: this.buttonRef
      }), /*#__PURE__*/_react.default.createElement(_Timebar.default, {
        duration: duration,
        currentTime: currentTime,
        buffered: buffered,
        videoId: videoId,
        onClick: this.handleTimebarClick,
        timebarRef: this.timebarRef
      }));
      /* eslint-enable jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */
    }
  }]);
  VideoPlayerControls.displayName = "VideoPlayerControls";
  return VideoPlayerControls;
}(_react.Component), _class2.propTypes = {
  actions: _propTypes.default.shape({
    seek: _propTypes.default.func.isRequired,
    togglePlay: _propTypes.default.func.isRequired,
    showControls: _propTypes.default.func.isRequired
  }).isRequired,

  /**
   * Id of the video element. Used to ensure
   * correct aria properties are applied.
   */
  videoId: _propTypes.default.string.isRequired,
  state: _propTypes.default.oneOf(Object.values(VideoStates)).isRequired,

  /**
   * Number of seconds that have been buffered.
   */
  buffered: _propTypes.default.number,

  /**
   * The current playback time in seconds.
   */
  currentTime: _propTypes.default.number,

  /**
   * The length of the video in seconds.
   */
  duration: _propTypes.default.number,
  showControls: _propTypes.default.bool,
  onMount: _propTypes.default.func
}, _class2.defaultProps = {
  showControls: false,
  duration: 0,
  buffered: 0,
  currentTime: 0,
  onMount: function onMount(_ref) {
    var playButton = _ref.playButton,
        timebar = _ref.timebar;
  }
}, _temp)) || _class);
var _default = VideoPlayerControls;
exports.default = _default;