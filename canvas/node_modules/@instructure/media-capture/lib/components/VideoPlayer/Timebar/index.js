"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _uiThemeable = _interopRequireDefault(require("@instructure/ui-themeable"));

var _translations = require("../../../constants/translated/translations");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'VnuFg',
  template: function template(theme) {
    return "\n\n.VnuFg_crZr{align-items:center;display:flex;flex:100%;position:relative}\n\n.VnuFg_crZr:focus{box-shadow:0 0 0 ".concat(theme.focusOutlineWeight || 'inherit', " ").concat(theme.focusOutlineColor || 'inherit', ";outline:none}\n\n.VnuFg_fDVa,.VnuFg_fWyE,.VnuFg_fuBh{height:100%}\n\n.VnuFg_fDVa{background-color:").concat(theme.bufferedBackgroundColor || 'inherit', "}\n\n.VnuFg_fuBh{background-color:").concat(theme.progressBackgroundColor || 'inherit', "}\n\n.VnuFg_fWyE{background-color:").concat(theme.backgroundColor || 'inherit', ";flex:1}\n\n.VnuFg_gaKF{color:").concat(theme.timestampColor || 'inherit', ";font-size:").concat(theme.timestampFontSize || 'inherit', ";font-weight:").concat(theme.timestampFontWeight || 'inherit', ";justify-content:space-between;left:0;padding:").concat(theme.timestampPadding || 'inherit', ";right:0}\n\n.VnuFg_gaKF,.VnuFg_eHzx{align-items:center;bottom:0;display:flex;position:absolute;top:0}\n\n.VnuFg_eHzx{background-color:").concat(theme.tooltipBackgroundColor || 'inherit', ";flex-direction:column;width:").concat(theme.tooltipLineWidth || 'inherit', "}\n\n.VnuFg_eHzx:focus{outline:none}\n\n.VnuFg_duqv{visibility:hidden}\n\n.VnuFg_chlC{align-items:center;display:flex;flex-direction:column;margin-top:").concat(theme.tooltipTop || 'inherit', "}\n\n.VnuFg_dkLi{background-color:").concat(theme.tooltipBackgroundColor || 'inherit', ";color:").concat(theme.tooltipColor || 'inherit', ";font-size:").concat(theme.tooltipFontSize || 'inherit', ";font-weight:").concat(theme.tooltipFontWeight || 'inherit', ";padding:").concat(theme.tooltipPadding || 'inherit', "}\n\n.VnuFg_eWjx{border-left:").concat(theme.tooltipCaretSize || 'inherit', " solid transparent;border-right:").concat(theme.tooltipCaretSize || 'inherit', " solid transparent;border-top:").concat(theme.tooltipCaretSize || 'inherit', " solid ").concat(theme.tooltipBackgroundColor || 'inherit', ";height:0;width:0}\n\n.VnuFg_fWhq{background-color:").concat(theme.tooltipBackgroundColor || 'inherit', ";height:").concat(theme.tooltipLineHeight || 'inherit', ";width:").concat(theme.tooltipLineWidth || 'inherit', "}");
  },
  'container': 'VnuFg_crZr',
  'buffered': 'VnuFg_fDVa',
  'rest': 'VnuFg_fWyE',
  'viewed': 'VnuFg_fuBh',
  'timebarContent': 'VnuFg_gaKF',
  'tooltipContainer': 'VnuFg_eHzx',
  'hidden': 'VnuFg_duqv',
  'tooltipContent': 'VnuFg_chlC',
  'tooltip': 'VnuFg_dkLi',
  'tooltipCaret': 'VnuFg_eWjx',
  'tooltipLine': 'VnuFg_fWhq'
};

function formatTime(time) {
  if (time && typeof time === 'number' && time < Infinity) {
    return new Date(1000 * time).toISOString().substr(14, 5);
  }

  return '00:00';
}
/**
---
private: true
---
**/


var Timebar = (_dec = (0, _uiThemeable.default)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Timebar, _Component);

  var _super = (0, _createSuper2.default)(Timebar);

  function Timebar(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Timebar);
    _this = _super.call(this, props);

    _this.handleTimebarScrub = function (e) {
      var relativeCoordinate = e.pageX - e.currentTarget.getBoundingClientRect().left;
      var position = relativeCoordinate / e.currentTarget.offsetWidth;
      var timestamp = position * _this.props.duration;

      if (timestamp < 0 || timestamp > _this.props.duration) {
        // Since the tooltip is techincally inside of the container, we have to
        // manually dismiss the tooltip if the user moves the pointer outside of
        // the container.
        _this.handleTimebarLeave();
      } else {
        var tooltipCenterOffset = _this.tooltip.offsetWidth / 2;

        _this.setState({
          hoverTime: timestamp,
          tooltipPosition: Math.min(relativeCoordinate, e.currentTarget.offsetWidth) - tooltipCenterOffset
        });
      }
    };

    _this.handleTimebarLeave = function () {
      _this.setState({
        hoverTime: null,
        tooltipPosition: null
      });
    };

    _this.handleTimebarClick = function () {
      if (_this.state.hoverTime) {
        _this.props.onClick(_this.state.hoverTime);
      }
    };

    _this.state = {
      timebarHoverTime: null,
      timebarTooltipPosition: null
    };
    return _this;
  }

  (0, _createClass2.default)(Timebar, [{
    key: "render",
    value: function render() {
      var _tooltipClasses,
          _this2 = this;

      var _this$props = this.props,
          duration = _this$props.duration,
          buffered = _this$props.buffered,
          currentTime = _this$props.currentTime,
          videoId = _this$props.videoId,
          timebarRef = _this$props.timebarRef;
      var viewedPercent = currentTime / duration * 100 || 0;
      var bufferedPercent = buffered / duration * 100 - viewedPercent || 0;
      var currentTimeText = formatTime(currentTime);
      var timebarProps = {
        className: styles.container,
        onMouseMove: this.handleTimebarScrub,
        onMouseLeave: this.handleTimebarLeave,
        onClick: this.handleTimebarClick,
        ref: timebarRef,
        tabIndex: '0',
        role: 'slider',
        'aria-label': (0, _translations.translate)('ARIA_TIMEBAR_LABEL'),
        'aria-valuemin': 0,
        'aria-valuemax': duration,
        'aria-valuenow': currentTime,
        'aria-valuetext': currentTimeText,
        'aria-controls': videoId
      };
      var tooltipClasses = (_tooltipClasses = {}, (0, _defineProperty2.default)(_tooltipClasses, styles.tooltipContainer, true), (0, _defineProperty2.default)(_tooltipClasses, styles.hidden, !this.state.hoverTime), _tooltipClasses);
      return /*#__PURE__*/_react.default.createElement("div", timebarProps, /*#__PURE__*/_react.default.createElement("div", {
        className: styles.timebarContent
      }, /*#__PURE__*/_react.default.createElement("time", null, currentTimeText), /*#__PURE__*/_react.default.createElement("time", null, formatTime(duration))), /*#__PURE__*/_react.default.createElement("div", {
        className: styles.viewed,
        style: {
          flexBasis: "".concat(viewedPercent, "%")
        }
      }), /*#__PURE__*/_react.default.createElement("div", {
        className: styles.buffered,
        style: {
          flexBasis: "".concat(bufferedPercent, "%")
        }
      }), /*#__PURE__*/_react.default.createElement("div", {
        className: styles.rest
      }), /*#__PURE__*/_react.default.createElement("div", {
        className: (0, _classnames.default)(tooltipClasses),
        style: {
          left: "".concat(this.state.tooltipPosition, "px")
        },
        ref: function ref(e) {
          _this2.tooltip = e;
        },
        tabIndex: "-1"
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: styles.tooltipContent
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: styles.tooltip
      }, formatTime(this.state.hoverTime)), /*#__PURE__*/_react.default.createElement("div", {
        className: styles.tooltipCaret
      }))));
    }
  }]);
  Timebar.displayName = "Timebar";
  return Timebar;
}(_react.Component), _class2.propTypes = {
  /**
   * Id of the video element. Used to ensure
   * correct aria properties are applied.
   */
  videoId: _propTypes.default.string.isRequired,

  /**
   * Number of seconds that have been buffered.
   */
  buffered: _propTypes.default.number,

  /**
   * The current playback time in seconds.
   */
  currentTime: _propTypes.default.number,

  /**
   * The length of the video in seconds.
   */
  duration: _propTypes.default.number,

  /**
   * Function invoked when timebar is clicked.
   * Invoked with time (in seconds) at the coordinates clicked.
   */
  onClick: _propTypes.default.func,
  timebarRef: _propTypes.default.func
}, _class2.defaultProps = {
  duration: 0,
  buffered: 0,
  currentTime: 0,
  onClick: function onClick(time) {},
  timebarRef: function timebarRef(ref) {}
}, _temp)) || _class);
var _default = Timebar;
exports.default = _default;