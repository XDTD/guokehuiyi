"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _MediaStream = _interopRequireDefault(require("../MediaStream"));

var _MediaPlayback = _interopRequireDefault(require("../MediaPlayback"));

var _CaptureStates = require("../../../constants/CaptureStates");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
---
private: true
---
**/
var CapturedMedia = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(CapturedMedia, _Component);

  var _super = (0, _createSuper2.default)(CapturedMedia);

  function CapturedMedia() {
    (0, _classCallCheck2.default)(this, CapturedMedia);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(CapturedMedia, [{
    key: "render",
    value: function render() {
      var _this = this;

      var MediaStreamGuard = function MediaStreamGuard(state) {
        if (![_CaptureStates.LOADING, _CaptureStates.READY, _CaptureStates.STARTING, _CaptureStates.RECORDING].includes(state)) return null;
        return /*#__PURE__*/_react.default.createElement(_MediaStream.default, {
          captureState: state,
          videoDeviceId: _this.props.videoDeviceId,
          audioDeviceId: _this.props.audioDeviceId,
          requestAudioOnly: _this.props.requestAudioOnly,
          actions: (0, _objectSpread2.default)({}, _this.props.actions)
        });
      };

      var MediaPlaybackGuard = function MediaPlaybackGuard(state) {
        if (![_CaptureStates.PREVIEWSAVE, _CaptureStates.SAVING, _CaptureStates.FINISHED].includes(state)) return null;
        return /*#__PURE__*/_react.default.createElement(_MediaPlayback.default, {
          videoSrc: _this.props.videoSrc
        });
      };

      return MediaStreamGuard(this.props.captureState) || MediaPlaybackGuard(this.props.captureState);
    }
  }]);
  CapturedMedia.displayName = "CapturedMedia";
  return CapturedMedia;
}(_react.Component);

exports.default = CapturedMedia;
CapturedMedia.propTypes = {
  captureState: _propTypes.default.string.isRequired,
  videoSrc: _propTypes.default.string.isRequired,
  videoDeviceId: _propTypes.default.string.isRequired,
  audioDeviceId: _propTypes.default.string.isRequired,
  requestAudioOnly: _propTypes.default.bool.isRequired,
  actions: _propTypes.default.object.isRequired // eslint-disable-line react/forbid-prop-types

};