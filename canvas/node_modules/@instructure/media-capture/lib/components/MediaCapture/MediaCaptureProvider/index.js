"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _redux = require("redux");

var _reactRedux = require("react-redux");

var CaptureActions = _interopRequireWildcard(require("../../../actions"));

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
---
private: true
---
**/
var MediaCaptureProvider = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(MediaCaptureProvider, _React$Component);

  var _super = (0, _createSuper2.default)(MediaCaptureProvider);

  function MediaCaptureProvider() {
    (0, _classCallCheck2.default)(this, MediaCaptureProvider);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(MediaCaptureProvider, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.props.onClose(this.props.state.captureState);
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
        store: this.props.store
      }, this.props.render({
        state: (0, _objectSpread2.default)({}, this.props.state),
        actions: (0, _objectSpread2.default)({}, this.props.actions)
      }));
    }
  }]);
  MediaCaptureProvider.displayName = "MediaCaptureProvider";
  return MediaCaptureProvider;
}(_react.default.Component);

MediaCaptureProvider.propTypes = {
  render: _propTypes.default.func.isRequired,
  store: _propTypes.default.shape({
    dispatch: _propTypes.default.func,
    getState: _propTypes.default.func,
    subscribe: _propTypes.default.func
  }).isRequired,
  state: _propTypes.default.shape({
    captureState: _propTypes.default.string,
    videoSrc: _propTypes.default.string,
    msg: _propTypes.default.string
  }).isRequired,
  actions: _propTypes.default.shape({
    audioDeviceChanged: _propTypes.default.func.isRequired,
    closeClicked: _propTypes.default.func.isRequired,
    countdownComplete: _propTypes.default.func.isRequired,
    finishClicked: _propTypes.default.func.isRequired,
    onComplete: _propTypes.default.func.isRequired,
    startClicked: _propTypes.default.func.isRequired,
    startoverClicked: _propTypes.default.func.isRequired,
    titleEdited: _propTypes.default.func.isRequired,
    videoDeviceChanged: _propTypes.default.func.isRequired,
    deviceRequestAccepted: _propTypes.default.func.isRequired,
    mediaRecorderInitialized: _propTypes.default.func.isRequired,
    videoObjectGenerated: _propTypes.default.func.isRequired,
    errorOccurred: _propTypes.default.func.isRequired,
    devicesFound: _propTypes.default.func.isRequired,
    soundMeterInitialized: _propTypes.default.func.isRequired
  }).isRequired,
  onClose: _propTypes.default.func
};
MediaCaptureProvider.defaultProps = {
  onClose: function onClose(captureState) {}
};

var mapStateToProps = function mapStateToProps(state) {
  return {
    state: state
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    actions: (0, _redux.bindActionCreators)(CaptureActions, dispatch)
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MediaCaptureProvider);

exports.default = _default;