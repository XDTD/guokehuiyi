"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiButtons = require("@instructure/ui-buttons");

var _uiIcons = require("@instructure/ui-icons");

var _uiMenu = require("@instructure/ui-menu");

var _uiView = require("@instructure/ui-view");

var _uiThemeable = _interopRequireDefault(require("@instructure/ui-themeable"));

var _translations = require("../../../constants/translated/translations");

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'blHEn',
  template: function template(theme) {
    return "\n\n.blHEn_daKB{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:11.875rem}";
  },
  'truncated': 'blHEn_daKB'
};
/**
---
private: true
---
**/

var DeviceSelection = (_dec = (0, _uiThemeable.default)({}, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(DeviceSelection, _Component);

  var _super = (0, _createSuper2.default)(DeviceSelection);

  function DeviceSelection(props) {
    var _this;

    (0, _classCallCheck2.default)(this, DeviceSelection);
    _this = _super.call(this, props);

    _this.deviceSelected = function (e, _ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 1),
          newSelected = _ref2[0];

      if (!newSelected) return;

      if (newSelected === 'video_off') {
        _this.props.actions["".concat(_this.props.variant, "DeviceDisabled")]();
      } else {
        _this.props.actions["".concat(_this.props.variant, "DeviceChanged")](newSelected);
      }
    };

    _this.state = (0, _objectSpread2.default)({
      showMenu: false
    }, _this.config(_this.props.variant));
    return _this;
  }

  (0, _createClass2.default)(DeviceSelection, [{
    key: "config",
    value: function config(variant) {
      var VARIANTS = {
        audio: {
          label: (0, _translations.translate)('DEVICE_AUDIO'),
          icon: _uiIcons.IconMicLine
        },
        video: {
          label: (0, _translations.translate)('DEVICE_VIDEO'),
          icon: _uiIcons.IconVideoLine
        }
      };
      return VARIANTS[variant];
    }
  }, {
    key: "formatLabel",
    value: function formatLabel(device) {
      if (device.label && device.label.length > 0) {
        return device.label;
      } else {
        return device.deviceId;
      }
    }
  }, {
    key: "isDeviceSelected",
    value: function isDeviceSelected(id) {
      return id === this.props.selectedDeviceId;
    }
  }, {
    key: "menuItems",
    value: function menuItems() {
      var _this2 = this;

      var menuItems = this.props.devices.map(function (d) {
        return /*#__PURE__*/_react.default.createElement(_uiMenu.MenuItem, {
          key: "".concat(d.deviceId),
          value: "".concat(d.deviceId)
        }, /*#__PURE__*/_react.default.createElement("div", {
          className: styles.truncated
        }, _this2.formatLabel(d)));
      });

      if (this.props.variant == "video") {
        menuItems.push( /*#__PURE__*/_react.default.createElement(_uiMenu.MenuItem, {
          key: 'video_off',
          value: 'video_off'
        }, /*#__PURE__*/_react.default.createElement("div", {
          className: styles.truncated
        }, (0, _translations.translate)('NO_WEBCAM'))));
      }

      return menuItems;
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      return /*#__PURE__*/_react.default.createElement(_uiMenu.Menu, {
        placement: "bottom",
        show: this.state.showMenu,
        onToggle: function onToggle(showMenu) {
          return _this3.setState({
            showMenu: showMenu
          });
        },
        onKeyUp: function onKeyUp(e) {
          if (e.key === 'Escape') {
            e.preventDefault(); // don't let the handler on the <Modal> cause the whole modal to close

            _this3.setState({
              showMenu: false
            });
          }
        },
        trigger: /*#__PURE__*/_react.default.createElement(_uiButtons.Button, {
          fluidWidth: this.props.fluidWidth,
          variant: "light",
          icon: this.state.icon
        }, /*#__PURE__*/_react.default.createElement(_uiView.View, {
          display: "block",
          textAlign: "center"
        }, this.state.label))
      }, /*#__PURE__*/_react.default.createElement(_uiMenu.MenuItemGroup, {
        label: "",
        selected: this.props.selectedDeviceId ? [this.props.selectedDeviceId] : ['video_off'],
        onSelect: this.deviceSelected
      }, this.menuItems()));
    }
  }]);
  DeviceSelection.displayName = "DeviceSelection";
  return DeviceSelection;
}(_react.Component), _class2.propTypes = {
  variant: _propTypes.default.oneOf(['audio', 'video']).isRequired,
  selectedDeviceId: _propTypes.default.string.isRequired,
  devices: _propTypes.default.arrayOf(_propTypes.default.shape({
    deviceId: _propTypes.default.string,
    label: _propTypes.default.string
  })).isRequired,
  actions: _propTypes.default.shape({
    audioDeviceChanged: _propTypes.default.func.isRequired,
    videoDeviceChanged: _propTypes.default.func.isRequired,
    videoDeviceDisabled: _propTypes.default.func.isRequired
  }).isRequired,
  fluidWidth: _propTypes.default.bool
}, _class2.defaultProps = {
  fluidWidth: false
}, _temp)) || _class);
var _default = DeviceSelection;
exports.default = _default;