"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireDefault(require("react"));

var _index = _interopRequireDefault(require("../index"));

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var MediaCaptureFixture = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(MediaCaptureFixture, _React$Component);

  var _super = (0, _createSuper2.default)(MediaCaptureFixture);

  function MediaCaptureFixture() {
    var _this;

    (0, _classCallCheck2.default)(this, MediaCaptureFixture);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.onCompleted = function (file) {
      var a = document.createElement('a');
      a.href = URL.createObjectURL(file); // eslint-disable-line compat/compat

      a.download = "".concat(file.name, ".webm");
      a.style = {
        display: 'none'
      };

      _this.container.append(a);

      a.click();
      URL.revokeObjectURL(a.href); // eslint-disable-line compat/compat

      a.remove();
      console.log("MediaCapture completed!"); // eslint-disable-line no-console
    };

    _this.onClose = function (state) {
      console.log("MediaCapture closed: ".concat(state)); // eslint-disable-line no-console
    };

    return _this;
  }

  (0, _createClass2.default)(MediaCaptureFixture, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/_react.default.createElement("div", {
        ref: function ref(el) {
          return _this2.container = el;
        }
      }, /*#__PURE__*/_react.default.createElement(_index.default, {
        onCompleted: this.onCompleted,
        onClose: this.onClose
      }));
    }
  }]);
  MediaCaptureFixture.displayName = "MediaCaptureFixture";
  return MediaCaptureFixture;
}(_react.default.Component);

exports.default = MediaCaptureFixture;