"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _uiThemeable = _interopRequireDefault(require("@instructure/ui-themeable"));

var _uiView = require("@instructure/ui-view");

var _uiResponsive = require("@instructure/ui-responsive");

var _VideoDeviceSelection = _interopRequireDefault(require("../VideoDeviceSelection"));

var _AudioDeviceSelection = _interopRequireDefault(require("../AudioDeviceSelection"));

var _SystemAudioSelection = _interopRequireDefault(require("../SystemAudioSelection"));

var _CTA = _interopRequireDefault(require("../CTA"));

var _FileSave = _interopRequireDefault(require("../../../core/components/FileSave"));

var _redux = require("redux");

var _reactRedux = require("react-redux");

var CaptureActions = _interopRequireWildcard(require("../../../actions"));

var _Message = _interopRequireDefault(require("../../MediaCapture/Message"));

var _translations = require("../../../constants/translated/translations");

var _CaptureStates = require("../../../constants/CaptureStates");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _class;

var styles = {
  componentId: 'cSEeR',
  template: function template(theme) {
    return "\n\n.cSEeR_crZr{box-sizing:border-box;margin-top:1em;padding-left:12px;padding-right:12px;width:100%}\n\n.cSEeR_cBdJ{margin-bottom:0.75em;margin-top:0.75em}\n\n@media (min-width:768px){.cSEeR_crZr{margin-left:auto;margin-right:auto;padding-left:0;padding-right:0}}";
  },
  'container': 'cSEeR_crZr',
  'my3': 'cSEeR_cBdJ'
};

/**
---
private: true
---
**/
var Controller = (_dec = (0, _uiThemeable.default)(_theme.default, styles), _dec(_class = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Controller, _Component);

  var _super = (0, _createSuper2.default)(Controller);

  function Controller() {
    (0, _classCallCheck2.default)(this, Controller);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Controller, [{
    key: "isDisabled",
    value: function isDisabled() {
      return this.props.captureState === _CaptureStates.STARTING;
    }
  }, {
    key: "isAllDeviceBlocked",
    value: function isAllDeviceBlocked(devices) {
      return devices.every(function (device) {
        return device.deviceId === '';
      });
    }
  }, {
    key: "renderSettings",
    value: function renderSettings() {
      if (this.props.captureState === _CaptureStates.RECORDING) return null;
      var warningMessage = '';
      var micBlocked = this.isAllDeviceBlocked(this.props.devices.audioinput);
      var webcamBlocked = this.isAllDeviceBlocked(this.props.devices.videoinput);
      var numberOfMic = this.props.devices.audioinput.length;
      var numberOfWebcam = this.props.devices.videoinput.length;

      if (micBlocked && webcamBlocked) {
        if (numberOfMic === 0 && numberOfWebcam === 0) {
          warningMessage = (0, _translations.translate)('NO_MIC_AND_WEBCAM_EXIST');
        } else {
          warningMessage = (0, _translations.translate)('MIC_AND_WEBCAM_BLOCKED');
        }
      } else if (micBlocked) {
        if (numberOfMic === 0) {
          warningMessage = (0, _translations.translate)('NO_MIC_EXIST');
        } else {
          warningMessage = (0, _translations.translate)('MIC_BLOCKED');
        }
      } else if (webcamBlocked) {
        if (numberOfWebcam === 0) {
          warningMessage = (0, _translations.translate)('NO_WEBCAM_EXIST');
        } else {
          warningMessage = (0, _translations.translate)('WEBCAM_BLOCKED');
        }
      }

      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, warningMessage ? /*#__PURE__*/_react.default.createElement(_Message.default, {
        msg: warningMessage,
        margin: "0"
      }) : null, /*#__PURE__*/_react.default.createElement("div", {
        className: styles.my3
      }, /*#__PURE__*/_react.default.createElement(_VideoDeviceSelection.default, {
        isDisabled: this.isDisabled()
      })), /*#__PURE__*/_react.default.createElement("div", {
        className: styles.my3
      }, /*#__PURE__*/_react.default.createElement(_AudioDeviceSelection.default, {
        isDisabled: this.isDisabled()
      })), /*#__PURE__*/_react.default.createElement("div", {
        className: styles.my3
      }, /*#__PURE__*/_react.default.createElement(_SystemAudioSelection.default, {
        isDisabled: this.isDisabled()
      })));
    }
  }, {
    key: "renderStart",
    value: function renderStart() {
      var _this = this;

      return /*#__PURE__*/_react.default.createElement("div", {
        className: styles.container
      }, /*#__PURE__*/_react.default.createElement(_uiResponsive.Responsive, {
        match: "media",
        query: {
          small: {
            maxWidth: 480
          }
        }
      }, function (_, match) {
        return /*#__PURE__*/_react.default.createElement(_uiView.View, {
          display: "block",
          margin: "auto",
          maxWidth: "35rem",
          padding: match.includes('small') ? "none" : "small xx-large none"
        }, _this.renderSettings(), /*#__PURE__*/_react.default.createElement(_CTA.default, {
          isDisabled: _this.isDisabled(),
          inStorybook: _this.props.inStorybook
        }));
      }));
    }
  }, {
    key: "renderPreview",
    value: function renderPreview() {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: styles.container
      }, /*#__PURE__*/_react.default.createElement(_FileSave.default, {
        captureState: this.props.captureState,
        fileName: this.props.fileName,
        actions: (0, _objectSpread2.default)({}, this.props.actions)
      }));
    }
  }, {
    key: "render",
    value: function render() {
      switch (this.props.captureState) {
        case _CaptureStates.PREVIEWSAVE:
        case _CaptureStates.SAVING:
          return this.renderPreview();

        case _CaptureStates.RECORDING:
          if (this.props.inStorybook) {
            return this.renderStart();
          }

          return null;

        default:
          return this.renderStart();
      }
    }
  }]);
  Controller.displayName = "Controller";
  return Controller;
}(_react.Component)) || _class);

var mapStateToProps = function mapStateToProps(state) {
  return {
    captureState: state.captureState,
    devices: state.devices,
    fileName: state.fileName
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    actions: (0, _redux.bindActionCreators)(CaptureActions, dispatch)
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Controller);

exports.default = _default;