"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ApplyTextDirection = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _getElementType = require("@instructure/ui-react-utils/lib/getElementType.js");

var _getTextDirection = require("../getTextDirection.js");

var _TextDirectionContext = require("../TextDirectionContext.js");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
---
category: components/utilities
---
**/
var ApplyTextDirection = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(ApplyTextDirection, _Component);

  var _super = (0, _createSuper2.default)(ApplyTextDirection);

  function ApplyTextDirection() {
    var _this;

    (0, _classCallCheck2.default)(this, ApplyTextDirection);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this._defaultDirection = (0, _getTextDirection.getTextDirection)();
    return _this;
  }

  (0, _createClass2.default)(ApplyTextDirection, [{
    key: "getChildContext",
    value: function getChildContext() {
      return _TextDirectionContext.TextDirectionContext.makeTextDirectionContext(this.dir);
    }
  }, {
    key: "render",
    value: function render() {
      var ElementType = (0, _getElementType.getElementType)(ApplyTextDirection, this.props);
      var children = this.props.children;
      return /*#__PURE__*/_react.default.createElement(ElementType, {
        dir: this.dir
      }, typeof children === 'function' ? children(this.dir, this.dir === _TextDirectionContext.TextDirectionContext.DIRECTION.rtl) : children);
    }
  }, {
    key: "dir",
    get: function get() {
      var context = _TextDirectionContext.TextDirectionContext.getTextDirectionContext(this.context) || {};
      return this.props.dir || context.dir || this._defaultDirection;
    }
  }]);
  ApplyTextDirection.displayName = "ApplyTextDirection";
  return ApplyTextDirection;
}(_react.Component);

exports.ApplyTextDirection = ApplyTextDirection;
ApplyTextDirection.propTypes = {
  /**
   * string 'ltr' or 'rtl' representing the document direction
   */
  dir: _propTypes.default.oneOf(['ltr', 'rtl']),

  /**
   * a single child (children must be wrapped in a single component/element) or function
   * returning a child called with the following arguments:
   * @param {string} dir - the string value 'rtl' or 'ltr'
   * @param {Boolean} rtl - boolean value true if the direction is 'rtl'
   */
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),

  /**
   * accepts only one child (children must be wrapped in a single component/element)
   */
  as: _propTypes.default.elementType
};
ApplyTextDirection.defaultProps = {
  dir: void 0,
  as: 'span',
  children: null
};
ApplyTextDirection.DIRECTION = _TextDirectionContext.TextDirectionContext.DIRECTION;
ApplyTextDirection.childContextTypes = _TextDirectionContext.TextDirectionContext.types;
ApplyTextDirection.contextTypes = _TextDirectionContext.TextDirectionContext.types;
var _default = ApplyTextDirection;
exports.default = _default;