import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { View } from '@instructure/ui-view';
import { RangeInput } from '@instructure/ui-range-input';
/**
---
private: true
---
**/

var VolumeSlider = /*#__PURE__*/function (_Component) {
  _inherits(VolumeSlider, _Component);

  var _super = _createSuper(VolumeSlider);

  function VolumeSlider() {
    var _this;

    _classCallCheck(this, VolumeSlider);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.formatValue = function (volume) {
      return parseInt(volume * 100);
    };

    _this.handleOnMouseMove = function () {
      _this.props.handleShowControls();
    };

    return _this;
  }

  _createClass(VolumeSlider, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          value = _this$props.value,
          step = _this$props.step,
          onKeyDown = _this$props.onKeyDown,
          onChange = _this$props.onChange,
          label = _this$props.label;
      return /*#__PURE__*/React.createElement(View, {
        padding: "medium",
        as: "div",
        onMouseMove: this.handleOnMouseMove
      }, /*#__PURE__*/React.createElement(RangeInput, {
        defaultValue: 1,
        value: value,
        max: 1,
        min: 0,
        step: step,
        onKeyDown: onKeyDown,
        onChange: onChange,
        formatValue: this.formatValue,
        displayValue: false,
        label: label
      }));
    }
  }]);

  VolumeSlider.displayName = "VolumeSlider";
  return VolumeSlider;
}(Component);

VolumeSlider.propTypes = {
  value: PropTypes.number.isRequired,
  step: PropTypes.number.isRequired,
  onKeyDown: PropTypes.func.isRequired,
  onChange: PropTypes.func.isRequired,
  label: PropTypes.element.isRequired,
  handleShowControls: PropTypes.func.isRequired
};
export default VolumeSlider;