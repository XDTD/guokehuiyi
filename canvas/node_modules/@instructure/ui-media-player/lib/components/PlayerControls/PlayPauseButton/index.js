"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _uiReactUtils = require("@instructure/ui-react-utils");

var _uiIcons = require("@instructure/ui-icons");

var _uiA11yContent = require("@instructure/ui-a11y-content");

var _PlayerButton = _interopRequireDefault(require("../../PlayerButton"));

var _MediaContext = _interopRequireDefault(require("../../Player/MediaContext"));

var _constants = require("../../../constants");

var _translations = require("../../../constants/translated/translations");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
---
private: true
---
@module PlayPauseButton
**/
var PlayPauseButton = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(PlayPauseButton, _Component);

  var _super = (0, _createSuper2.default)(PlayPauseButton);

  function PlayPauseButton() {
    var _this;

    (0, _classCallCheck2.default)(this, PlayPauseButton);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.focusPlay = function () {
      _this.buttonRef.focus();
    };

    _this.setButtonRef = function (ref) {
      _this.buttonRef = ref;

      if (_this.props.forwardRef) {
        _this.props.forwardRef(ref);
      }
    };

    return _this;
  }

  (0, _createClass2.default)(PlayPauseButton, [{
    key: "config",
    value: function config(variant) {
      var _VARIANTS;

      var VARIANTS = (_VARIANTS = {}, (0, _defineProperty2.default)(_VARIANTS, _constants.PAUSED, {
        label: (0, _translations.translate)('PLAYBACK_PLAY'),
        Icon: _uiIcons.IconPlaySolid
      }), (0, _defineProperty2.default)(_VARIANTS, _constants.ENDED, {
        label: (0, _translations.translate)('PLAYBACK_PLAY'),
        Icon: _uiIcons.IconPlaySolid
      }), (0, _defineProperty2.default)(_VARIANTS, _constants.PLAYING, {
        label: (0, _translations.translate)('PLAYBACK_PAUSE'),
        Icon: _uiIcons.IconPauseSolid
      }), _VARIANTS);
      return VARIANTS[variant];
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/_react.default.createElement(_MediaContext.default.Consumer, null, function (_ref) {
        var state = _ref.state,
            actions = _ref.actions,
            setActions = _ref.setActions,
            fullScreenContainerRef = _ref.fullScreenContainerRef;

        var _this2$config = _this2.config(state.mediaState),
            label = _this2$config.label,
            Icon = _this2$config.Icon;

        setActions({
          focusPlay: _this2.focusPlay
        });
        return /*#__PURE__*/_react.default.createElement(_PlayerButton.default, Object.assign({}, (0, _uiReactUtils.pickProps)(_this2.props, _PlayerButton.default.propTypes), {
          tooltipLabel: label,
          tooltipMountNode: fullScreenContainerRef,
          videoId: state.videoId,
          onClick: actions.togglePlay,
          forwardRef: _this2.setButtonRef
        }), /*#__PURE__*/_react.default.createElement(_uiA11yContent.ScreenReaderContent, null, label), /*#__PURE__*/_react.default.createElement(Icon, {
          size: "x-small"
        }));
      });
    }
  }]);
  PlayPauseButton.displayName = "PlayPauseButton";
  return PlayPauseButton;
}(_react.Component);

exports.default = PlayPauseButton;