"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiReactUtils = require("@instructure/ui-react-utils");

var _uiA11yContent = require("@instructure/ui-a11y-content");

var _uiMenu = require("@instructure/ui-menu");

var _MediaContext = _interopRequireDefault(require("../../Player/MediaContext"));

var _PlayerButton = _interopRequireDefault(require("../../PlayerButton"));

var _PlayerPopover = _interopRequireDefault(require("../../PlayerPopover"));

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
// CustomControl component consumes all PlayerButton propTypes
// except of videoId which is created automatically
var _PlayerButton$propTyp = _PlayerButton.default.propTypes,
    _ = _PlayerButton$propTyp.videoId,
    PlayerButtonPropTypes = (0, _objectWithoutProperties2.default)(_PlayerButton$propTyp, ["videoId"]);
/**
---
private: true
---
@module CustomControl
**/

var CustomControl = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(CustomControl, _Component);

  var _super = (0, _createSuper2.default)(CustomControl);

  function CustomControl() {
    (0, _classCallCheck2.default)(this, CustomControl);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(CustomControl, [{
    key: "renderButton",
    value: function renderButton(videoId, mountNode) {
      var _this$props = this.props,
          tooltipLabel = _this$props.tooltipLabel,
          label = _this$props.label,
          icon = _this$props.icon;
      var tooltipProps = tooltipLabel ? {
        tooltipLabel: tooltipLabel,
        tooltipMountNode: mountNode
      } : {};
      return /*#__PURE__*/_react.default.createElement(_PlayerButton.default, Object.assign({}, (0, _uiReactUtils.pickProps)(this.props, _PlayerButton.default.propTypes), tooltipProps, {
        videoId: videoId
      }), /*#__PURE__*/_react.default.createElement(_uiA11yContent.ScreenReaderContent, null, label), icon);
    }
  }, {
    key: "renderMenu",
    value: function renderMenu(_ref, actions, fullScreenContainerRef) {
      var _this = this;

      var videoId = _ref.videoId,
          showControls = _ref.showControls;
      var _this$props2 = this.props,
          label = _this$props2.label,
          menuItems = _this$props2.menuItems;
      return /*#__PURE__*/_react.default.createElement(_PlayerPopover.default, {
        activateControl: actions.activateControl,
        deactivateControl: actions.deactivateControl,
        showControls: showControls
      }, function (_ref2, togglePopover) {
        var showPopover = _ref2.showPopover;
        return /*#__PURE__*/_react.default.createElement(_uiMenu.Menu, {
          placement: "top",
          trigger: _this.renderButton(videoId, fullScreenContainerRef),
          mountNode: fullScreenContainerRef,
          label: label,
          show: showPopover,
          onToggle: togglePopover
        }, menuItems());
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var variant = this.props.variant;
      return /*#__PURE__*/_react.default.createElement(_MediaContext.default.Consumer, null, function (_ref3) {
        var state = _ref3.state,
            fullScreenContainerRef = _ref3.fullScreenContainerRef,
            actions = _ref3.actions;
        return variant === 'menu' ? _this2.renderMenu(state, actions, fullScreenContainerRef) : /*#__PURE__*/_react.default.createElement("span", null, _this2.renderButton(state.videoId, fullScreenContainerRef));
      });
    }
  }]);
  CustomControl.displayName = "CustomControl";
  return CustomControl;
}(_react.Component);

exports.default = CustomControl;
CustomControl.displayName = 'CustomControl';
CustomControl.propTypes = (0, _objectSpread2.default)({
  variant: _propTypes.default.oneOf(['button', 'menu']),
  label: _propTypes.default.string.isRequired,
  icon: _propTypes.default.node.isRequired,
  menuItems: _propTypes.default.func
}, PlayerButtonPropTypes);
CustomControl.defaultProps = {
  variant: 'button',
  menuItems: function menuItems() {
    return null;
  }
};