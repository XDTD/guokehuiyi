"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiA11yContent = require("@instructure/ui-a11y-content");

var _uiButtons = require("@instructure/ui-buttons");

var _uiMenu = require("@instructure/ui-menu");

var _uiThemeable = _interopRequireDefault(require("@instructure/ui-themeable"));

var _MediaContext = _interopRequireDefault(require("../Player/MediaContext"));

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'bHpCV',
  template: function template(theme) {
    return "\n\n.bHpCV_crZr{margin:".concat(theme.margin || 'inherit', "}");
  },
  'container': 'bHpCV_crZr'
};
var PlayerPlayhead = (_dec = (0, _uiThemeable.default)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(PlayerPlayhead, _Component);

  var _super = (0, _createSuper2.default)(PlayerPlayhead);

  function PlayerPlayhead() {
    var _this;

    (0, _classCallCheck2.default)(this, PlayerPlayhead);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.focusPlayhead = function () {
      _this.buttonRef.focus(); // This is a workaround for an issue caused by the inert polyfill where the polyfill
      // uses a MutationObserver to detect the inert attribute change, and MutationObserver
      // events are asynchronous, so we have to defer focus() to the next tick.
      // https://github.com/WICG/inert/blob/v3.0.0/README.md


      setTimeout(function () {
        _this.buttonRef.focus();
      });
    };

    _this.setButtonRef = function (ref) {
      _this.buttonRef = ref;
    };

    _this.handleOnMouseMove = function (event) {
      event.stopPropagation();
    };

    _this.handleClick = function (event) {
      event.stopPropagation();

      _this.props.onClick(event);
    };

    return _this;
  }

  (0, _createClass2.default)(PlayerPlayhead, [{
    key: "renderButton",
    value: function renderButton() {
      var _this$props = this.props,
          icon = _this$props.icon,
          label = _this$props.label;
      return /*#__PURE__*/_react.default.createElement(_uiButtons.Button, {
        buttonRef: this.setButtonRef,
        icon: icon,
        onMouseMove: this.handleOnMouseMove,
        onClick: this.handleClick,
        variant: "circle-default",
        size: "large"
      }, /*#__PURE__*/_react.default.createElement(_uiA11yContent.ScreenReaderContent, null, label));
    }
  }, {
    key: "renderMenu",
    value: function renderMenu() {
      var _this2 = this;

      var menuItems = this.props.menuItems;
      return /*#__PURE__*/_react.default.createElement(_MediaContext.default.Consumer, null, function (_ref) {
        var setActions = _ref.setActions,
            fullScreenContainerRef = _ref.fullScreenContainerRef;
        setActions({
          focusPlayhead: _this2.focusPlayhead
        });
        return /*#__PURE__*/_react.default.createElement(_uiMenu.Menu, {
          mountNode: fullScreenContainerRef,
          placement: "top",
          trigger: _this2.renderButton()
        }, menuItems);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var variant = this.props.variant;
      return /*#__PURE__*/_react.default.createElement("div", {
        className: styles.container
      }, variant === 'button' ? this.renderButton() : this.renderMenu());
    }
  }]);
  PlayerPlayhead.displayName = "PlayerPlayhead";
  return PlayerPlayhead;
}(_react.Component), _class2.propTypes = {
  icon: _propTypes.default.node,
  label: _propTypes.default.string.isRequired,
  onClick: _propTypes.default.func,
  menuItems: _propTypes.default.arrayOf(_uiMenu.Menu.propTypes.children),
  variant: _propTypes.default.oneOf(['button', 'menu']).isRequired
}, _class2.defaultProps = {
  icon: null,
  onClick: function onClick() {},
  menuItems: null
}, _temp)) || _class);
var _default = PlayerPlayhead;
exports.default = _default;