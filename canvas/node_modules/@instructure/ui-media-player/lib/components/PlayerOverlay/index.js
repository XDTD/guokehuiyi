"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.INSULATE_EVENTS = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiDomUtils = require("@instructure/ui-dom-utils");

var _uiThemeable = _interopRequireDefault(require("@instructure/ui-themeable"));

var _findAncestor = require("../../utils/findAncestor");

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'eSZtx',
  template: function template(theme) {
    return "\n\n.eSZtx_crZr{height:100%;left:0;position:absolute;top:0;width:100%}\n\n.eSZtx_fpTY{pointer-events:none}\n\n.eSZtx_cHdP{background-color:".concat(theme.backgroundColor || 'inherit', "}");
  },
  'container': 'eSZtx_crZr',
  'passthrough': 'eSZtx_fpTY',
  'backdrop': 'eSZtx_cHdP'
};
var INSULATE_EVENTS = ['onKeyDown', 'onKeyPress', 'onKeyUp', 'onMouseDown', 'onClick', 'onMouseUp'];
/**
---
private: true
---
@module PlayerOverlay
**/

exports.INSULATE_EVENTS = INSULATE_EVENTS;
var PlayerOverlay = (_dec = (0, _uiThemeable.default)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(PlayerOverlay, _Component);

  var _super = (0, _createSuper2.default)(PlayerOverlay);

  function PlayerOverlay() {
    var _this;

    (0, _classCallCheck2.default)(this, PlayerOverlay);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.handleEvent = function (event) {
      event.stopPropagation();
    };

    _this.onFocus = function (event) {
      if (_this.overlayRef !== document.activeElement) {
        return;
      }

      var focusable = (0, _uiDomUtils.findFocusable)(_this.overlayRef, function (el) {
        return !(0, _findAncestor.findAncestor)(el, function (node) {
          return node.getAttribute && node.getAttribute('aria-hidden') === 'true';
        });
      });

      if (focusable.length) {
        focusable[0].focus();
      }
    };

    return _this;
  }

  (0, _createClass2.default)(PlayerOverlay, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.renderChildren();
      this.props.setFocusEnabled(this.props.passthrough);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var passthrough = this.props.passthrough;

      if (prevProps.passthrough !== passthrough) {
        this.props.setFocusEnabled(passthrough);
      }

      this.renderChildren();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      _reactDom.default.unmountComponentAtNode(this.overlayRef);

      this.props.setFocusEnabled(true);
    }
  }, {
    key: "renderChildren",
    value: function renderChildren() {
      _reactDom.default.render(this.props.children(this.overlayRef), this.overlayRef);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this,
          _classes;

      var overlayEvents = {};
      INSULATE_EVENTS.forEach(function (eventName) {
        overlayEvents[eventName] = function (event) {
          _this2.handleEvent(event);
        };
      });
      var classes = (_classes = {}, (0, _defineProperty2.default)(_classes, styles.container, true), (0, _defineProperty2.default)(_classes, styles.passthrough, this.props.passthrough), (0, _defineProperty2.default)(_classes, styles.backdrop, this.props.backdrop), _classes); // Native browser behaviour causes the Player parent element to be focused
      // when clicking directly on an overlay that isn't pass-through. Block this
      // default behaviour from happening.

      var insulationProps = this.props.passthrough ? null : {
        onFocus: this.onFocus,
        tabIndex: -1
      };
      return /*#__PURE__*/_react.default.createElement("div", Object.assign({
        className: (0, _classnames.default)(classes),
        ref: function ref(_ref) {
          _this2.overlayRef = _ref;
        }
      }, overlayEvents, insulationProps));
    }
  }]);
  PlayerOverlay.displayName = "PlayerOverlay";
  return PlayerOverlay;
}(_react.Component), _class2.propTypes = {
  children: _propTypes.default.func,
  passthrough: _propTypes.default.bool,
  backdrop: _propTypes.default.bool,
  setFocusEnabled: _propTypes.default.func
}, _class2.defaultProps = {
  children: function children() {},
  passthrough: false,
  backdrop: false,
  setFocusEnabled: function setFocusEnabled() {}
}, _temp)) || _class);
var _default = PlayerOverlay;
exports.default = _default;