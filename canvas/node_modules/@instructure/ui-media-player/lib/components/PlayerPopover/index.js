"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
---
private: true
---
@module PlayerPopover
**/
var PlayerPopover = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(PlayerPopover, _Component);

  var _super = (0, _createSuper2.default)(PlayerPopover);

  function PlayerPopover() {
    var _this;

    (0, _classCallCheck2.default)(this, PlayerPopover);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      showPopover: false
    };

    _this.togglePopover = function () {
      if (_this.state.showPopover) {
        _this.hidePopover();
      } else {
        _this.showPopover();
      }
    };

    _this.hidePopover = function () {
      _this.setState({
        showPopover: false
      });

      _this.props.deactivateControl();
    };

    _this.showPopover = function () {
      _this.props.activateControl();

      _this.setState({
        showPopover: true
      });
    };

    return _this;
  }

  (0, _createClass2.default)(PlayerPopover, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.showControls !== prevProps.showControls && !this.props.showControls) {
        this.hidePopover();
      }
    }
  }, {
    key: "render",
    value: function render() {
      return this.props.children(this.state, this.togglePopover);
    }
  }]);
  PlayerPopover.displayName = "PlayerPopover";
  return PlayerPopover;
}(_react.Component);

PlayerPopover.propTypes = {
  activateControl: _propTypes.default.func,
  deactivateControl: _propTypes.default.func,
  showControls: _propTypes.default.bool.isRequired,
  children: _propTypes.default.func
};
PlayerPopover.defaultProps = {
  activateControl: function activateControl() {},
  deactivateControl: function deactivateControl() {},
  children: null
};
var _default = PlayerPopover;
exports.default = _default;