"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiThemeable = _interopRequireDefault(require("@instructure/ui-themeable"));

var _uiTooltip = require("@instructure/ui-tooltip");

var _MediaContext = _interopRequireDefault(require("../Player/MediaContext"));

var _theme = _interopRequireDefault(require("./theme"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'dAkaU',
  template: function template(theme) {
    return "\n\n.dAkaU_EwaR{align-items:center;background-color:".concat(theme.backgroundColor || 'inherit', ";border:none;color:").concat(theme.color || 'inherit', ";cursor:pointer;display:flex;height:100%;justify-content:center;width:").concat(theme.width || 'inherit', "}\n\n.dAkaU_EwaR:hover{background-color:").concat(theme.hoverColor || 'inherit', "}\n\n.dAkaU_EwaR:active{background-color:").concat(theme.activeColor || 'inherit', "}\n\n.dAkaU_EwaR:focus{border:0.0625rem solid ").concat(theme.activeColor || 'inherit', ";box-shadow:inset 0 0 0 0.125rem ").concat(theme.focusColor || 'inherit', ";outline:none}\n\n.dAkaU_kuin{border-radius:0.25rem 0 0 0.25rem}\n\n.dAkaU_ypmX{border-radius:0 0.25rem 0.25rem 0}\n\n.dAkaU_dAWx{display:flex}\n\n.dAkaU_nqth{height:100%}");
  },
  'button': 'dAkaU_EwaR',
  'buttonStart': 'dAkaU_kuin',
  'buttonEnd': 'dAkaU_ypmX',
  'divWrapper': 'dAkaU_dAWx',
  'buttonWrapper': 'dAkaU_nqth'
};
var PlayerButton = (
/**
---
private: true
---
@module PlayerButton
**/
_dec = (0, _uiThemeable.default)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(PlayerButton, _Component);

  var _super = (0, _createSuper2.default)(PlayerButton);

  function PlayerButton() {
    var _this;

    (0, _classCallCheck2.default)(this, PlayerButton);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      isShowingTooltip: false
    };

    _this.handleKeyDown = function (e) {
      // prevent FF from emitting a keyboard event
      if (e.key === ' ' || e.key === 'Enter') {
        e.stopPropagation();
      }
    };

    _this.handleInsaneBrowsers = function (e) {
      /*
        On Mac OS X 10.X + (Safari or FF), buttons don't get focused when clicked
        ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus
         We want to make sure that experience is consistent throughout different browsers, so we're
        explicitly focusing the PlayerButtons on mouse down.
      */
      e.preventDefault(); // prevent focusing on the Player's container

      if (!_this.buttonRef) {
        return;
      }

      _this.buttonRef.focus();
    };

    _this.handleOnMouseDown = function (e) {
      _this.handleInsaneBrowsers(e);

      _this.props.onMouseDown(e);
    };

    _this.handleRef = function (e) {
      _this.buttonRef = e;

      _this.props.forwardRef(e);
    };

    _this.renderButton = function (_ref) {
      var _classNames;

      var videoId = _ref.videoId,
          onClick = _ref.onClick,
          children = _ref.children,
          position = _ref.position;
      var className = (0, _classnames.default)((_classNames = {}, (0, _defineProperty2.default)(_classNames, styles.button, true), (0, _defineProperty2.default)(_classNames, styles.buttonStart, position === 'start'), (0, _defineProperty2.default)(_classNames, styles.buttonEnd, position === 'end'), _classNames));
      return /*#__PURE__*/_react.default.createElement("button", {
        className: className,
        onMouseDown: _this.handleOnMouseDown,
        onClick: onClick,
        onKeyDown: _this.handleKeyDown,
        "aria-controls": videoId,
        ref: _this.handleRef
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: styles.divWrapper
      }, children));
    };

    _this.renderButtonWithTooltip = function (props, _ref2) {
      var controlActivated = _ref2.controlActivated;
      return /*#__PURE__*/_react.default.createElement(_uiTooltip.Tooltip, {
        renderTip: props.tooltipLabel,
        isShowingContent: !controlActivated && _this.state.isShowingTooltip,
        onShowContent: function onShowContent() {
          if (controlActivated) {
            return;
          }

          _this.setState({
            isShowingTooltip: true
          });
        },
        onHideContent: function onHideContent() {
          _this.setState({
            isShowingTooltip: false
          });
        },
        mountNode: props.tooltipMountNode
      }, /*#__PURE__*/_react.default.createElement("span", null, _this.renderButton(props)));
    };

    return _this;
  }

  (0, _createClass2.default)(PlayerButton, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var tooltipLabel = this.props.tooltipLabel;
      return /*#__PURE__*/_react.default.createElement(_MediaContext.default.Consumer, null, function (_ref3) {
        var state = _ref3.state;
        return /*#__PURE__*/_react.default.createElement("div", {
          className: styles.buttonWrapper
        }, tooltipLabel ? _this2.renderButtonWithTooltip(_this2.props, state) : _this2.renderButton(_this2.props));
      });
    }
  }]);
  PlayerButton.displayName = "PlayerButton";
  return PlayerButton;
}(_react.Component), _class2.propTypes = {
  /**
   * Id of the video element. Used to ensure
   * correct aria properties are applied.
   */
  videoId: _propTypes.default.string.isRequired,
  forwardRef: _propTypes.default.func,
  onClick: _propTypes.default.func,
  onMouseDown: _propTypes.default.func,
  position: _propTypes.default.oneOf(['start', 'middle', 'end']),
  tooltipLabel: _uiTooltip.Tooltip.propTypes.renderTip,
  tooltipMountNode: _uiTooltip.Tooltip.propTypes.mountNode,
  children: _propTypes.default.node
}, _class2.defaultProps = {
  forwardRef: function forwardRef(ref) {},
  onClick: function onClick(e) {},
  onMouseDown: function onMouseDown(e) {},
  position: 'middle',
  tooltipLabel: _uiTooltip.Tooltip.defaultProps.tooltipLabel,
  tooltipMountNode: _uiTooltip.Tooltip.defaultProps.mountNode
}, _temp)) || _class);
exports.default = PlayerButton;