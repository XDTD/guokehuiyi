import * as React from 'react';

export type TextFontStyle = "italic" | "normal";

export type TextLetterSpacing = "normal" | "condensed" | "expanded";

export type TextLineHeight = "default" | "fit" | "condensed" | "double";

export type TextSize = "x-small" | "small" | "medium" | "large" | "x-large" | "xx-large";

export type TextTransform = "none" | "capitalize" | "uppercase" | "lowercase";

export type TextWeight = "normal" | "light" | "bold";

export type TextWrap = "normal" | "break-word";

export interface TextProps {
    /**
     * the element type to render as
     */
    as?: any;
    children?: React.ReactNode;
    /**
     * One of: primary, secondary, brand, success, warning, danger, alert, primary-inverse, secondary-inverse
     */
    color?: any;
    elementRef?: (...args: any[])=>any;
    fontStyle?: TextFontStyle;
    letterSpacing?: TextLetterSpacing;
    lineHeight?: TextLineHeight;
    size?: TextSize;
    transform?: TextTransform;
    weight?: TextWeight;
    wrap?: TextWrap;
}

export class Text extends React.Component<TextProps, any> {
    render(): JSX.Element;

}

