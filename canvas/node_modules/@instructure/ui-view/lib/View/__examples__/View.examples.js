"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _ThemeablePropValues = require("@instructure/ui-themeable/lib/ThemeablePropValues.js");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var SHADOW_TYPES = _ThemeablePropValues.ThemeablePropValues.SHADOW_TYPES,
    BORDER_WIDTHS = _ThemeablePropValues.ThemeablePropValues.BORDER_WIDTHS,
    BORDER_RADII = _ThemeablePropValues.ThemeablePropValues.BORDER_RADII;
var _default = {
  maxExamplesPerPage: 50,
  sectionProp: 'background',
  propValues: {
    shadow: [void 0].concat((0, _toConsumableArray2.default)(Object.values(SHADOW_TYPES))),
    borderWidth: (0, _toConsumableArray2.default)(Object.values(BORDER_WIDTHS)),
    borderRadius: (0, _toConsumableArray2.default)(Object.values(BORDER_RADII)),
    borderColor: ['transparent', 'primary', 'secondary', 'brand', 'info', 'success', 'warning', 'alert', 'danger'],
    background: ['transparent', 'primary', 'secondary', 'primary-inverse', 'brand', 'info', 'alert', 'success', 'danger', 'warning']
  },
  getComponentProps: function getComponentProps(props) {
    return (0, _objectSpread2.default)({
      position: 'relative',
      padding: 'medium',
      display: 'block',
      children: 'Some content for the View',
      focusColor: 'info',
      focusPosition: 'offset',
      overflowX: 'visible',
      overflowY: 'visible',
      shouldAnimateFocus: false
    }, props.background !== 'primary' && {
      borderColor: 'info',
      borderRadius: void 0,
      borderWidth: void 0,
      shadow: void 0
    }, {}, (props.borderRadius !== '0' || props.borderWidth !== '0' || props.borderColor !== 'info' || props.shadow !== void 0) && {
      textAlign: 'start'
    }, {}, (props.borderRadius !== '0' || props.borderWidth !== 'small' || props.textAlign !== 'start' || props.shadow !== void 0) && {
      borderColor: 'info'
    });
  },
  excludeProps: ['as', 'position', 'elementRef', 'padding', 'margin', 'shouldAnimateFocus', 'display', 'withVisualDebug', 'focusColor', 'focusPosition', 'overflowX', 'overflowY', 'visualDebug', 'focused'],
  filter: function filter(props) {
    return (// Border radius and border width list 0 in addition to none in their object values
      // so we filter those here as they are redundant
      props.borderRadius === 'none' || props.borderWidth === 'none' || props.borderColor === 'transparent' || props.background === 'transparent' || props.focusPosition === 'inset' && !props.withFocusOutline || props.withFocusOutline && props.position !== 'relative'
    );
  }
};
exports.default = _default;