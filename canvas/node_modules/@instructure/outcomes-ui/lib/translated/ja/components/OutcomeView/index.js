"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiText = require("@instructure/ui-text");

var _uiThemeable = require("@instructure/ui-themeable");

var _shapes = require("../../store/shapes");

var _ScoringTiers = _interopRequireDefault(require("./ScoringTiers"));

var _MasteryCounts = _interopRequireDefault(require("./MasteryCounts"));

var _MasteryDescription = _interopRequireDefault(require("./MasteryDescription"));

var _sanitize = require("../../lib/sanitize");

var _theme = _interopRequireDefault(require("../theme"));

var _proficienciesUtils = require("../../util/proficienciesUtils");

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'eBKdC',
  template: function template(theme) {
    return "\n\n.outcomes-ui__OutcomeView--title {\n  margin: 2rem 0;\n  word-wrap: break-word; \n  overflow-wrap: break-word;\n}\n\n.outcomes-ui__OutcomeView--description {\n  margin: 2rem 0;\n}\n";
  },
  'title': 'outcomes-ui__OutcomeView--title',
  'description': 'outcomes-ui__OutcomeView--description'
};
var OutcomeView = (_dec = (0, _uiThemeable.themeable)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(OutcomeView, _React$Component);

  function OutcomeView() {
    (0, _classCallCheck2.default)(this, OutcomeView);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(OutcomeView).apply(this, arguments));
  }

  (0, _createClass2.default)(OutcomeView, [{
    key: "getScoringMethod",
    // eslint-disable-next-line no-undef
    // eslint-disable-next-line no-undef
    value: function getScoringMethod() {
      var _this$props = this.props,
          scoringMethod = _this$props.scoringMethod,
          context = _this$props.context;
      return (0, _proficienciesUtils.contextConfiguredWithProficiencies)(context) ? (0, _proficienciesUtils.getScoringMethodFromContext)(context) : scoringMethod;
    }
  }, {
    key: "getScoringTiers",
    value: function getScoringTiers() {
      var _this$props2 = this.props,
          scoringTiers = _this$props2.scoringTiers,
          context = _this$props2.context;

      if ((scoringTiers === null || scoringTiers === void 0 ? void 0 : scoringTiers.length) > 0) {
        return scoringTiers;
      }

      return (0, _proficienciesUtils.contextConfiguredWithProficiencies)(context) ? (0, _proficienciesUtils.getScoringTiersFromContext)(context) : null;
    }
  }, {
    key: "getDisplayMasteryInformation",
    value: function getDisplayMasteryInformation() {
      var _this$props3 = this.props,
          context = _this$props3.context,
          outcomeResult = _this$props3.outcomeResult;
      return !((0, _proficienciesUtils.contextConfiguredWithProficiencies)(context) && !outcomeResult);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          description = _this$props4.description,
          outcomeResult = _this$props4.outcomeResult,
          title = _this$props4.title,
          artifactTypeName = _this$props4.artifactTypeName,
          displayMasteryDescription = _this$props4.displayMasteryDescription,
          displayMasteryPercentText = _this$props4.displayMasteryPercentText;
      var scoringMethod = this.getScoringMethod();
      var scoringTiers = this.getScoringTiers();
      var displayMasteryInformation = this.getDisplayMasteryInformation();
      return _react.default.createElement("div", null, _react.default.createElement("div", {
        className: styles.title,
        "data-automation": "outcomeView__title"
      }, _react.default.createElement(_uiText.Text, {
        size: "x-large",
        transform: "uppercase"
      }, title)), scoringMethod && outcomeResult && displayMasteryInformation && _react.default.createElement(_MasteryCounts.default, {
        outcomeResult: outcomeResult,
        scoringMethod: scoringMethod
      }), _react.default.createElement("div", {
        className: styles.description,
        "data-automation": "outcomeView__description"
      }, _react.default.createElement(_uiText.Text, {
        size: "medium",
        wrap: "break-word"
      }, _react.default.createElement("div", {
        dangerouslySetInnerHTML: {
          // eslint-disable-line react/no-danger
          __html: (0, _sanitize.sanitizeHtml)(description)
        }
      }))), scoringTiers && scoringMethod && displayMasteryInformation && _react.default.createElement(_ScoringTiers.default, {
        outcomeResult: outcomeResult,
        scoringTiers: scoringTiers,
        scoringMethod: scoringMethod
      }), displayMasteryDescription && displayMasteryInformation && _react.default.createElement(_MasteryDescription.default, {
        artifactTypeName: artifactTypeName,
        displayMasteryPercentText: displayMasteryPercentText,
        scoringMethod: scoringMethod
      }));
    }
  }]);
  OutcomeView.displayName = "OutcomeView";
  return OutcomeView;
}(_react.default.Component), _class2.propTypes = {
  context: _shapes.contextShape,
  description: _propTypes.default.string.isRequired,
  outcomeResult: _shapes.outcomeResultShape,
  title: _propTypes.default.string.isRequired,
  scoringMethod: _shapes.scoringMethodShape,
  scoringTiers: _propTypes.default.arrayOf(_shapes.scoringTierShape),
  artifactTypeName: _propTypes.default.string,
  displayMasteryDescription: _propTypes.default.bool,
  displayMasteryPercentText: _propTypes.default.bool
}, _class2.defaultProps = {
  context: null,
  outcomeResult: null,
  scoringMethod: null,
  scoringTiers: null,
  artifactTypeName: null,
  displayMasteryDescription: false,
  displayMasteryPercentText: false
}, _temp)) || _class);
exports.default = OutcomeView;