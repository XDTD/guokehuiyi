"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _uiBillboard = require("@instructure/ui-billboard");

var _uiButtons = require("@instructure/ui-buttons");

var _uiIcons = require("@instructure/ui-icons");

var _uiThemeable = require("@instructure/ui-themeable");

var _Alignment = _interopRequireDefault(require("../Alignment"));

var _theme = _interopRequireDefault(require("../theme"));

var _OutcomePickerModal = _interopRequireDefault(require("../OutcomePickerModal"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'sJofx',
  template: function template(theme) {
    return "\n\n.outcomes-ui__AlignmentList--header {\n  background-color: #BBBBBB;\n  border: solid 1px #999999;\n  border-radius: 5px;\n  padding: 10px 20px;\n}\n\n.outcomes-ui__AlignmentList--list {\n  list-style: none;\n  padding-left: 0;\n  border: solid 1px #BBBBBB;\n  border-radius: 5px;\n}\n\n.outcomes-ui__AlignmentList--list > li {\n  padding: 10px 20px;\n}\n\n.outcomes-ui__AlignmentList--list > li + li {\n  border-top: dashed 1px #BBBBBB;\n}\n\n.outcomes-ui__AlignmentList--addOutcome {\n  text-align: center;\n}\n\n[dir=\"ltr\"] .outcomes-ui__AlignmentList--addOutcome {\n  text-align: center;\n}\n\n[dir=\"rtl\"] .outcomes-ui__AlignmentList--addOutcome {\n  text-align: center;\n}\n\n.outcomes-ui__AlignmentList--addOutcome button {\n  padding: 0;\n}\n";
  },
  'header': 'outcomes-ui__AlignmentList--header',
  'list': 'outcomes-ui__AlignmentList--list',
  'addOutcome': 'outcomes-ui__AlignmentList--addOutcome'
};

var Clipboard = function Clipboard(props) {
  return _react.default.createElement("svg", Object.assign({
    width: "70",
    height: "96",
    viewBox: "0 0 70 96",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink"
  }, props), _react.default.createElement("title", null, "ClipBoard"), _react.default.createElement("defs", null, _react.default.createElement("path", {
    id: "a",
    d: "M0 96h70V0H0z"
  })), _react.default.createElement("g", {
    fill: "none",
    fillRule: "evenodd"
  }, _react.default.createElement("path", {
    d: "M65 95H5a4 4 0 0 1-4-4V22a4 4 0 0 1 4-4h60a4 4 0 0 1 4 4v69a4 4 0 0 1-4 4z",
    fill: "#F7F8F7"
  }), _react.default.createElement("path", {
    d: "M65 95H5a4 4 0 0 1-4-4V22a4 4 0 0 1 4-4h60a4 4 0 0 1 4 4v69a4 4 0 0 1-4 4z",
    stroke: "#3F5463",
    strokeWidth: "2"
  }), _react.default.createElement("mask", {
    id: "b",
    fill: "#fff"
  }, _react.default.createElement("use", {
    xlinkHref: "#a"
  })), _react.default.createElement("path", {
    fill: "#FFF",
    mask: "url(#b)",
    d: "M9 46h13V33H9z"
  }), _react.default.createElement("path", {
    stroke: "#3F5463",
    strokeWidth: "2",
    mask: "url(#b)",
    d: "M9 46h13V33H9z"
  }), _react.default.createElement("path", {
    fill: "#3F5463",
    mask: "url(#b)",
    d: "M28 36h23v-3H28zM28 46h14v-3H28zM28 41h31v-3H28z"
  }), _react.default.createElement("path", {
    stroke: "#00B517",
    strokeWidth: "2",
    mask: "url(#b)",
    d: "M12 39l3 2.655 4.398-5.265"
  }), _react.default.createElement("path", {
    fill: "#FFF",
    mask: "url(#b)",
    d: "M9 67h13V54H9z"
  }), _react.default.createElement("path", {
    stroke: "#3F5463",
    strokeWidth: "2",
    mask: "url(#b)",
    d: "M9 67h13V54H9z"
  }), _react.default.createElement("path", {
    fill: "#3F5463",
    mask: "url(#b)",
    d: "M28 57h23v-3H28zM28 77h23v-3H28zM28 67h14v-3H28zM28 62h31v-3H28z"
  }), _react.default.createElement("path", {
    stroke: "#00B517",
    strokeWidth: "2",
    mask: "url(#b)",
    d: "M12 60l3 2.655 4.398-5.265"
  }), _react.default.createElement("path", {
    fill: "#FFF",
    mask: "url(#b)",
    d: "M9 87h13V74H9z"
  }), _react.default.createElement("path", {
    stroke: "#3F5463",
    strokeWidth: "2",
    mask: "url(#b)",
    d: "M9 87h13V74H9z"
  }), _react.default.createElement("path", {
    fill: "#3F5463",
    mask: "url(#b)",
    d: "M28 87h14v-3H28zM28 82h31v-3H28z"
  }), _react.default.createElement("path", {
    stroke: "#00B517",
    strokeWidth: "2",
    mask: "url(#b)",
    d: "M12 80l3 2.655 4.398-5.265"
  }), _react.default.createElement("path", {
    d: "M55.874 25H14.126a2 2 0 0 1-1.816-2.838L17 12h36l4.69 10.162A2 2 0 0 1 55.874 25",
    fill: "#C0C6CB",
    mask: "url(#b)"
  }), _react.default.createElement("path", {
    d: "M55.874 25H14.126a2 2 0 0 1-1.816-2.838L17 12h36l4.69 10.162A2 2 0 0 1 55.874 25z",
    stroke: "#3F5463",
    strokeWidth: "2",
    mask: "url(#b)"
  }), _react.default.createElement("path", {
    d: "M35 1C24 1 24 12 24 12h22S44.667 1 35 1",
    fill: "#E5E8EA",
    mask: "url(#b)"
  }), _react.default.createElement("path", {
    d: "M35 1C24 1 24 12 24 12h22S44.667 1 35 1z",
    stroke: "#3F5463",
    strokeWidth: "2",
    mask: "url(#b)"
  }), _react.default.createElement("path", {
    d: "M36.667 6.551a2 2 0 1 1-4 .002 2 2 0 0 1 4-.002",
    fill: "#3F5463",
    mask: "url(#b)"
  })));
};

var AlignmentList = (_dec = (0, _uiThemeable.themeable)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(AlignmentList, _React$Component);

  function AlignmentList() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, AlignmentList);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf2.default)(AlignmentList)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _this.handleModalOpen = function () {
      _this.props.openOutcomePicker();
    };

    _this.triggerButton = function () {
      // eslint-disable-next-line react/no-find-dom-node
      var r = _reactDom.default.findDOMNode(_this.triggerRoot);

      return r.type === 'button' ? r : r.children[0];
    };

    return _this;
  }

  (0, _createClass2.default)(AlignmentList, [{
    key: "handleRemoveAlignment",
    value: function handleRemoveAlignment(outcome, index) {
      var _this$props = this.props,
          removeAlignment = _this$props.removeAlignment,
          alignedOutcomes = _this$props.alignedOutcomes,
          onUpdate = _this$props.onUpdate;
      var priorListItem = this["position".concat(index - 1)];
      removeAlignment(outcome.id, onUpdate);
      this.props.screenreaderNotification(outcome.label + " justering borttagen");

      if (priorListItem) {
        priorListItem.focus();
      } else if (alignedOutcomes.length > 0) {
        // TBD - need to do something better here if first item is
        // removed, just doing this for now so there's consistent behavior
        var nextListItem = this["position".concat(index + 1)];

        if (nextListItem) {
          nextListItem.focus();
        }
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(oldProps) {
      var alignedOutcomes = this.props.alignedOutcomes;

      if (oldProps.alignedOutcomes.length && !alignedOutcomes.length) {
        this.triggerButton().focus();
      }
    }
  }, {
    key: "renderAddOutcomeButton",
    value: function renderAddOutcomeButton() {
      var _this2 = this;

      return _react.default.createElement("li", {
        className: styles.addOutcome
      }, _react.default.createElement(_uiButtons.Button, {
        ref: function ref(d) {
          _this2.triggerRoot = d;
        } // eslint-disable-line immutable/no-mutation
        ,
        variant: "circle-primary",
        size: "small",
        onClick: function onClick() {
          return _this2.handleModalOpen();
        }
      }, _react.default.createElement(_uiIcons.IconPlusLine, {
        title: "Justera nya l\xE4randem\xE5l"
      })));
    }
  }, {
    key: "renderList",
    value: function renderList() {
      var _this3 = this;

      var _this$props2 = this.props,
          alignedOutcomes = _this$props2.alignedOutcomes,
          _viewAlignment = _this$props2.viewAlignment,
          closeAlignment = _this$props2.closeAlignment,
          isOpen = _this$props2.isOpen,
          artifactTypeName = _this$props2.artifactTypeName,
          displayMasteryDescription = _this$props2.displayMasteryDescription,
          displayMasteryPercentText = _this$props2.displayMasteryPercentText,
          readOnly = _this$props2.readOnly,
          scope = _this$props2.scope;
      return _react.default.createElement("div", null, _react.default.createElement("ul", {
        className: styles.list
      }, alignedOutcomes.map(function (outcome, index) {
        return _react.default.createElement(_Alignment.default, {
          key: outcome.id,
          ref: function ref(o) {
            _this3["position".concat(index)] = o;
          } // eslint-disable-line immutable/no-mutation
          ,
          removeAlignment: function removeAlignment() {
            return _this3.handleRemoveAlignment(outcome, index);
          },
          viewAlignment: function viewAlignment() {
            return _viewAlignment(outcome.id);
          },
          closeAlignment: closeAlignment,
          outcome: outcome,
          isOpen: isOpen(outcome.id),
          artifactTypeName: artifactTypeName,
          displayMasteryDescription: displayMasteryDescription,
          displayMasteryPercentText: displayMasteryPercentText,
          readOnly: readOnly,
          scope: scope
        });
      }), !readOnly && this.renderAddOutcomeButton()));
    }
  }, {
    key: "renderEmpty",
    value: function renderEmpty() {
      var _this4 = this;

      return !this.props.readOnly && _react.default.createElement(_uiBillboard.Billboard, {
        ref: function ref(d) {
          _this4.triggerRoot = d;
        } // eslint-disable-line immutable/no-mutation
        ,
        heading: this.props.emptySetHeading,
        message: "Bl\xE4ddra och l\xE4gg till l\xE4randem\xE5l genom att klicka h\xE4r.",
        headingAs: "h3",
        headingLevel: "h3",
        size: "small",
        hero: _react.default.createElement(Clipboard, null),
        type: "button",
        onClick: this.handleModalOpen
      });
    }
  }, {
    key: "renderBody",
    value: function renderBody() {
      var alignedOutcomes = this.props.alignedOutcomes;

      if (alignedOutcomes && alignedOutcomes.length > 0) {
        return this.renderList();
      } else {
        return this.renderEmpty();
      }
    }
  }, {
    key: "renderModal",
    value: function renderModal() {
      var _this$props3 = this.props,
          OutcomePickerModal = _this$props3.addModal,
          pickerProps = _this$props3.pickerProps,
          onUpdate = _this$props3.onUpdate,
          onModalOpen = _this$props3.onModalOpen,
          onModalClose = _this$props3.onModalClose,
          scope = _this$props3.scope,
          artifactTypeName = _this$props3.artifactTypeName,
          displayMasteryDescription = _this$props3.displayMasteryDescription,
          displayMasteryPercentText = _this$props3.displayMasteryPercentText,
          screenreaderNotification = _this$props3.screenreaderNotification,
          liveRegion = _this$props3.liveRegion,
          mountNode = _this$props3.mountNode;
      return _react.default.createElement(OutcomePickerModal, Object.assign({
        onModalClose: onModalClose,
        onModalOpen: onModalOpen,
        onUpdate: onUpdate,
        trigger: this,
        scope: scope,
        artifactTypeName: artifactTypeName,
        displayMasteryDescription: displayMasteryDescription,
        displayMasteryPercentText: displayMasteryPercentText,
        screenreaderNotification: screenreaderNotification,
        liveRegion: liveRegion,
        mountNode: mountNode
      }, pickerProps));
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.triggerRoot) {
        this.triggerButton().focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", null, this.renderBody(), this.renderModal());
    }
  }]);
  AlignmentList.displayName = "AlignmentList";
  return AlignmentList;
}(_react.default.Component), _class2.propTypes = {
  addModal: _propTypes.default.func.isRequired,
  pickerType: _propTypes.default.string,
  pickerProps: _propTypes.default.object,
  alignedOutcomes: _propTypes.default.arrayOf(_propTypes.default.shape({
    id: _propTypes.default.string.isRequired,
    label: _propTypes.default.string.isRequired,
    title: _propTypes.default.string.isRequired
  })).isRequired,
  emptySetHeading: _propTypes.default.string.isRequired,
  readOnly: _propTypes.default.bool,
  removeAlignment: _propTypes.default.func.isRequired,
  onUpdate: _propTypes.default.func,
  viewAlignment: _propTypes.default.func.isRequired,
  closeAlignment: _propTypes.default.func.isRequired,
  isOpen: _propTypes.default.func.isRequired,
  openOutcomePicker: _propTypes.default.func.isRequired,
  onModalOpen: _propTypes.default.func,
  onModalClose: _propTypes.default.func,
  scope: _propTypes.default.string.isRequired,
  artifactTypeName: _propTypes.default.string,
  displayMasteryDescription: _propTypes.default.bool,
  displayMasteryPercentText: _propTypes.default.bool,
  screenreaderNotification: _propTypes.default.func,
  liveRegion: _OutcomePickerModal.default.propTypes.liveRegion,
  mountNode: _OutcomePickerModal.default.propTypes.mountNode
}, _class2.defaultProps = {
  pickerType: 'dialog',
  pickerProps: {},
  onUpdate: null,
  onModalOpen: null,
  onModalClose: null,
  readOnly: false,
  artifactTypeName: null,
  displayMasteryDescription: false,
  displayMasteryPercentText: false,
  screenreaderNotification: null,
  liveRegion: null,
  mountNode: null
}, _temp)) || _class);
var _default = AlignmentList;
exports.default = _default;