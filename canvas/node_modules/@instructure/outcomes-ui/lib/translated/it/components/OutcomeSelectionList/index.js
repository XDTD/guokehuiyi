"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiCheckbox = require("@instructure/ui-checkbox");

var _uiText = require("@instructure/ui-text");

var _uiThemeable = require("@instructure/ui-themeable");

var _OutcomeCheckbox = _interopRequireDefault(require("../OutcomeCheckbox"));

var _shapes = require("../../store/shapes");

var _theme = _interopRequireDefault(require("../theme"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'fOGbT',
  template: function template(theme) {
    return "\n\n.outcomes-ui__OutcomeSelectionList--picker {\n  padding-left: 1rem;\n}\n\n.outcomes-ui__OutcomeSelectionList--checkbox {\n  padding: ".concat(theme.outcomePickerItemPadding || 'inherit', ";\n}\n\n.outcomes-ui__OutcomeSelectionList--checkboxLabel {\n  padding-left: 0.5rem;\n}\n");
  },
  'picker': 'outcomes-ui__OutcomeSelectionList--picker',
  'checkbox': 'outcomes-ui__OutcomeSelectionList--checkbox',
  'checkboxLabel': 'outcomes-ui__OutcomeSelectionList--checkboxLabel'
};
var OutcomeSelectionList = (_dec = (0, _uiThemeable.themeable)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(OutcomeSelectionList, _React$Component);

  function OutcomeSelectionList() {
    (0, _classCallCheck2.default)(this, OutcomeSelectionList);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(OutcomeSelectionList).apply(this, arguments));
  }

  (0, _createClass2.default)(OutcomeSelectionList, [{
    key: "allSelected",
    // eslint-disable-next-line no-undef
    value: function allSelected() {
      var _this$props = this.props,
          outcomes = _this$props.outcomes,
          isOutcomeSelected = _this$props.isOutcomeSelected;
      return outcomes.every(function (o) {
        return isOutcomeSelected(o.id);
      });
    }
  }, {
    key: "toggleAllSelected",
    value: function toggleAllSelected() {
      var _this$props2 = this.props,
          deselectOutcomeIds = _this$props2.deselectOutcomeIds,
          selectOutcomeIds = _this$props2.selectOutcomeIds,
          outcomes = _this$props2.outcomes;
      var ids = outcomes.map(function (o) {
        return o.id;
      });

      if (this.allSelected()) {
        deselectOutcomeIds(ids);
      } else {
        selectOutcomeIds(ids);
      }
    }
  }, {
    key: "selectAllText",
    value: function selectAllText() {
      if (this.allSelected()) {
        return "Deseleziona tutto";
      } else {
        return "Seleziona tutto";
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props3 = this.props,
          outcomes = _this$props3.outcomes,
          setFocusedOutcome = _this$props3.setFocusedOutcome;

      if (outcomes.length === 0) {
        return _react.default.createElement("div", null);
      }

      return _react.default.createElement("div", {
        className: styles.picker,
        "data-automation": "outcomeSelectionList__picker"
      }, _react.default.createElement("div", {
        className: styles.checkbox
      }, _react.default.createElement(_uiCheckbox.Checkbox, {
        value: "selectAll",
        checked: this.allSelected(),
        onChange: function onChange() {
          return _this.toggleAllSelected();
        },
        label: _react.default.createElement("div", {
          className: styles.checkboxLabel
        }, _react.default.createElement(_uiText.Text, {
          size: "small"
        }, this.selectAllText()))
      })), outcomes.map(function (o) {
        return _react.default.createElement("div", {
          key: o.id
        }, _react.default.createElement(_OutcomeCheckbox.default, Object.assign({
          outcome: o,
          setFocusedOutcome: setFocusedOutcome
        }, _this.props)));
      }));
    }
  }]);
  OutcomeSelectionList.displayName = "OutcomeSelectionList";
  return OutcomeSelectionList;
}(_react.default.Component), _class2.propTypes = {
  setFocusedOutcome: _propTypes.default.func.isRequired,
  isOutcomeSelected: _propTypes.default.func.isRequired,
  selectOutcomeIds: _propTypes.default.func.isRequired,
  deselectOutcomeIds: _propTypes.default.func.isRequired,
  outcomes: _propTypes.default.arrayOf(_shapes.outcomeShape).isRequired
}, _temp)) || _class);
exports.default = OutcomeSelectionList;