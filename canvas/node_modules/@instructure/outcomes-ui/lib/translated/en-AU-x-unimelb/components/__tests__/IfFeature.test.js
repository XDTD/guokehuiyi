"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _react = _interopRequireWildcard(require("react"));

var _chai = require("chai");

var _enzyme = require("enzyme");

var _sinon = _interopRequireDefault(require("sinon"));

var constants = _interopRequireWildcard(require("../../constants"));

var _IfFeature = _interopRequireDefault(require("../IfFeature"));

describe('IfFeature', function () {
  describe('with features in constants.js', function () {
    var getFeaturesStub;
    beforeEach(function () {
      getFeaturesStub = _sinon.default.stub(constants, 'getFeatureFlags').returns(['feature1', 'feature2']);
    });
    afterEach(function () {
      getFeaturesStub.restore();
    });
    it('returns a valid React Element', function () {
      var element = _react.default.createElement(_IfFeature.default, {
        name: 'feature1',
        features: []
      });

      (0, _chai.expect)((0, _react.isValidElement)(element)).to.be.true;
    });
    it('renders an IfFeature', function () {
      (0, _chai.expect)((0, _enzyme.mount)(_react.default.createElement(_IfFeature.default, {
        name: 'feature1',
        features: []
      })).find('IfFeature')).to.have.length(1);
    });
    context('when turned off', function () {
      it('renders without the child', function () {
        var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_IfFeature.default, {
          name: 'feature1',
          features: ['feature2']
        }, _react.default.createElement("div", null, "Hello!!!")));
        (0, _chai.expect)(wrapper.find('div')).to.have.length(0);
      });
    });
    context('when turned on', function () {
      it('renders with the child', function () {
        var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_IfFeature.default, {
          features: ['feature1'],
          name: 'feature1'
        }, _react.default.createElement("div", null, "Hello!!!")));
        (0, _chai.expect)(wrapper.find('div')).to.have.length(1);
        (0, _chai.expect)(wrapper.find('div').text()).to.eq('Hello!!!');
      });
    });
  });
  describe('with no features in constants.js', function () {
    var getFeaturesStub;
    beforeEach(function () {
      getFeaturesStub = _sinon.default.stub(constants, 'getFeatureFlags').returns([]);
    });
    afterEach(function () {
      getFeaturesStub.restore();
    });
    it('throws an error if given an unknown feature', function () {
      (0, _chai.expect)(function () {
        return (0, _enzyme.shallow)(_react.default.createElement(_IfFeature.default, {
          name: 'feature1',
          features: []
        }));
      }).to.throw(Error);
    });
  });
});