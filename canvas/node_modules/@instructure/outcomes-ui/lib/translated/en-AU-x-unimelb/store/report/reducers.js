"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _immutable = require("immutable");

var _reduxActions = require("redux-actions");

var _reduxImmutable = require("redux-immutable");

var _actions = require("./actions");

var users = (0, _reduxActions.handleActions)((0, _defineProperty2.default)({}, _actions.setUsers, function (state, action) {
  return (0, _immutable.fromJS)(action.payload);
}), (0, _immutable.List)());
var page = (0, _reduxActions.handleActions)((0, _defineProperty2.default)({}, _actions.setPage, function (state, action) {
  return (0, _immutable.fromJS)(action.payload);
}), (0, _immutable.fromJS)({
  number: void 0
}));
var pageData = (0, _reduxActions.handleActions)((0, _defineProperty2.default)({}, _actions.setPageData, function (state, action) {
  return (0, _immutable.fromJS)(action.payload);
}), (0, _immutable.Map)());
var outcomes = (0, _reduxActions.handleActions)((0, _defineProperty2.default)({}, _actions.setReportOutcomes, function (state, action) {
  return (0, _immutable.fromJS)(action.payload);
}), (0, _immutable.Map)());
var rollups = (0, _reduxActions.handleActions)((0, _defineProperty2.default)({}, _actions.setRollups, function (state, action) {
  return (0, _immutable.fromJS)(action.payload);
}), (0, _immutable.List)());
var loading = (0, _reduxActions.handleActions)((0, _defineProperty2.default)({}, _actions.setLoading, function (state, action) {
  return (0, _immutable.fromJS)(action.payload);
}), false);
var results = (0, _reduxActions.handleActions)((0, _defineProperty2.default)({}, _actions.setResults, function (state, action) {
  var _action$payload = action.payload,
      outcomeId = _action$payload.outcomeId,
      results = _action$payload.results;
  var resultMap = results.map(function (_ref) {
    var userId = _ref.user_uuid,
        percentScore = _ref.percent_score,
        points = _ref.points,
        pointsPossible = _ref.points_possible;
    var ungulated = (0, _immutable.fromJS)({
      userId: userId,
      percentScore: percentScore,
      points: points,
      pointsPossible: pointsPossible
    });
    return [userId.toString(), ungulated];
  });
  return state.set(outcomeId, (0, _immutable.Map)(resultMap));
}), (0, _immutable.Map)());
var openReportAlignmentId = (0, _reduxActions.handleActions)({
  VIEW_REPORT_ALIGNMENT: function VIEW_REPORT_ALIGNMENT(state, action) {
    return action.payload;
  },
  CLOSE_REPORT_ALIGNMENT: function CLOSE_REPORT_ALIGNMENT() {
    return null;
  }
}, null);

var _default = (0, _reduxImmutable.combineReducers)({
  page: page,
  pageData: pageData,
  users: users,
  outcomes: outcomes,
  results: results,
  rollups: rollups,
  openReportAlignmentId: openReportAlignmentId,
  loading: loading
});

exports.default = _default;