"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _chai = require("chai");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _sinon = _interopRequireDefault(require("sinon"));

var _index = _interopRequireDefault(require("../index"));

var _checkA11y = _interopRequireDefault(require("../../../../test/checkA11y"));

describe('AlignmentItem', function () {
  function makeProps() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Object.assign({
      outcome: {
        id: '1',
        label: 'A1',
        title: 'tA1',
        description: 'dA1'
      },
      removeAlignment: _sinon.default.spy()
    }, props);
  }

  it('includes an OutcomeDescription', function () {
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, makeProps()), {
      disableLifecycleMethods: true
    });
    (0, _chai.expect)(wrapper.find('OutcomeDescription')).to.have.length(1);
  });
  it('includes a trash icon and delete button', function () {
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, makeProps()), {
      disableLifecycleMethods: true
    });
    (0, _chai.expect)(wrapper.find('IconTrashLine')).to.have.length(1);
    (0, _chai.expect)(wrapper.find('IconButton')).to.have.length(1);
  });
  it('does not include a trash icon and delete button when readOnly is true', function () {
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, makeProps({
      readOnly: true
    })), {
      disableLifecycleMethods: true
    });
    (0, _chai.expect)(wrapper.find('IconTrashLine')).to.have.length(0);
    (0, _chai.expect)(wrapper.find('IconButton')).to.have.length(0);
  });
  it('calls removeAlignment when the trash icon is clicked', function () {
    var props = makeProps();
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, props), {
      disableLifecycleMethods: true
    });
    wrapper.find('IconButton').simulate('click');
    (0, _chai.expect)(props.removeAlignment.calledOnce).to.be.true;
  });
  it('meets a11y standards', function () {
    return (0, _checkA11y.default)(_react.default.createElement(_index.default, makeProps()));
  });
});