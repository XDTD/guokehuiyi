"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.noAlignedOutcomes = exports.alignedOutcomes = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _addonKnobs = require("@storybook/addon-knobs");

var _constants = require("../../../.storybook/constants");

var _ = _interopRequireDefault(require("./"));

var _default = {
  title: 'AlignmentList'
};
exports.default = _default;

var alignedOutcomes = function alignedOutcomes() {
  return _react.default.createElement(_.default, {
    alignedOutcomes: (0, _addonKnobs.object)('Outcomes', (0, _constants.defaultOutcomes)()),
    emptySetHeading: "Align Institution outcomes to this question",
    removeAlignment: function removeAlignment() {},
    viewAlignment: function viewAlignment() {},
    closeAlignment: function closeAlignment() {},
    openOutcomePicker: function openOutcomePicker() {},
    isOpen: function isOpen() {},
    artifactTypeName: "Quiz",
    displayMasteryDescription: true,
    displayMasteryPercentText: true,
    readOnly: (0, _addonKnobs.boolean)('Read Only', false),
    scope: "",
    addModal: function addModal() {
      return null;
    },
    outcomePickerState: "closed",
    pickerType: "dialog"
  });
};

exports.alignedOutcomes = alignedOutcomes;

var noAlignedOutcomes = function noAlignedOutcomes() {
  return _react.default.createElement(_.default, {
    alignedOutcomes: [],
    emptySetHeading: (0, _addonKnobs.text)('Empty Message', 'Align Institution outcomes to this question'),
    removeAlignment: function removeAlignment() {},
    viewAlignment: function viewAlignment() {},
    closeAlignment: function closeAlignment() {},
    openOutcomePicker: function openOutcomePicker() {},
    isOpen: function isOpen() {},
    artifactTypeName: "Quiz",
    displayMasteryDescription: true,
    displayMasteryPercentText: true,
    readOnly: (0, _addonKnobs.boolean)('Read Only', false),
    scope: "",
    addModal: function addModal() {
      return null;
    },
    outcomePickerState: "closed",
    pickerType: "dialog"
  });
};

exports.noAlignedOutcomes = noAlignedOutcomes;