"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _multireducer = require("multireducer");

var _redux = require("redux");

var _reactRedux = require("react-redux");

var _AlignmentList = _interopRequireDefault(require("../components/AlignmentList"));

var _WithAlignmentSet = _interopRequireDefault(require("../components/WithAlignmentSet"));

var _selectors = require("../store/alignments/selectors");

var contextActions = _interopRequireWildcard(require("../store/context/actions"));

var alignmentActions = _interopRequireWildcard(require("../store/alignments/actions"));

var outcomePickerActions = _interopRequireWildcard(require("../store/OutcomePicker/actions"));

var _ConnectedOutcomePickerModal = _interopRequireDefault(require("./ConnectedOutcomePickerModal"));

var _ConnectedOutcomeTray = _interopRequireDefault(require("./ConnectedOutcomeTray"));

var mapStateToProps = function mapStateToProps(state, ownProps) {
  var scope = ownProps.scope,
      pickerType = ownProps.pickerType;
  return {
    addModal: pickerType === 'tray' ? _ConnectedOutcomeTray.default : _ConnectedOutcomePickerModal.default,
    alignedOutcomes: (0, _selectors.getAlignedOutcomes)(state, scope),
    isOpen: (0, _selectors.makeIsOpen)(state, scope)
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
  var scope = ownProps.scope;
  return (0, _objectSpread2.default)({}, (0, _multireducer.bindActionCreators)(contextActions, dispatch), {}, (0, _multireducer.bindActionCreators)(alignmentActions, dispatch, scope), {}, (0, _multireducer.bindActionCreators)(outcomePickerActions, dispatch, scope));
};

var ConnectedAlignmentList = (0, _redux.compose)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps), _WithAlignmentSet.default)(_AlignmentList.default);
var _default = ConnectedAlignmentList;
exports.default = _default;