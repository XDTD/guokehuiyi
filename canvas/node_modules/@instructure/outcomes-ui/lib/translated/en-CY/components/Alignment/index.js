"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiButtons = require("@instructure/ui-buttons");

var _uiText = require("@instructure/ui-text");

var _uiLink = require("@instructure/ui-link");

var _uiIcons = require("@instructure/ui-icons");

var _uiView = require("@instructure/ui-view");

var _uiThemeable = require("@instructure/ui-themeable");

var _OutcomeViewModal = _interopRequireDefault(require("../OutcomeViewModal"));

var _theme = _interopRequireDefault(require("../theme"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'famwZ',
  template: function template(theme) {
    return "\n\n.outcomes-ui__Alignment--item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.outcomes-ui__Alignment--outcome {\n  flex: 0 0 0;\n  padding: 0 0.3rem 0 0;\n}\n\n.outcomes-ui__Alignment--link {\n  flex-grow: 1;\n  width: 100%;\n}\n\n.outcomes-ui__Alignment--linkText {\n  display: table;\n  table-layout: fixed;\n  white-space: nowrap;\n  width: 100%;\n}\n\n.outcomes-ui__Alignment--innerLinkText {\n  display: table-cell;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.outcomes-ui__Alignment--delete {\n  flex: 0 0 1rem;\n}\n";
  },
  'item': 'outcomes-ui__Alignment--item',
  'outcome': 'outcomes-ui__Alignment--outcome',
  'link': 'outcomes-ui__Alignment--link',
  'linkText': 'outcomes-ui__Alignment--linkText',
  'innerLinkText': 'outcomes-ui__Alignment--innerLinkText',
  'delete': 'outcomes-ui__Alignment--delete'
};
var Alignment = (_dec = (0, _uiThemeable.themeable)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(Alignment, _React$Component);

  function Alignment() {
    (0, _classCallCheck2.default)(this, Alignment);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Alignment).apply(this, arguments));
  }

  (0, _createClass2.default)(Alignment, [{
    key: "focus",
    // eslint-disable-next-line no-undef
    value: function focus() {
      this.focusLink.focus();
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          outcome = _this$props.outcome,
          removeAlignment = _this$props.removeAlignment,
          viewAlignment = _this$props.viewAlignment,
          closeAlignment = _this$props.closeAlignment,
          isOpen = _this$props.isOpen,
          artifactTypeName = _this$props.artifactTypeName,
          displayMasteryDescription = _this$props.displayMasteryDescription,
          displayMasteryPercentText = _this$props.displayMasteryPercentText,
          readOnly = _this$props.readOnly,
          scope = _this$props.scope;
      var removeMessage = "Remove " + outcome.title;
      return _react.default.createElement("li", {
        className: styles.item,
        "data-automation": "outcomeAlignment__item"
      }, _react.default.createElement("span", {
        className: styles.outcome
      }, _react.default.createElement(_uiText.Text, {
        size: "large"
      }, _react.default.createElement(_uiIcons.IconOutcomesLine, null))), _react.default.createElement("span", {
        className: styles.link
      }, _react.default.createElement("span", {
        className: styles.linkText
      }, _react.default.createElement("span", {
        className: styles.innerLinkText
      }, _react.default.createElement(_uiView.View, {
        as: "div",
        margin: "xx-small"
      }, _react.default.createElement(_uiLink.Link, {
        onClick: viewAlignment,
        ref: function ref(link) {
          _this.focusLink = link;
        } // eslint-disable-line immutable/no-mutation

      }, _react.default.createElement(_uiText.Text, {
        weight: "bold"
      }, outcome.title)))))), !readOnly && _react.default.createElement("span", {
        className: styles.delete,
        "data-automation": "alignment-delete"
      }, _react.default.createElement(_uiButtons.Button, {
        variant: "icon",
        onClick: removeAlignment
      }, _react.default.createElement(_uiIcons.IconTrashLine, {
        title: removeMessage
      }))), _react.default.createElement(_OutcomeViewModal.default, {
        outcome: outcome,
        closeAlignment: closeAlignment,
        isOpen: isOpen,
        artifactTypeName: artifactTypeName,
        displayMasteryDescription: displayMasteryDescription,
        displayMasteryPercentText: displayMasteryPercentText,
        scope: scope
      }));
    }
  }]);
  Alignment.displayName = "Alignment";
  return Alignment;
}(_react.default.Component), _class2.propTypes = {
  outcome: _propTypes.default.shape({
    label: _propTypes.default.string.isRequired,
    title: _propTypes.default.string.isRequired
  }).isRequired,
  removeAlignment: _propTypes.default.func.isRequired,
  viewAlignment: _propTypes.default.func.isRequired,
  closeAlignment: _propTypes.default.func.isRequired,
  isOpen: _propTypes.default.bool.isRequired,
  readOnly: _propTypes.default.bool.isRequired,
  artifactTypeName: _propTypes.default.string,
  displayMasteryDescription: _propTypes.default.bool,
  displayMasteryPercentText: _propTypes.default.bool,
  scope: _propTypes.default.string.isRequired
}, _class2.defaultProps = {
  artifactTypeName: null,
  displayMasteryDescription: false,
  displayMasteryPercentText: false
}, _temp)) || _class);
exports.default = Alignment;