"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _chai = require("chai");

var _react = _interopRequireDefault(require("react"));

var _sinon = _interopRequireDefault(require("sinon"));

var _enzyme = require("enzyme");

var _index = _interopRequireDefault(require("../index"));

var _checkA11y = _interopRequireDefault(require("../../../../test/checkA11y"));

var styles = {
  componentId: 'fbTpU',
  template: function template(theme) {
    return "\n\n.outcomes-ui__Header--header {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-weight: normal;\n  line-height: 1.3rem;\n  text-align: left;\n}\n\n[dir=\"ltr\"] .outcomes-ui__Header--header {\n  text-align: left;\n}\n\n[dir=\"rtl\"] .outcomes-ui__Header--header {\n  text-align: left;\n}\n";
  },
  'header': 'outcomes-ui__Header--header'
};
describe('OutcomesPerStudent/Header', function () {
  function makeProps(props) {
    return Object.assign({
      outcomeResult: {
        outcome: {
          id: '1',
          label: 'FOO'
        },
        count: 10,
        mastery_count: 5,
        childArtifactCount: 12
      },
      viewReportAlignment: _sinon.default.spy(),
      getReportOutcome: _sinon.default.stub().returns({
        id: '1',
        label: 'FOO',
        title: 'bar'
      }),
      isOpen: false,
      closeReportAlignment: _sinon.default.spy()
    }, props);
  }

  it('includes a details object', function () {
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, makeProps()), {
      disableLifecycleMethods: true
    });
    (0, _chai.expect)(wrapper.find('HeaderDetails')).to.have.length(1);
  });
  it('renders outcome link with title', function () {
    var props = makeProps();
    var wrapper = (0, _enzyme.mount)(_react.default.createElement(_index.default, props));
    (0, _chai.expect)(wrapper.text()).to.match(/bar/);
  });
  it('calls viewReportAlignment when the link is clicked', function () {
    var props = makeProps();
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, props), {
      disableLifecycleMethods: true
    });
    var link = wrapper.find(".".concat(styles.header)).find('Link');
    link.simulate('click');
    (0, _chai.expect)(props.viewReportAlignment.calledOnce).to.be.true;
  });
  it('conditionally renders tooltip based on state.showTooltip', function () {
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, makeProps()), {
      disableLifecycleMethods: true
    });
    (0, _chai.expect)(wrapper.find('Tooltip')).to.have.length(0);
    wrapper.setState({
      showTooltip: true
    });
    (0, _chai.expect)(wrapper.find('Tooltip')).to.have.length(1);
  });
  it('includes a TruncateText element that can update state', function () {
    var wrapper = (0, _enzyme.mount)(_react.default.createElement(_index.default, makeProps()));
    (0, _chai.expect)(wrapper.find('TruncateText')).to.have.length(1);
    wrapper.find('TruncateText').props().onUpdate(true);
    (0, _chai.expect)(wrapper.state().showTooltip).to.equal(true);
  });
  it('includes a AccessibleContent element', function () {
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, makeProps()), {
      disableLifecycleMethods: true
    });
    (0, _chai.expect)(wrapper.find('AccessibleContent')).to.have.length(1);
  });
  it('meets a11y standards', function () {
    return (0, _checkA11y.default)(_react.default.createElement(_index.default, makeProps()));
  });
});