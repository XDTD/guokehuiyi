"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSearchTotal = exports.getSearchPage = exports.getIsSearchLoading = exports.getSearchText = exports.getSearchEntries = void 0;

var _immutable = require("immutable");

var _reselect = require("reselect");

var _reReselect = _interopRequireDefault(require("re-reselect"));

var _lodash = require("lodash");

var _selectors = require("../alignments/selectors");

var customDeepComparisonSelector = (0, _reselect.createSelectorCreator)(_reselect.defaultMemoize, _lodash.isEqual);

var getSearch = function getSearch(state, scope) {
  return state.getIn([scope, 'OutcomePicker', 'search']) || (0, _immutable.Map)();
};

var getSearchEntries = (0, _reReselect.default)(function (state, scope) {
  var entries = getSearch(state, scope).get('entries');
  entries = entries ? entries.toJS() : [];
  return entries.map(function (entry) {
    return (0, _selectors.getAnyOutcome)(state, scope, entry.id);
  });
}, function (entries) {
  return entries;
})(function (_state, scope) {
  return scope;
}, {
  // Deep comparison: https://github.com/toomuchdesign/re-reselect/issues/31
  selectorCreator: customDeepComparisonSelector
});
exports.getSearchEntries = getSearchEntries;

var getSearchText = function getSearchText(state, scope) {
  return getSearch(state, scope).get('searchText');
};

exports.getSearchText = getSearchText;

var getIsSearchLoading = function getIsSearchLoading(state, scope) {
  return getSearch(state, scope).get('isLoading');
};

exports.getIsSearchLoading = getIsSearchLoading;

var pagination = function pagination(state, scope) {
  return getSearch(state, scope).get('pagination') || (0, _immutable.Map)();
};

var getSearchPage = function getSearchPage(state, scope) {
  return pagination(state, scope).get('page');
};

exports.getSearchPage = getSearchPage;

var getSearchTotal = function getSearchTotal(state, scope) {
  return pagination(state, scope).get('total');
};

exports.getSearchTotal = getSearchTotal;