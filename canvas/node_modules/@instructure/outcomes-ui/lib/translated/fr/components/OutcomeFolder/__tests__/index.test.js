"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _chai = require("chai");

var _react = _interopRequireDefault(require("react"));

var _sinon = _interopRequireDefault(require("sinon"));

var _enzyme = require("enzyme");

var _index = _interopRequireDefault(require("../index"));

var _checkA11y = _interopRequireDefault(require("../../../test/checkA11y"));

describe('OutcomeFolder', function () {
  function makeProps() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Object.assign({
      outcome: {
        id: '101',
        label: 'XYZ',
        title: 'The student will make cupcakes'
      },
      clickable: true,
      getOutcomeSummary: _sinon.default.spy(),
      setActiveCollection: _sinon.default.spy(),
      toggleExpandedIds: _sinon.default.spy()
    }, props);
  }

  it('will set the active collection and expand when the title is clicked', function () {
    var props = makeProps();
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, props), {
      disableLifecycleMethods: true
    });
    var click = wrapper.find('Link').prop('onClick');
    click();
    (0, _chai.expect)(props.setActiveCollection.calledOnce).to.be.true;
    (0, _chai.expect)(props.toggleExpandedIds.calledOnce).to.be.true;
  });
  it('will set ensure the activeCollection is expanded before setting a new one', function () {
    var props = makeProps({
      activeCollectionId: '1'
    });
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, props), {
      disableLifecycleMethods: true
    });
    var click = wrapper.find('Link').prop('onClick');
    click();
    (0, _chai.expect)(props.toggleExpandedIds.calledWith({
      id: '1',
      forceOpen: true
    })).to.be.true;
  });
  it('will make titles unclickable if clickable set to false', function () {
    var props = makeProps({
      clickable: false
    });
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, props), {
      disableLifecycleMethods: true
    });
    (0, _chai.expect)(wrapper.find('Link')).to.have.length(0);
  });
  it('meets a11y standards', function () {
    return (0, _checkA11y.default)(_react.default.createElement(_index.default, makeProps()));
  });
});