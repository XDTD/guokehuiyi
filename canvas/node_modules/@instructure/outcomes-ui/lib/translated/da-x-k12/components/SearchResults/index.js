"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.RESULTS_PER_PAGE = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiText = require("@instructure/ui-text");

var _uiFlex = require("@instructure/ui-flex");

var _uiView = require("@instructure/ui-view");

var _uiSpinner = require("@instructure/ui-spinner");

var _isEqual = _interopRequireDefault(require("lodash/isEqual"));

var _OutcomeCheckbox = _interopRequireDefault(require("../OutcomeCheckbox"));

var _Pagination = _interopRequireDefault(require("../Pagination"));

var _default_daXK12_number = Intl.NumberFormat("da-x-k12", { style: "decimal" }).format;
var RESULTS_PER_PAGE = 10;
exports.RESULTS_PER_PAGE = RESULTS_PER_PAGE;

var SearchResults = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(SearchResults, _React$Component);

  function SearchResults() {
    (0, _classCallCheck2.default)(this, SearchResults);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SearchResults).apply(this, arguments));
  }

  (0, _createClass2.default)(SearchResults, [{
    key: "componentDidUpdate",
    // eslint-disable-next-line no-undef
    value: function componentDidUpdate(prevProps) {
      var _this$props = this.props,
          isSearchLoading = _this$props.isSearchLoading,
          searchPage = _this$props.searchPage,
          screenreaderNotification = _this$props.screenreaderNotification;

      if (screenreaderNotification) {
        if (!isSearchLoading && prevProps.isSearchLoading) {
          screenreaderNotification("Resultater opdateret indtil side " + searchPage + " af " + this.getPageCount());
          screenreaderNotification(this.getResultCountText());
        }

        if (!(0, _isEqual.default)(searchPage, prevProps.searchPage)) {
          screenreaderNotification("Indl\xE6ser side " + searchPage);
        }
      }
    }
  }, {
    key: "renderEntries",
    value: function renderEntries() {
      var _this$props2 = this.props,
          setFocusedOutcome = _this$props2.setFocusedOutcome,
          isOutcomeSelected = _this$props2.isOutcomeSelected,
          selectOutcomeIds = _this$props2.selectOutcomeIds,
          deselectOutcomeIds = _this$props2.deselectOutcomeIds,
          searchEntries = _this$props2.searchEntries;
      return searchEntries.map(function (outcome) {
        return _react.default.createElement("div", {
          key: outcome.id,
          "data-automation": "searchResults__outcomeResult"
        }, _react.default.createElement(_OutcomeCheckbox.default, {
          outcome: outcome,
          setFocusedOutcome: setFocusedOutcome,
          isOutcomeSelected: isOutcomeSelected,
          selectOutcomeIds: selectOutcomeIds,
          deselectOutcomeIds: deselectOutcomeIds
        }));
      });
    }
  }, {
    key: "getPageCount",
    value: function getPageCount() {
      var searchTotal = this.props.searchTotal;
      return Math.ceil(searchTotal / RESULTS_PER_PAGE);
    }
  }, {
    key: "renderPagination",
    value: function renderPagination() {
      var _this$props3 = this.props,
          searchPage = _this$props3.searchPage,
          updateSearchPage = _this$props3.updateSearchPage;
      return _react.default.createElement(_Pagination.default, {
        page: searchPage,
        updatePage: updateSearchPage,
        numPages: this.getPageCount()
      });
    }
  }, {
    key: "getResultCountText",
    value: function getResultCountText() {
      var _s, _n, _t, _i;

      var searchTotal = this.props.searchTotal;
      return _s = searchTotal, _n = +_s, _n === 0 ? "S\xF8gningen gav ingen resultater" : (_t = +('' + _s).replace(/^[^.]*.?|0+$/g, ''), _i = Math.floor(Math.abs(+_s)), _n === 1 || _t !== 0 && (_i === 0 || _i === 1) ? _default_daXK12_number(searchTotal) + " resultat" : _default_daXK12_number(searchTotal) + " resultater");
    }
  }, {
    key: "renderResults",
    value: function renderResults() {
      var searchEntries = this.props.searchEntries;
      return _react.default.createElement(_uiView.View, null, searchEntries.length > 0 && _react.default.createElement(_uiView.View, {
        "data-automation": "searchResults__resultsList",
        display: "block",
        padding: "small none none none"
      }, this.renderEntries()));
    }
  }, {
    key: "renderHeader",
    value: function renderHeader() {
      var searchTotal = this.props.searchTotal;
      return searchTotal !== null && _react.default.createElement(_uiView.View, null, _react.default.createElement(_uiText.Text, {
        size: "small",
        "data-automation": "searchResults__resultsCount"
      }, this.getResultCountText()));
    }
  }, {
    key: "renderLoading",
    value: function renderLoading() {
      return _react.default.createElement(_uiFlex.Flex, {
        justifyItems: "center"
      }, _react.default.createElement(_uiFlex.Flex.Item, {
        padding: "small"
      }, _react.default.createElement(_uiSpinner.Spinner, {
        renderTitle: "Indl\xE6ser s\xF8geresultater"
      })));
    }
  }, {
    key: "render",
    value: function render() {
      var isSearchLoading = this.props.isSearchLoading;
      return _react.default.createElement(_uiFlex.Flex, {
        height: "100%",
        width: "100%",
        padding: "small none none none",
        alignItems: "stretch",
        direction: "column"
      }, _react.default.createElement(_uiFlex.Flex.Item, {
        shouldGrow: true
      }, this.renderHeader(), isSearchLoading ? this.renderLoading() : this.renderResults()), _react.default.createElement(_uiFlex.Flex.Item, null, !isSearchLoading && this.renderPagination()));
    }
  }]);
  SearchResults.displayName = "SearchResults";
  return SearchResults;
}(_react.default.Component);

SearchResults.propTypes = {
  isSearchLoading: _propTypes.default.bool.isRequired,
  searchEntries: _propTypes.default.array.isRequired,
  searchPage: _propTypes.default.number.isRequired,
  searchTotal: _propTypes.default.number,
  updateSearchPage: _propTypes.default.func.isRequired,
  setFocusedOutcome: _propTypes.default.func.isRequired,
  isOutcomeSelected: _propTypes.default.func.isRequired,
  selectOutcomeIds: _propTypes.default.func.isRequired,
  deselectOutcomeIds: _propTypes.default.func.isRequired,
  screenreaderNotification: _propTypes.default.func
};
SearchResults.defaultProps = {
  screenreaderNotification: null,
  searchTotal: null
};
var _default = SearchResults;
exports.default = _default;