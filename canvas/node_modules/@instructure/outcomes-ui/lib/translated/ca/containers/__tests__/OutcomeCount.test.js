"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _chai = require("chai");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _createMockStore = _interopRequireDefault(require("../../test/createMockStore"));

var _AlignmentCount = _interopRequireDefault(require("../../components/AlignmentCount"));

var _OutcomeCount = _interopRequireDefault(require("../OutcomeCount"));

describe('OutcomeCount', function () {
  function makeProps() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var store = (0, _createMockStore.default)();
    return Object.assign({
      store: store,
      alignmentSetId: '',
      artifactType: 'foo',
      artifactId: '1',
      host: 'http://foo.outcomes.foo',
      jwt: 'secretfoo'
    }, props);
  }

  it('renders', function () {
    var wrapper = (0, _enzyme.mount)(_react.default.createElement("div", {
      id: "app"
    }, _react.default.createElement(_OutcomeCount.default, makeProps())));
    (0, _chai.expect)(wrapper.find(_AlignmentCount.default)).to.have.length(1);
  });
  it('sets the scope', function () {
    var props = makeProps();
    var wrapper = (0, _enzyme.mount)(_react.default.createElement("div", {
      id: "app"
    }, _react.default.createElement(_OutcomeCount.default, props)));
    (0, _chai.expect)(wrapper.find(_AlignmentCount.default).prop('scope')).to.equal('foo:::1');
  });
  it('uses proper fallbacks if store not passed in props', function () {
    var props = {
      artifactType: 'foo',
      artifactId: '1',
      host: '',
      jwt: '',
      alignmentSetId: ''
    };
    var wrapper = (0, _enzyme.mount)(_react.default.createElement("div", {
      id: "app"
    }, _react.default.createElement(_OutcomeCount.default, props)));
    (0, _chai.expect)(wrapper.find(_AlignmentCount.default).prop('scope')).to.equal('foo:::1');
  });
});