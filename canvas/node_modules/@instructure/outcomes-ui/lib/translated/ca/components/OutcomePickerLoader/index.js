"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiSpinner = require("@instructure/ui-spinner");

var _uiFlex = require("@instructure/ui-flex");

var OutcomePickerLoader = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(OutcomePickerLoader, _React$Component);

  function OutcomePickerLoader() {
    (0, _classCallCheck2.default)(this, OutcomePickerLoader);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(OutcomePickerLoader).apply(this, arguments));
  }

  (0, _createClass2.default)(OutcomePickerLoader, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var loadOutcomePicker = this.props.loadOutcomePicker;
      loadOutcomePicker();
    }
  }, {
    key: "render",
    value: function render() {
      switch (this.props.outcomePickerState) {
        case 'loading':
          return _react.default.createElement(_uiFlex.Flex, {
            justifyItems: "center"
          }, _react.default.createElement(_uiFlex.Flex.Item, {
            padding: "small"
          }, _react.default.createElement(_uiSpinner.Spinner, {
            renderTitle: "S'est\xE0 carregant"
          })));

        case 'choosing':
          {
            var OutcomePicker = this.props.outcomePicker;
            return _react.default.createElement(OutcomePicker, {
              scope: this.props.scope,
              artifactTypeName: this.props.artifactTypeName,
              displayMasteryDescription: this.props.displayMasteryDescription,
              displayMasteryPercentText: this.props.displayMasteryPercentText,
              setFocusedOutcome: this.props.setFocusedOutcome,
              screenreaderNotification: this.props.screenreaderNotification
            });
          }

        case 'saving':
          return _react.default.createElement(_uiFlex.Flex, {
            justifyItems: "center"
          }, _react.default.createElement(_uiFlex.Flex.Item, {
            padding: "small"
          }, _react.default.createElement(_uiSpinner.Spinner, {
            renderTitle: "S'est\xE0 desant"
          })));

        case 'complete':
          return _react.default.createElement("div", null, "Complet");

        case 'closed':
        default:
          return _react.default.createElement("div", null);
      }
    }
  }]);
  OutcomePickerLoader.displayName = "OutcomePickerLoader";
  return OutcomePickerLoader;
}(_react.default.Component);

exports.default = OutcomePickerLoader;
OutcomePickerLoader.propTypes = {
  loadOutcomePicker: _propTypes.default.func.isRequired,
  setFocusedOutcome: _propTypes.default.func.isRequired,
  outcomePickerState: _propTypes.default.string.isRequired,
  outcomePicker: _propTypes.default.func.isRequired,
  scope: _propTypes.default.string.isRequired,
  artifactTypeName: _propTypes.default.string,
  displayMasteryDescription: _propTypes.default.bool,
  displayMasteryPercentText: _propTypes.default.bool,
  screenreaderNotification: _propTypes.default.func
};
OutcomePickerLoader.defaultProps = {
  artifactTypeName: null,
  displayMasteryDescription: false,
  displayMasteryPercentText: false,
  screenreaderNotification: null
};