"use strict";

var _chai = require("chai");

var _immutable = require("immutable");

var _selectors = require("../selectors");

describe('search/selectors', function () {
  var scope = 'scopeForTest';
  var state = (0, _immutable.fromJS)({
    scopeForTest: {
      OutcomePicker: {
        search: {
          searchText: 'abc',
          isLoading: true,
          entries: [],
          pagination: {
            page: 7,
            total: 100
          }
        }
      }
    }
  });
  describe('getSearchText', function () {
    it('returns the search text', function () {
      (0, _chai.expect)((0, _selectors.getSearchText)(state, scope)).to.equal('abc');
    });
  });
  describe('getIsSearchLoading', function () {
    it('returns the loading state', function () {
      (0, _chai.expect)((0, _selectors.getIsSearchLoading)(state, scope)).to.equal(true);
    });
  });
  describe('getSearchEntries', function () {
    it('returns the search entries', function () {
      (0, _chai.expect)((0, _selectors.getSearchEntries)(state, scope)).to.deep.equal([]);
    });
  });
  describe('getSearchPage', function () {
    it('returns the current page', function () {
      (0, _chai.expect)((0, _selectors.getSearchPage)(state, scope)).to.equal(7);
    });
  });
  describe('getSearchTotal', function () {
    it('returns the current total', function () {
      (0, _chai.expect)((0, _selectors.getSearchTotal)(state, scope)).to.equal(100);
    });
  });
});