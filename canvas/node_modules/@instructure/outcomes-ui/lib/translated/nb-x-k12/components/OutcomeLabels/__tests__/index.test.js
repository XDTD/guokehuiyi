"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _chai = require("chai");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _uiIcons = require("@instructure/ui-icons");

var _index = _interopRequireDefault(require("../index"));

var _checkA11y = _interopRequireDefault(require("../../../test/checkA11y"));

describe('OutcomeLabels', function () {
  function makeProps() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var outcomes = [{
      id: '1',
      label: 'ABC',
      title: 'Title1'
    }, {
      id: '2',
      label: 'DEF',
      title: 'Title2'
    }, {
      id: '3',
      label: 'GHI',
      title: 'Title3'
    }];
    return Object.assign({
      outcomes: outcomes
    }, props);
  }

  it('renders an icon', function () {
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, makeProps()), {
      disableLifecycleMethods: true
    });
    (0, _chai.expect)(wrapper.find(_uiIcons.IconOutcomesLine)).to.have.length(1);
  });
  it('renders outcome titles', function () {
    var wrapper = (0, _enzyme.render)(_react.default.createElement(_index.default, makeProps()));
    var text = wrapper.text();
    (0, _chai.expect)(text.match(/Title1/)).to.be.truthy;
    (0, _chai.expect)(text.match(/Title2/)).to.be.truthy;
    (0, _chai.expect)(text.match(/Title3/)).to.be.truthy;
  });
  it('does not render outcome labels', function () {
    var wrapper = (0, _enzyme.render)(_react.default.createElement(_index.default, makeProps()));
    var text = wrapper.text();
    (0, _chai.expect)(text.match(/ABC/)).to.be.falsey;
    (0, _chai.expect)(text.match(/DEF/)).to.be.falsey;
    (0, _chai.expect)(text.match(/GHI/)).to.be.falsey;
  });
  it('renders default text when outcome list empty', function () {
    var props = makeProps({
      outcomes: []
    });
    var wrapper = (0, _enzyme.render)(_react.default.createElement(_index.default, props));
    (0, _chai.expect)(wrapper.text().match(/No Outcomes are currently selected/)).to.be.truthy;
  });
  it('meets a11y standards', function () {
    return (0, _checkA11y.default)(_react.default.createElement(_index.default, makeProps()));
  });
});