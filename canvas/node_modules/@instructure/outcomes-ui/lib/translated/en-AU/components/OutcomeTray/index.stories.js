"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.searchResults = exports.paginatedNoSearch = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _addonKnobs = require("@storybook/addon-knobs");

var _constants = require("../../../.storybook/constants");

var _ = _interopRequireDefault(require("./"));

var _default = {
  title: 'OutcomeTray'
};
exports.default = _default;
var defaultProps = {
  updateSearchText: function updateSearchText() {},
  setSearchLoading: function setSearchLoading() {},
  setSearchEntries: function setSearchEntries() {},
  isOpen: true,
  isSearchLoading: false,
  setActiveCollection: function setActiveCollection() {},
  toggleExpandedIds: function toggleExpandedIds() {},
  setFocusedOutcome: function setFocusedOutcome() {},
  isOutcomeSelected: function isOutcomeSelected() {},
  isOutcomeGroup: function isOutcomeGroup() {},
  selectOutcomeIds: function selectOutcomeIds() {},
  deselectOutcomeIds: function deselectOutcomeIds() {},
  saveOutcomePickerAlignments: function saveOutcomePickerAlignments() {
    return Promise.resolve();
  },
  getOutcomesList: function getOutcomesList() {},
  updateSearchPage: function updateSearchPage() {},
  closeOutcomePicker: function closeOutcomePicker() {},
  resetOutcomePicker: function resetOutcomePicker() {}
};

var paginatedNoSearch = function paginatedNoSearch() {
  return _react.default.createElement(_.default, Object.assign({}, defaultProps, {
    searchText: "",
    outcomes: (0, _addonKnobs.object)('Outcomes', (0, _constants.defaultOutcomes)()),
    listPage: (0, _addonKnobs.number)('Page Index', 1),
    listTotal: (0, _addonKnobs.number)('Total Outcomes', 987),
    isFetching: (0, _addonKnobs.boolean)('Is Loading', false),
    searchEntries: [],
    searchTotal: 0,
    searchPage: 1
  }));
};

exports.paginatedNoSearch = paginatedNoSearch;

var searchResults = function searchResults() {
  return _react.default.createElement(_.default, Object.assign({}, defaultProps, {
    searchText: (0, _addonKnobs.text)('Search Text', 'Grade'),
    outcomes: {},
    listPage: (0, _addonKnobs.number)('Page Index', 1),
    listTotal: (0, _addonKnobs.number)('Total Outcomes', 987),
    isFetching: (0, _addonKnobs.boolean)('Is Loading', false),
    searchEntries: (0, _addonKnobs.object)('Search Results', (0, _constants.defaultOutcomes)()),
    searchTotal: (0, _addonKnobs.number)('Total Search Results', 987),
    searchPage: (0, _addonKnobs.number)('Search Page Index', 1)
  }));
};

exports.searchResults = searchResults;