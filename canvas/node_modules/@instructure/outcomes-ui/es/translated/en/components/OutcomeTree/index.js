import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";

var _dec, _class, _class2, _temp;

import React from 'react';
import PropTypes from 'prop-types';
import ReactDOM from 'react-dom';
import themeable from '@instructure/ui-themeable';
import { Billboard } from '@instructure/ui-billboard';
import { Flex } from '@instructure/ui-flex';
import { Text } from '@instructure/ui-text';
import { Heading } from '@instructure/ui-heading';
import OutcomeSelectionList from '../OutcomeSelectionList';
import OutcomeFolderList from '../OutcomeFolderList';
import TreeBrowser from './TreeBrowser';

var AlignOutcomes = function AlignOutcomes(props) {
  return React.createElement("svg", Object.assign({
    width: "120",
    height: "87",
    viewBox: "0 0 120 87",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), React.createElement("title", null, "Align-Outcomes"), React.createElement("g", {
    fill: "none",
    fillRule: "evenodd"
  }, React.createElement("path", {
    d: "M77.383 16.062a6.636 6.636 0 0 0 .604-2.762 6.667 6.667 0 0 0-4.204-6.193c.012-.142.022-.286.022-.431a4.958 4.958 0 0 0-4.958-4.958 4.927 4.927 0 0 0-2.898.94A11.87 11.87 0 0 0 59.881 1c-4.753 0-8.856 2.779-10.776 6.8a7.219 7.219 0 0 0-2.983-.648c-4 0-7.243 3.243-7.243 7.243 0 .574.074 1.13.201 1.667h38.303z",
    fill: "#FFF"
  }), React.createElement("path", {
    d: "M77.383 16.062a6.636 6.636 0 0 0 .604-2.762 6.667 6.667 0 0 0-4.204-6.193c.012-.142.022-.286.022-.431a4.958 4.958 0 0 0-4.958-4.958 4.927 4.927 0 0 0-2.898.94A11.87 11.87 0 0 0 59.881 1c-4.753 0-8.856 2.779-10.776 6.8a7.219 7.219 0 0 0-2.983-.648c-4 0-7.243 3.243-7.243 7.243 0 .574.074 1.13.201 1.667h38.303z",
    stroke: "#CED3D7",
    strokeWidth: "2",
    strokeLinecap: "round"
  }), React.createElement("path", {
    d: "M118.39 23.614c.015-.228.025-.457.025-.688 0-5.703-4.623-10.327-10.326-10.327-1.913 0-3.704.523-5.24 1.43a7.675 7.675 0 0 0-14.68 2.219 6.02 6.02 0 0 0-.936-.08 5.992 5.992 0 0 0-5.992 5.992c0 .502.07.988.185 1.454h36.964z",
    fill: "#FFF"
  }), React.createElement("path", {
    d: "M118.39 23.614c.015-.228.025-.457.025-.688 0-5.703-4.623-10.327-10.326-10.327-1.913 0-3.704.523-5.24 1.43a7.675 7.675 0 0 0-14.68 2.219 6.02 6.02 0 0 0-.936-.08 5.992 5.992 0 0 0-5.992 5.992c0 .502.07.988.185 1.454h36.964z",
    stroke: "#CED3D7",
    strokeWidth: "2",
    strokeLinecap: "round"
  }), React.createElement("path", {
    d: "M84.402 85.735a3.82 3.82 0 0 1-3.174-1.685L57.064 48.29 32.901 84.05a3.827 3.827 0 1 1-6.34-4.284l30.503-45.148L87.57 79.766a3.827 3.827 0 0 1-3.167 5.97",
    fill: "#E5E8EA"
  }), React.createElement("path", {
    d: "M84.402 85.735a3.82 3.82 0 0 1-3.174-1.685L57.064 48.29 32.901 84.05a3.827 3.827 0 1 1-6.34-4.284l30.503-45.148L87.57 79.766a3.827 3.827 0 0 1-3.167 5.97z",
    stroke: "#3F5463",
    strokeWidth: "2"
  }), React.createElement("path", {
    d: "M84.398 50.201c0 15.096-12.238 27.334-27.334 27.334S29.73 65.297 29.73 50.201s12.238-27.334 27.334-27.334 27.334 12.238 27.334 27.334",
    fill: "#FFF"
  }), React.createElement("path", {
    d: "M84.398 50.201c0 15.096-12.238 27.334-27.334 27.334S29.73 65.297 29.73 50.201s12.238-27.334 27.334-27.334 27.334 12.238 27.334 27.334z",
    stroke: "#3F5463",
    strokeWidth: "2"
  }), React.createElement("path", {
    d: "M77.291 50.201c0 11.171-9.055 20.227-20.226 20.227s-20.227-9.056-20.227-20.227c0-11.17 9.056-20.227 20.227-20.227 11.17 0 20.227 9.056 20.227 20.227",
    fill: "#F1060F"
  }), React.createElement("path", {
    d: "M77.291 50.201c0 11.171-9.055 20.227-20.226 20.227s-20.227-9.056-20.227-20.227c0-11.17 9.056-20.227 20.227-20.227 11.17 0 20.227 9.056 20.227 20.227z",
    stroke: "#3F5463",
    strokeWidth: "2"
  }), React.createElement("path", {
    d: "M70.185 50.201c0 7.246-5.874 13.12-13.12 13.12-7.246 0-13.121-5.874-13.121-13.12 0-7.246 5.875-13.12 13.12-13.12 7.247 0 13.12 5.874 13.12 13.12",
    fill: "#FFF"
  }), React.createElement("path", {
    d: "M70.185 50.201c0 7.246-5.874 13.12-13.12 13.12-7.246 0-13.121-5.874-13.121-13.12 0-7.246 5.875-13.12 13.12-13.12 7.247 0 13.12 5.874 13.12 13.12z",
    stroke: "#3F5463",
    strokeWidth: "2"
  }), React.createElement("path", {
    d: "M63.625 50.201a6.56 6.56 0 1 1-13.12 0 6.56 6.56 0 0 1 13.12 0",
    fill: "#F1060F"
  }), React.createElement("path", {
    d: "M63.625 50.201a6.56 6.56 0 1 1-13.12 0 6.56 6.56 0 0 1 13.12 0z",
    stroke: "#3F5463",
    strokeWidth: "2"
  }), React.createElement("path", {
    d: "M42.855 23.346a8.598 8.598 0 0 0 .857-3.736 8.655 8.655 0 0 0-8.654-8.654c-4.003 0-7.361 2.72-8.35 6.41a8.657 8.657 0 0 0-2.548-.532l.002-.027A8.344 8.344 0 0 0 8.12 13.59C4.074 14.314 1 17.845 1 22.1c0 .424.04.837.1 1.245h41.755z",
    fill: "#FFF"
  }), React.createElement("path", {
    d: "M42.855 23.346a8.598 8.598 0 0 0 .857-3.736 8.655 8.655 0 0 0-8.654-8.654c-4.003 0-7.361 2.72-8.35 6.41a8.657 8.657 0 0 0-2.548-.532l.002-.027A8.344 8.344 0 0 0 8.12 13.59C4.074 14.314 1 17.845 1 22.1c0 .424.04.837.1 1.245h41.755z",
    stroke: "#CED3D7",
    strokeWidth: "2",
    strokeLinecap: "round"
  }), React.createElement("path", {
    fill: "#3F5463",
    d: "M64.635 43.022V15.576l10.02 10.021 14.62-14.619 7.404 7.403-14.62 14.62 10.023 10.021z"
  }), React.createElement("path", {
    d: "M89.275 8.857l-2.12 2.12-12.499 12.499-6.4-6.4-5.122-5.121v32.568h32.568L90.58 39.4l-6.4-6.4 12.498-12.498 2.122-2.121-2.122-2.122-5.282-5.282-2.12-2.121zm0 4.243l5.282 5.282L79.938 33l8.521 8.522H66.134V19.197l8.522 8.522 14.62-14.62z",
    fill: "#FFF"
  })));
};

import theme from '../theme';
var styles = {
  componentId: 'bkdMu',
  template: function template(theme) {
    return "\n\n.outcomes-ui__OutcomeTree--outcomeTree {\n  overflow: scroll;\n  height: 100%;\n}\n\n.outcomes-ui__OutcomeTree--outcomeContent {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y: scroll;\n}\n\n.outcomes-ui__OutcomeTree--selectedOutcomeCollection {\n  padding-bottom: 1rem;\n  padding-left: 1rem;\n  padding-top: 1rem;\n}\n\n.outcomes-ui__OutcomeTree--selectedOutcomeCollection .outcomes-ui__OutcomeTree--outcomeDescription > p {\n  margin-top: 0.75rem;\n  margin-bottom: 0.75rem;\n}\n\n.outcomes-ui__OutcomeTree--selectedOutcomeCollection .outcomes-ui__OutcomeTree--outcomeDescription > p:last-child {\n    margin-bottom: 0\n  }\n";
  },
  'outcomeTree': 'outcomes-ui__OutcomeTree--outcomeTree',
  'outcomeContent': 'outcomes-ui__OutcomeTree--outcomeContent',
  'selectedOutcomeCollection': 'outcomes-ui__OutcomeTree--selectedOutcomeCollection',
  'outcomeDescription': 'outcomes-ui__OutcomeTree--outcomeDescription'
};
import { sanitizeHtml } from '../../lib/sanitize';
var OutcomeTree = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {
  _inherits(OutcomeTree, _React$Component);

  function OutcomeTree() {
    _classCallCheck(this, OutcomeTree);

    return _possibleConstructorReturn(this, _getPrototypeOf(OutcomeTree).apply(this, arguments));
  }

  _createClass(OutcomeTree, [{
    key: "setRHS",
    // eslint-disable-next-line no-undef
    value: function setRHS(rhs) {
      this.rhs = rhs; // eslint-disable-line immutable/no-mutation
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(oldProps) {
      var oldCollection = oldProps.activeCollection ? oldProps.activeCollection.id : null;
      var newCollection = this.props.activeCollection ? this.props.activeCollection.id : null;
      var parent = ReactDOM.findDOMNode(this); // eslint-disable-line react/no-find-dom-node

      if (oldCollection !== newCollection && parent && !parent.contains(document.activeElement) && this.rhs) {
        var next = this.rhs.querySelector('input') || this.rhs.querySelector('button');

        if (next) {
          next.focus();
        }
      }
    }
  }, {
    key: "renderActiveCollection",
    value: function renderActiveCollection() {
      var activeCollection = this.props.activeCollection;
      return activeCollection && activeCollection.id ? React.createElement("div", {
        className: styles.selectedOutcomeCollection
      }, React.createElement("div", null, React.createElement(Heading, {
        level: "h3",
        as: "h2",
        margin: "0 0 x-small"
      }, activeCollection.header)), React.createElement("div", null, React.createElement(Text, {
        size: "x-small"
      }, activeCollection.summary)), React.createElement(Text, {
        size: "x-small"
      }, React.createElement("div", {
        className: styles.outcomeDescription,
        dangerouslySetInnerHTML: {
          // eslint-disable-line react/no-danger
          __html: sanitizeHtml(activeCollection.description)
        }
      }))) : React.createElement(Billboard, {
        message: "Browse your outcomes using the group folders.",
        heading: "Align Outcomes",
        headingAs: "h3",
        headingLevel: "h3",
        size: "small",
        hero: React.createElement(AlignOutcomes, null),
        margin: "medium"
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          activeChildren = _this$props.activeChildren,
          collections = _this$props.collections,
          setFocusedOutcome = _this$props.setFocusedOutcome,
          getOutcomeSummary = _this$props.getOutcomeSummary,
          isOutcomeSelected = _this$props.isOutcomeSelected,
          selectOutcomeIds = _this$props.selectOutcomeIds,
          deselectOutcomeIds = _this$props.deselectOutcomeIds,
          setActiveCollection = _this$props.setActiveCollection,
          rootOutcomeIds = _this$props.rootOutcomeIds,
          activeCollection = _this$props.activeCollection,
          toggleExpandedIds = _this$props.toggleExpandedIds,
          expandedIds = _this$props.expandedIds;
      var groups = activeChildren.groups,
          nonGroups = activeChildren.nonGroups;
      return React.createElement(Flex, {
        alignItems: "stretch",
        height: "100%",
        width: "100%"
      }, React.createElement(Flex.Item, {
        width: "30%"
      }, React.createElement("div", {
        className: styles.outcomeTree,
        "data-automation": "outcomePicker__outcomeTree"
      }, React.createElement(TreeBrowser, {
        collections: collections,
        setActiveCollection: setActiveCollection,
        rootOutcomeIds: rootOutcomeIds,
        expandedIds: expandedIds,
        toggleExpandedIds: toggleExpandedIds
      }))), React.createElement(Flex.Item, {
        size: "0",
        shouldGrow: true,
        display: "flex",
        borderWidth: "0 0 0 small"
      }, React.createElement(Flex, {
        height: "100%",
        width: "100%",
        direction: "column",
        alignItems: "stretch",
        className: styles.outcomeContent,
        elementRef: function elementRef(rhs) {
          return _this.setRHS(rhs);
        },
        "data-automation": "outcomePicker__outcomeContent"
      }, React.createElement(Flex.Item, {
        size: "0",
        shouldGrow: true
      }, this.renderActiveCollection(), React.createElement(OutcomeSelectionList, {
        setFocusedOutcome: setFocusedOutcome,
        outcomes: nonGroups,
        isOutcomeSelected: isOutcomeSelected,
        selectOutcomeIds: selectOutcomeIds,
        deselectOutcomeIds: deselectOutcomeIds
      }), React.createElement(OutcomeFolderList, {
        outcomes: groups,
        setActiveCollection: setActiveCollection,
        getOutcomeSummary: getOutcomeSummary,
        toggleExpandedIds: toggleExpandedIds,
        activeCollectionId: activeCollection ? activeCollection.id : null
      })))));
    }
  }]);

  OutcomeTree.displayName = "OutcomeTree";
  return OutcomeTree;
}(React.Component), _class2.propTypes = {
  expandedIds: PropTypes.array,
  toggleExpandedIds: PropTypes.func.isRequired,
  setFocusedOutcome: PropTypes.func.isRequired,
  getOutcomeSummary: PropTypes.func.isRequired,
  isOutcomeSelected: PropTypes.func.isRequired,
  selectOutcomeIds: PropTypes.func.isRequired,
  deselectOutcomeIds: PropTypes.func.isRequired,
  collections: PropTypes.object.isRequired,
  setActiveCollection: PropTypes.func.isRequired,
  rootOutcomeIds: PropTypes.array.isRequired,
  activeChildren: PropTypes.shape({
    groups: PropTypes.array,
    nonGroups: PropTypes.array
  }),
  activeCollection: PropTypes.shape({
    id: PropTypes.string,
    header: PropTypes.string,
    summary: PropTypes.string,
    description: PropTypes.string
  })
}, _class2.defaultProps = {
  expandedIds: null,
  activeCollection: null,
  activeChildren: {
    groups: [],
    nonGroups: []
  }
}, _temp)) || _class);
export default OutcomeTree;