import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import React from 'react';
import PropTypes from 'prop-types';
import { Pagination as InstuiPagination } from '@instructure/ui-pagination';
import t from 'format-message';

var Pagination = /*#__PURE__*/function (_React$Component) {
  _inherits(Pagination, _React$Component);

  function Pagination() {
    _classCallCheck(this, Pagination);

    return _possibleConstructorReturn(this, _getPrototypeOf(Pagination).apply(this, arguments));
  }

  _createClass(Pagination, [{
    key: "renderPage",
    value: function renderPage(i) {
      var _this$props = this.props,
          page = _this$props.page,
          updatePage = _this$props.updatePage;
      return React.createElement(InstuiPagination.Page, {
        key: i,
        current: i === page,
        onClick: function onClick() {
          return updatePage(i);
        },
        "data-automation": "results__pageButton"
      }, t.number(i));
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var numPages = this.props.numPages;
      return numPages > 1 && React.createElement(InstuiPagination, {
        margin: "small",
        variant: "compact",
        labelNext: "Naslednja stran",
        labelPrev: "Prej\u0161nja stran"
      }, Array(numPages).fill(0).map(function (_value, i) {
        return _this.renderPage(i + 1);
      }));
    }
  }]);

  Pagination.displayName = "Pagination";
  return Pagination;
}(React.Component);

Pagination.propTypes = {
  numPages: PropTypes.number,
  page: PropTypes.number,
  updatePage: PropTypes.func.isRequired
};
Pagination.defaultProps = {
  numPages: 1,
  page: 1
};
export { Pagination as default };