import { expect } from 'chai';
import React from 'react';
import { shallow, mount } from 'enzyme';
import OutcomeDescription from '../index';
import checkA11y from '../../../test/checkA11y';
describe('OutcomeDescription', function () {
  function makeProps() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Object.assign({
      description: 'Hello there',
      truncate: true
    }, props);
  }

  it('renders outcome description', function () {
    var props = makeProps();
    var wrapper = mount(React.createElement(OutcomeDescription, props));
    expect(wrapper.text()).to.match(/Hello there/);
  });
  it('sanitizes an outcome description', function () {
    var props = makeProps({
      description: 'Hello <img src="bigimage" />'
    });
    var wrapper = mount(React.createElement(OutcomeDescription, props));
    expect(wrapper.html()).not.to.include('bigimage');
    expect(wrapper.html()).not.to.include('img');
  });
  it('renders a TruncateText element if the outcome description is long', function () {
    var props = makeProps({
      description: 'a'.repeat(500)
    });
    var wrapper = shallow(React.createElement(OutcomeDescription, props), {
      disableLifecycleMethods: true
    });
    expect(wrapper.find('TruncateText')).to.have.length(1);
  });
  it('meets a11y standards', function () {
    return checkA11y(React.createElement(OutcomeDescription, makeProps()));
  });
});