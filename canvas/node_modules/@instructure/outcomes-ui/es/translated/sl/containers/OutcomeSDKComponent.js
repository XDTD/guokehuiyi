import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import React from 'react';
import PropTypes from 'prop-types';
import { Provider } from 'react-redux';
import { getStore, makeScope, makeUserScope } from '../store';

var makeSDKComponent = function makeSDKComponent(ComponentClass) {
  var _class, _temp;

  var additionalPropTypes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return _temp = _class = /*#__PURE__*/function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class() {
      _classCallCheck(this, _class);

      return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));
    }

    _createClass(_class, [{
      key: "contextUuid",
      value: function contextUuid() {
        return this.props.contextUuid || '';
      }
    }, {
      key: "scope",
      value: function scope() {
        var _this$props = this.props,
            scope = _this$props.scope,
            artifactType = _this$props.artifactType,
            artifactId = _this$props.artifactId,
            userUuid = _this$props.userUuid;
        var userScope = makeUserScope(artifactType, artifactId, userUuid);
        var artifactScope = makeScope(artifactType, artifactId);
        var generatedScope = userUuid ? userScope : artifactScope; // eslint-disable-next-line immutable/no-mutation

        return scope || generatedScope;
      }
    }, {
      key: "store",
      value: function store() {
        var _this$props2 = this.props,
            store = _this$props2.store,
            host = _this$props2.host,
            jwt = _this$props2.jwt,
            artifactType = _this$props2.artifactType,
            artifactId = _this$props2.artifactId; // eslint-disable-next-line immutable/no-mutation

        return store || getStore(host, jwt, this.scope(), this.contextUuid(), artifactType, artifactId);
      }
    }, {
      key: "propsForChild",
      value: function propsForChild() {
        return _objectSpread({}, this.props, {
          contextUuid: this.contextUuid(),
          scope: this.scope()
        });
      }
    }, {
      key: "render",
      value: function render() {
        return React.createElement(Provider, {
          store: this.store()
        }, React.createElement(ComponentClass, this.propsForChild()));
      }
    }]);

    _class.displayName = "_class";
    return _class;
  }(React.Component), _class.propTypes = _objectSpread({
    store: PropTypes.object,
    scope: PropTypes.string,
    contextUuid: PropTypes.string,
    artifactType: PropTypes.string.isRequired,
    artifactId: PropTypes.string.isRequired,
    host: PropTypes.string.isRequired,
    jwt: PropTypes.string.isRequired,
    userUuid: PropTypes.string
  }, additionalPropTypes), _class.defaultProps = {
    store: null,
    scope: null,
    contextUuid: '',
    userUuid: null
  }, _class.displayName = "SDKComponent(".concat(ComponentClass.displayName, ")"), _temp;
};

export default makeSDKComponent;