import { expect } from 'chai';
import { fromJS } from 'immutable';
import { getSearchText, getIsSearchLoading, getSearchEntries, getSearchPage, getSearchTotal } from '../selectors';
describe('search/selectors', function () {
  var scope = 'scopeForTest';
  var state = fromJS({
    scopeForTest: {
      OutcomePicker: {
        search: {
          searchText: 'abc',
          isLoading: true,
          entries: [],
          pagination: {
            page: 7,
            total: 100
          }
        }
      }
    }
  });
  describe('getSearchText', function () {
    it('returns the search text', function () {
      expect(getSearchText(state, scope)).to.equal('abc');
    });
  });
  describe('getIsSearchLoading', function () {
    it('returns the loading state', function () {
      expect(getIsSearchLoading(state, scope)).to.equal(true);
    });
  });
  describe('getSearchEntries', function () {
    it('returns the search entries', function () {
      expect(getSearchEntries(state, scope)).to.deep.equal([]);
    });
  });
  describe('getSearchPage', function () {
    it('returns the current page', function () {
      expect(getSearchPage(state, scope)).to.equal(7);
    });
  });
  describe('getSearchTotal', function () {
    it('returns the current total', function () {
      expect(getSearchTotal(state, scope)).to.equal(100);
    });
  });
});