import { compose } from 'redux';
import { connect } from 'react-redux';
import { bindActionCreators as bindScopedActionCreators } from 'multireducer';
import AlignmentCount from '../components/AlignmentCount';
import WithAlignmentSet from '../components/WithAlignmentSet';
import { getAlignedOutcomeCount } from '../store/alignments/selectors';
import { loadAlignments } from '../store/alignments/actions';

function mapStateToProps(state, ownProps) {
  var scope = ownProps.scope;
  return {
    count: getAlignedOutcomeCount(state, scope)
  };
}

function mapDispatchToProps(dispatch, ownProps) {
  var scope = ownProps.scope;
  return bindScopedActionCreators({
    loadAlignments: loadAlignments
  }, dispatch, scope);
}

var ConnectedAlignmentCount = compose(connect(mapStateToProps, mapDispatchToProps), WithAlignmentSet)(AlignmentCount);
export default ConnectedAlignmentCount;