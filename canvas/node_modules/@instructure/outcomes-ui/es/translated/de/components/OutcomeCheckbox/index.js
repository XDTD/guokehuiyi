import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";

var _dec, _class, _class2, _temp;

import React from 'react';
import PropTypes from 'prop-types';
import { Text } from '@instructure/ui-text';
import { Link } from '@instructure/ui-link';
import { Checkbox } from '@instructure/ui-checkbox';
import { themeable } from '@instructure/ui-themeable';
import { outcomeShape } from '../../store/shapes';
import OutcomeDescription from '../OutcomeDescription';
import theme from '../theme';
var styles = {
  componentId: 'cxEhj',
  template: function template(theme) {
    return "\n\n.outcomes-ui__OutcomeCheckbox--checkbox {\n  padding: ".concat(theme.outcomePickerItemPadding || 'inherit', ";\n}\n\n.outcomes-ui__OutcomeCheckbox--checkboxLabel {\n  padding-left: ").concat(theme.checkboxLabelLeftPadding || 'inherit', ";\n  display: flex;\n}\n\n.outcomes-ui__OutcomeCheckbox--checkboxDescription {\n  padding-left: ").concat(theme.checkboxDescriptionLeftPadding || 'inherit', ";\n}\n\n.outcomes-ui__OutcomeCheckbox--linkText {\n  display: table;\n  table-layout: fixed;\n  white-space: nowrap;\n  width: 100%;\n}\n\n.outcomes-ui__OutcomeCheckbox--innerLinkText {\n  display: table-cell;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n");
  },
  'checkbox': 'outcomes-ui__OutcomeCheckbox--checkbox',
  'checkboxLabel': 'outcomes-ui__OutcomeCheckbox--checkboxLabel',
  'checkboxDescription': 'outcomes-ui__OutcomeCheckbox--checkboxDescription',
  'linkText': 'outcomes-ui__OutcomeCheckbox--linkText',
  'innerLinkText': 'outcomes-ui__OutcomeCheckbox--innerLinkText'
};
var OutcomeCheckbox = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {
  _inherits(OutcomeCheckbox, _React$Component);

  function OutcomeCheckbox() {
    _classCallCheck(this, OutcomeCheckbox);

    return _possibleConstructorReturn(this, _getPrototypeOf(OutcomeCheckbox).apply(this, arguments));
  }

  _createClass(OutcomeCheckbox, [{
    key: "selected",
    // eslint-disable-next-line no-undef
    value: function selected() {
      return this.props.isOutcomeSelected(this.props.outcome.id);
    }
  }, {
    key: "toggleOutcomeSelection",
    value: function toggleOutcomeSelection() {
      if (this.selected()) {
        this.props.deselectOutcomeIds([this.props.outcome.id]);
      } else {
        this.props.selectOutcomeIds([this.props.outcome.id]);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var outcome = this.props.outcome;
      var id = outcome.id,
          description = outcome.description,
          title = outcome.title;
      return React.createElement("div", {
        className: "OutcomeSelector ".concat(styles.checkbox)
      }, React.createElement(Checkbox, {
        value: id,
        checked: this.selected(),
        onChange: function onChange() {
          return _this.toggleOutcomeSelection();
        },
        label: React.createElement("div", {
          className: styles.checkboxLabel
        }, React.createElement(Link, {
          onClick: function onClick(e) {
            e.preventDefault();

            _this.props.setFocusedOutcome(outcome);
          }
        }, React.createElement(Text, {
          size: "small"
        }, React.createElement("span", {
          className: styles.linkText,
          "data-automation": "outcomeCheckbox__outcomeName"
        }, React.createElement("span", {
          className: styles.innerLinkText
        }, title)))))
      }), React.createElement("div", {
        className: styles.checkboxDescription
      }, React.createElement(OutcomeDescription, {
        description: description
      })));
    }
  }]);

  OutcomeCheckbox.displayName = "OutcomeCheckbox";
  return OutcomeCheckbox;
}(React.Component), _class2.propTypes = {
  outcome: outcomeShape.isRequired,
  setFocusedOutcome: PropTypes.func.isRequired,
  isOutcomeSelected: PropTypes.func.isRequired,
  selectOutcomeIds: PropTypes.func.isRequired,
  deselectOutcomeIds: PropTypes.func.isRequired
}, _temp)) || _class);
export { OutcomeCheckbox as default };