import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";

var _dec, _class, _class2, _temp;

import React from 'react';
import PropTypes from 'prop-types';
import { AccessibleContent } from '@instructure/ui-a11y-content';
import { Text } from '@instructure/ui-text';
import { Tag } from '@instructure/ui-tag';
import { IconOutcomesLine } from '@instructure/ui-icons';
import { themeable } from '@instructure/ui-themeable';
import theme from '../theme';
var styles = {
  componentId: 'dVcKM',
  template: function template(theme) {
    return "\n\n.outcomes-ui__OutcomeTags--line {\n  display: inline-flex;\n}\n\n.outcomes-ui__OutcomeTags--tags {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.outcomes-ui__OutcomeTags--text {\n  padding-left: ".concat(theme.outcomeTagsSpacing || 'inherit', ";\n  margin-bottom: ").concat(theme.outcomeTagsSpacing || 'inherit', ";\n}\n");
  },
  'line': 'outcomes-ui__OutcomeTags--line',
  'tags': 'outcomes-ui__OutcomeTags--tags',
  'text': 'outcomes-ui__OutcomeTags--text'
};
var OutcomeTags = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {
  _inherits(OutcomeTags, _React$Component);

  function OutcomeTags() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, OutcomeTags);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OutcomeTags)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.inputRefs = [];

    _this.setRef = function (id, ref) {
      _this.inputRefs[id] = ref;
    };

    _this.focusInput = function (id) {
      return _this.inputRefs[id].focus();
    };

    return _this;
  }

  _createClass(OutcomeTags, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(oldProps) {
      var outcomes = this.props.outcomes;

      if (oldProps.outcomes.length && !outcomes.length) {
        this.emptyResults.focus();
      }
    }
  }, {
    key: "getSortedOutcomes",
    value: function getSortedOutcomes() {
      var outcomes = this.props.outcomes;
      return outcomes.sort(function (a, b) {
        return a.title ? a.title.localeCompare(b.title) : -1;
      });
    }
  }, {
    key: "renderEmpty",
    value: function renderEmpty() {
      var _this2 = this;

      var emptyText = this.props.emptyText;
      return (// eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
        React.createElement("div", {
          className: styles.text,
          ref: function ref(_ref) {
            return _this2.emptyResults = _ref;
          },
          tabIndex: "-1"
        }, emptyText)
      );
    }
  }, {
    key: "renderTags",
    value: function renderTags() {
      var _this3 = this;

      var deselectOutcomeIds = this.props.deselectOutcomeIds;
      var sortedOutcomes = this.getSortedOutcomes();
      return sortedOutcomes.map(function (o, index) {
        return React.createElement("div", {
          className: styles.text,
          key: o.id
        }, React.createElement(Tag, {
          key: o.id,
          elementRef: function elementRef(ref) {
            return _this3.setRef(o.id, ref);
          },
          text: React.createElement(AccessibleContent, {
            alt: "Remove ".concat(o.title)
          }, o.title),
          "data-automation": "outcomeTag__text",
          onClick: function onClick() {
            deselectOutcomeIds && deselectOutcomeIds([o.id]);
            var priorListItem = sortedOutcomes[index - 1];

            if (priorListItem) {
              _this3.focusInput(priorListItem.id);
            } else {
              var nextListItem = sortedOutcomes[index + 1];

              if (nextListItem) {
                _this3.focusInput(nextListItem.id);
              }
            }
          },
          dismissible: true
        }));
      });
    }
  }, {
    key: "render",
    value: function render() {
      return React.createElement("div", {
        className: styles.line,
        "data-automation": "outcomeTag__alignedOutcomes"
      }, React.createElement(Text, {
        size: "medium"
      }, React.createElement(IconOutcomesLine, null)), React.createElement("div", {
        className: styles.tags
      }, this.props.outcomes.length ? this.renderTags() : this.renderEmpty()));
    }
  }]);

  OutcomeTags.displayName = "OutcomeTags";
  return OutcomeTags;
}(React.Component), _class2.propTypes = {
  emptyText: PropTypes.string.isRequired,
  outcomes: PropTypes.array.isRequired,
  deselectOutcomeIds: PropTypes.func
}, _class2.defaultProps = {
  deselectOutcomeIds: null
}, _temp)) || _class);
export { OutcomeTags as default };