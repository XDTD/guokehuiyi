import { expect } from 'chai';
import React from 'react';
import sinon from 'sinon';
import { mount } from 'enzyme';
import { IconSearchLine, IconEndSolid } from '@instructure/ui-icons';
import SearchInput from '../index';
import checkA11y from '../../../test/checkA11y';
describe('SearchInput', function () {
  function makeProps() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Object.assign({
      onChange: sinon.spy(),
      onClear: sinon.spy(),
      searchText: ''
    }, props);
  }

  it('includes a search icon', function () {
    var wrapper = mount(React.createElement(SearchInput, makeProps()));
    expect(wrapper.find(IconSearchLine)).to.have.length(1);
  });
  it('includes a clear search icon when text is in the search field', function () {
    var wrapper = mount(React.createElement(SearchInput, makeProps({
      searchText: 'x'
    })));
    expect(wrapper.find(IconEndSolid)).to.have.length(1);
  });
  it('includes a clear search button when text is in the search field', function () {
    var props = makeProps({
      searchText: 'x'
    });
    var wrapper = mount(React.createElement(SearchInput, props));
    expect(wrapper.find('IconButton')).to.have.length(1);
  });
  it('calls onClear when button is clicked', function () {
    var props = makeProps({
      searchText: 'x'
    });
    var wrapper = mount(React.createElement(SearchInput, props));
    var clear = wrapper.find('IconButton');
    clear.simulate('click');
    expect(props.onClear.calledOnce).to.be.true;
  });
  it('meets a11y standards', function () {
    return checkA11y(React.createElement(SearchInput, makeProps()));
  });
});