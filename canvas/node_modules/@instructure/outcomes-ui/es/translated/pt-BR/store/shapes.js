import PropTypes from 'prop-types';
export var scoringMethodShape = PropTypes.shape({
  algorithm: PropTypes.isRequired,
  algorithm_data: PropTypes.object,
  mastery_percent: PropTypes.number,
  points_possible: PropTypes.number
});
export var outcomeShape = PropTypes.shape({
  id: PropTypes.string.isRequired,
  guid: PropTypes.string,
  label: PropTypes.string,
  title: PropTypes.string.isRequired,
  description: PropTypes.string,
  scoring_method: scoringMethodShape,
  group: PropTypes.bool
});
export var outcomeResultShape = PropTypes.shape({
  averageScore: PropTypes.number.isRequired,
  childArtifactCount: PropTypes.number.isRequired,
  count: PropTypes.number.isRequired,
  masteryCount: PropTypes.number.isRequired,
  outcomeId: PropTypes.string.isRequired,
  usesBank: PropTypes.bool
});
export var scoringTierShape = PropTypes.shape({
  description: PropTypes.string.isRequired,
  percent: PropTypes.number.isRequired,
  count: PropTypes.number
});
export var individualResultShape = PropTypes.shape({
  outcome: outcomeShape.isRequired,
  outcome_id: PropTypes.number.isRequired,
  outcome_rollup: PropTypes.shape({
    average_score: PropTypes.number.isRequired
  }).isRequired,
  percent_score: PropTypes.number.isRequired
});
export var outcomeCalculationMethodShape = PropTypes.shape({
  calculation_method: PropTypes.string.isRequired,
  calculation_int: PropTypes.number
});
export var outcomeProficiencyRatingShape = PropTypes.shape({
  color: PropTypes.string.isRequired,
  mastery: PropTypes.bool.isRequired,
  points: PropTypes.number.isRequired,
  description: PropTypes.string.isRequired
});
export var outcomeProficiencyShape = PropTypes.shape({
  outcome_proficiency_ratings: PropTypes.arrayOf(outcomeProficiencyRatingShape).isRequired
});
export var contextShape = PropTypes.shape({
  outcome_calculation_method: outcomeCalculationMethodShape,
  outcome_proficiency: outcomeProficiencyShape
});