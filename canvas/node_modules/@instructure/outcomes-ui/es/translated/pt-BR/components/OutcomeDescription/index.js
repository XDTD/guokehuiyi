import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import React from 'react';
import PropTypes from 'prop-types';
import { Text } from '@instructure/ui-text';
import { TruncateText } from '@instructure/ui-truncate-text';

var OutcomeDescription = /*#__PURE__*/function (_React$Component) {
  _inherits(OutcomeDescription, _React$Component);

  function OutcomeDescription() {
    _classCallCheck(this, OutcomeDescription);

    return _possibleConstructorReturn(this, _getPrototypeOf(OutcomeDescription).apply(this, arguments));
  }

  _createClass(OutcomeDescription, [{
    key: "stripHtmlTags",
    value: function stripHtmlTags(text) {
      var doc = new DOMParser().parseFromString(text, 'text/html');
      return doc.body.textContent || '';
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          truncate = _this$props.truncate,
          description = _this$props.description;
      var strippedText = this.stripHtmlTags(description);
      return React.createElement(Text, {
        size: "x-small"
      }, truncate ? React.createElement(TruncateText, {
        maxLines: 2,
        position: "end"
      }, strippedText) : strippedText);
    }
  }]);

  OutcomeDescription.displayName = "OutcomeDescription";
  return OutcomeDescription;
}(React.Component);

OutcomeDescription.propTypes = {
  truncate: PropTypes.bool,
  description: PropTypes.string.isRequired
};
OutcomeDescription.defaultProps = {
  truncate: true
};
export { OutcomeDescription as default };