import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";

var _dec, _class, _class2, _temp;

import React from 'react';
import { themeable } from '@instructure/ui-themeable';
import { Text } from '@instructure/ui-text';
import { ProgressBar } from '@instructure/ui-progress';
import { outcomeResultShape, scoringMethodShape } from '../../../store/shapes';
import convertToPoints from '../convertToPoints';
import theme from '../../theme';
var styles = {
  componentId: 'dIVYN',
  template: function template(theme) {
    return "\n\n@media screen and (min-width: 768px) {\n  .outcomes-ui__MasteryCounts--masteryBarGraph {\n    margin-top: 2rem;\n  }\n\n  .outcomes-ui__MasteryCounts--masteryScoreSection {\n    display: none;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .outcomes-ui__MasteryCounts--masteryBarGraph {\n    display: none;\n  }\n\n  .outcomes-ui__MasteryCounts--masteryScoreSection {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    margin-top: 2rem;\n  }\n\n  .outcomes-ui__MasteryCounts--masteryScoreBoxAboveMastery {\n    color: ".concat(theme.masteryColor || 'inherit', ";\n    display: flex;\n    flex-direction: column;\n    font-weight: bold;\n    text-align: center;\n  }\n\n  [dir=\"ltr\"] .outcomes-ui__MasteryCounts--masteryScoreBoxAboveMastery {\n    text-align: center;\n  }\n\n  [dir=\"rtl\"] .outcomes-ui__MasteryCounts--masteryScoreBoxAboveMastery {\n    text-align: center;\n  }\n\n  .outcomes-ui__MasteryCounts--masteryScoreBoxBelowMastery {\n    display: flex;\n    flex-direction: column;\n    font-weight: bold;\n    text-align: center;\n  }\n\n  [dir=\"ltr\"] .outcomes-ui__MasteryCounts--masteryScoreBoxBelowMastery {\n    text-align: center;\n  }\n\n  [dir=\"rtl\"] .outcomes-ui__MasteryCounts--masteryScoreBoxBelowMastery {\n    text-align: center;\n  }\n}\n\n.outcomes-ui__MasteryCounts--masteryBarDetails {\n  display: flex;\n  justify-content: space-between;\n  padding-top: 0.25rem;\n}\n\n.outcomes-ui__MasteryCounts--masteryCountText {\n  color: ").concat(theme.masteryColor || 'inherit', ";\n}\n");
  },
  'masteryBarGraph': 'outcomes-ui__MasteryCounts--masteryBarGraph',
  'masteryScoreSection': 'outcomes-ui__MasteryCounts--masteryScoreSection',
  'masteryScoreBoxAboveMastery': 'outcomes-ui__MasteryCounts--masteryScoreBoxAboveMastery',
  'masteryScoreBoxBelowMastery': 'outcomes-ui__MasteryCounts--masteryScoreBoxBelowMastery',
  'masteryBarDetails': 'outcomes-ui__MasteryCounts--masteryBarDetails',
  'masteryCountText': 'outcomes-ui__MasteryCounts--masteryCountText'
};
var MasteryCounts = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {
  _inherits(MasteryCounts, _React$Component);

  function MasteryCounts() {
    _classCallCheck(this, MasteryCounts);

    return _possibleConstructorReturn(this, _getPrototypeOf(MasteryCounts).apply(this, arguments));
  }

  _createClass(MasteryCounts, [{
    key: "render",
    // eslint-disable-next-line no-undef
    value: function render() {
      var _this$props = this.props,
          outcomeResult = _this$props.outcomeResult,
          scoringMethod = _this$props.scoringMethod;
      var masteryPoints = convertToPoints(scoringMethod.mastery_percent, scoringMethod);
      return React.createElement("div", null, React.createElement("div", {
        className: styles.masteryScoreSection
      }, React.createElement("div", {
        className: styles.masteryScoreBoxAboveMastery
      }, React.createElement(Text, {
        size: "x-large"
      }, outcomeResult.masteryCount), React.createElement(Text, {
        size: "small"
      }, "\u638C\u63E1\u7A0B\u5EA6\u4E3A " + masteryPoints + " \u5206")), React.createElement("div", {
        className: styles.masteryScoreBoxBelowMastery
      }, React.createElement(Text, {
        size: "x-large"
      }, outcomeResult.count - outcomeResult.masteryCount), React.createElement(Text, {
        size: "small"
      }, "\u672A\u8FBE\u5230"))), React.createElement("div", {
        className: styles.masteryBarGraph,
        "data-automation": "outcomeView__masteryBarGraph"
      }, React.createElement(ProgressBar, {
        size: "small",
        screenReaderLabel: outcomeResult.masteryCount + " \uFF08\u5171 " + outcomeResult.count + " \u4EBA\uFF09\u8FBE\u5230\u638C\u63E1\u7A0B\u5EA6",
        meterColor: "success",
        valueMax: outcomeResult.count,
        valueNow: outcomeResult.masteryCount
      }), React.createElement("div", {
        className: styles.masteryBarDetails,
        "data-automation": "outcomeView__masteryBarDetails"
      }, React.createElement("div", {
        className: styles.masteryCountText
      }, React.createElement(Text, {
        size: "small",
        "data-automation": "outcomeView__masteryCount"
      }, outcomeResult.masteryCount + " \u638C\u63E1\u7A0B\u5EA6\u4E3A " + masteryPoints + " \u5206")), React.createElement(Text, {
        size: "small",
        "data-automation": "outcomeView__noMasteryCount"
      }, outcomeResult.count - outcomeResult.masteryCount + " \u672A\u8FBE\u5230"))));
    }
  }]);

  MasteryCounts.displayName = "MasteryCounts";
  return MasteryCounts;
}(React.Component), _class2.propTypes = {
  outcomeResult: outcomeResultShape.isRequired,
  scoringMethod: scoringMethodShape.isRequired
}, _temp)) || _class);
export { MasteryCounts as default };