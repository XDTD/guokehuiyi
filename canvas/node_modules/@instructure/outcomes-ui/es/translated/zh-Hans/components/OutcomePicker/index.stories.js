import React from 'react';
import { array, text, object } from '@storybook/addon-knobs';
import { View } from '@instructure/ui-view';
import * as sbConstants from '../../../.storybook/constants';
import OutcomePicker from './';
export default {
  title: 'OutcomePicker'
};
var defaultProps = {
  setFocusedOutcome: function setFocusedOutcome() {},
  focusedOutcome: null,
  isOutcomeSelected: function isOutcomeSelected() {},
  selectOutcomeIds: function selectOutcomeIds() {},
  deselectOutcomeIds: function deselectOutcomeIds() {},
  setActiveCollection: function setActiveCollection() {},
  setSearchLoading: function setSearchLoading() {},
  setSearchEntries: function setSearchEntries() {},
  isSearchLoading: true,
  searchEntries: [],
  searchTotal: null,
  updateSearchText: function updateSearchText() {},
  updateSearchPage: function updateSearchPage() {},
  displayMasteryDescription: true,
  displayMasteryPercentText: true
};
export var collapsed = function collapsed() {
  return React.createElement(View, {
    as: "div",
    height: "100vh"
  }, React.createElement(OutcomePicker, Object.assign({}, defaultProps, {
    selectedOutcomes: object('Outcomes', sbConstants.defaultOutcomes()),
    features: array('Features', ['outcomes_search']),
    searchText: text('Search Text', void 0),
    searchPage: 1,
    searchEntries: [],
    treeView: function treeView() {
      return React.createElement("div", null, React.createElement("br", null), " OutcomeTree Placeholder ");
    },
    hasOutcomes: true
  })));
};