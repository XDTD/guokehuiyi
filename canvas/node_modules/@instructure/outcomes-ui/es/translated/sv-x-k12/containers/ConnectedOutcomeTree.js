import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import { bindActionCreators as bindScopedActionCreators } from 'multireducer';
import { connect } from 'react-redux';
import * as contextActions from '../store/context/actions';
import * as outcomePickerActions from '../store/OutcomePicker/actions';
import { getRootOutcomeIds, getCollectionData, makeGetOutcomeSummary } from '../store/context/selectors';
import { getActiveCollection, getExpandedIds, makeIsOutcomeSelected, getActiveChildren } from '../store/OutcomePicker/selectors';
import OutcomeTree from '../components/OutcomeTree';

var mapStateToProps = function mapStateToProps(state, ownProps) {
  var scope = ownProps.scope;
  return {
    activeChildren: getActiveChildren(state, scope),
    collections: getCollectionData(state, scope),
    getOutcomeSummary: makeGetOutcomeSummary(state, scope),
    isOutcomeSelected: makeIsOutcomeSelected(state, scope),
    rootOutcomeIds: getRootOutcomeIds(state, scope),
    activeCollection: getActiveCollection(state, scope),
    expandedIds: getExpandedIds(state, scope)
  };
};

function mapDispatchToProps(dispatch, ownProps) {
  var scope = ownProps.scope;
  return _objectSpread({}, bindScopedActionCreators(outcomePickerActions, dispatch, scope), {}, bindScopedActionCreators(contextActions, dispatch, scope));
}

export default connect(mapStateToProps, mapDispatchToProps)(OutcomeTree);