import debounce from 'lodash/debounce';
export default (function (f, ms) {
  var waiting = null;

  var ready = function ready() {
    var old = waiting;
    f.apply(void 0, arguments).then(function (r) {
      return old.resolve(r);
    }).catch(function (e) {
      return old.reject(e);
    });
    waiting = null;
  };

  var debouncedThunk = debounce(ready, ms);
  return function () {
    var promise = new Promise(function (resolve, reject) {
      return waiting = {
        resolve: resolve,
        reject: reject
      };
    });
    debouncedThunk.apply(void 0, arguments);
    return promise;
  };
});