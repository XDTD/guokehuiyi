import { expect } from 'chai';
import React from 'react';
import { Provider } from 'react-redux';
import { mount } from 'enzyme';
import { fromJS } from 'immutable';
import createMockStore from '../../test/createMockStore';
import ConnectedOutcomePicker from '../ConnectedOutcomePicker';
describe('ConnectedOutcomePicker', function () {
  it('renders', function () {
    var store = createMockStore(fromJS({
      scopeForTest: {
        OutcomePicker: {
          focusedOutcome: null,
          state: 'loading',
          activeChildren: [],
          scope: 'scopeForTest'
        }
      }
    }));
    var wrapper = mount(React.createElement(Provider, {
      store: store
    }, React.createElement(ConnectedOutcomePicker, {
      contextUuid: "course_100",
      scope: "scopeForTest"
    })));
    expect(wrapper.find('OutcomePicker')).to.have.length(1);
  });
});