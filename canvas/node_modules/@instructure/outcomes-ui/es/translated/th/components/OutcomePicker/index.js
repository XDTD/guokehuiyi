import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import React from 'react';
import PropTypes from 'prop-types';
import { Billboard } from '@instructure/ui-billboard';
import { Flex } from '@instructure/ui-flex';
import { ScreenReaderContent } from '@instructure/ui-a11y-content';
import { View } from '@instructure/ui-view';
import OutcomeTags from '../OutcomeTags';
import OutcomeViewModal from '../OutcomeViewModal';
import SearchInput from '../SearchInput';
import SearchResults from '../SearchResults';

var NoReport = function NoReport(props) {
  return React.createElement("svg", Object.assign({
    width: "70",
    height: "96",
    viewBox: "0 0 70 96",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), React.createElement("title", null, "Page 1"), React.createElement("g", {
    fill: "none",
    fillRule: "evenodd"
  }, React.createElement("path", {
    d: "M65 95H5a4 4 0 0 1-4-4V22a4 4 0 0 1 4-4h60a4 4 0 0 1 4 4v69a4 4 0 0 1-4 4z",
    fill: "#F6F7F6"
  }), React.createElement("path", {
    d: "M5 19c-1.654 0-3 1.346-3 3v69c0 1.654 1.346 3 3 3h60c1.654 0 3-1.346 3-3V22c0-1.654-1.346-3-3-3H5zm60 77H5c-2.757 0-5-2.243-5-5V22c0-2.757 2.243-5 5-5h60c2.757 0 5 2.243 5 5v69c0 2.757-2.243 5-5 5z",
    fill: "#3F5463"
  }), React.createElement("path", {
    d: "M0 96h70V0H0z"
  }), React.createElement("path", {
    fill: "#FFF",
    d: "M7 89h56.5V24.213H7z"
  }), React.createElement("path", {
    fill: "#6F7F8A",
    d: "M9 90H6v-3h2v1h1zM6 34.317h2v-4.053H6v4.053zm0 8.106h2V38.37H6v4.053zm0 8.104h2v-4.053H6v4.053zm0 8.106h2V54.58H6v4.053zm0 8.104h2v-4.053H6v4.053zm0 8.106h2V70.79H6v4.053zm0 8.104h2v-4.053H6v4.053zM8 26.213H6v-3h3v2H8zM13.038 25.213h4.039v-2h-4.039v2zm8.078 0h4.038v-2h-4.038v2zm8.076 0h4.039v-2h-4.039v2zm8.078 0h4.038v-2H37.27v2zm8.076 0h4.039v-2h-4.039v2zm8.077 0h4.038v-2h-4.038v2zM64.5 26.213h-2v-1h-1v-2h3zM62.5 34.318h2v-4.053h-2v4.053zm0 8.105h2V38.37h-2v4.053zm0 8.105h2v-4.053h-2v4.053zm0 8.105h2V54.58h-2v4.053zm0 8.105h2v-4.053h-2v4.053zm0 8.105h2V70.79h-2v4.053zm0 8.105h2v-4.053h-2v4.053zM64.5 90h-3v-2h1v-1h2zM13.039 90h4.038v-2h-4.038v2zm8.076 0h4.039v-2h-4.039v2zm8.077 0h4.038v-2h-4.038v2zm8.077 0h4.039v-2h-4.039v2zm8.077 0h4.038v-2h-4.038v2zm8.076 0h4.039v-2h-4.039v2z"
  }), React.createElement("path", {
    d: "M55.874 25H14.126a2 2 0 0 1-1.816-2.838L17 12h36l4.69 10.162A2 2 0 0 1 55.874 25",
    fill: "#C0C6CB"
  }), React.createElement("path", {
    d: "M35 1C24 1 24 12 24 12h22S44.667 1 35 1",
    fill: "#E5E7E9"
  }), React.createElement("path", {
    d: "M56.717 23.54a.983.983 0 0 1-.843.46H14.126a.984.984 0 0 1-.843-.46.983.983 0 0 1-.065-.959l4.422-9.58H52.36l4.42 9.58a.983.983 0 0 1-.064.958M35 2c6.999 0 9.19 6.354 9.799 9H25.07c.298-2.546 1.852-9 9.929-9m23.598 19.743L53.64 11h-6.807C46.242 8.252 43.74 0 35 0c-9.812 0-11.6 8.122-11.926 11H16.36l-4.958 10.743a2.984 2.984 0 0 0 .196 2.874A2.99 2.99 0 0 0 14.126 26h41.748a2.991 2.991 0 0 0 2.528-1.383c.554-.866.627-1.94.196-2.874",
    fill: "#3F5463"
  }), React.createElement("path", {
    d: "M34.666 4.551a2 2 0 1 0 .002 4.002 2 2 0 0 0-.002-4.002",
    fill: "#3F5463"
  }), React.createElement("path", {
    d: "M30.907 46.59a4.568 4.568 0 1 0-9.137.002 4.568 4.568 0 0 0 9.137-.001M44.339 42.023a4.568 4.568 0 1 0 0 9.136 4.568 4.568 0 0 0 0-9.136M43.5 65.894H27a2 2 0 0 0 0 4h16.5a2 2 0 0 0 0-4",
    fill: "#6F7F8A"
  })));
};

import { outcomeShape } from '../../store/shapes';

var OutcomePicker = /*#__PURE__*/function (_React$Component) {
  _inherits(OutcomePicker, _React$Component);

  function OutcomePicker() {
    _classCallCheck(this, OutcomePicker);

    return _possibleConstructorReturn(this, _getPrototypeOf(OutcomePicker).apply(this, arguments));
  }

  _createClass(OutcomePicker, [{
    key: "renderViewModal",
    // eslint-disable-next-line no-undef
    value: function renderViewModal() {
      var _this$props = this.props,
          focusedOutcome = _this$props.focusedOutcome,
          setFocusedOutcome = _this$props.setFocusedOutcome,
          artifactTypeName = _this$props.artifactTypeName,
          displayMasteryDescription = _this$props.displayMasteryDescription,
          displayMasteryPercentText = _this$props.displayMasteryPercentText,
          scope = _this$props.scope;
      return focusedOutcome && React.createElement(OutcomeViewModal, {
        artifactTypeName: artifactTypeName,
        displayMasteryDescription: displayMasteryDescription,
        displayMasteryPercentText: displayMasteryPercentText,
        outcome: focusedOutcome,
        scope: scope,
        closeAlignment: function closeAlignment() {
          return setFocusedOutcome(null);
        },
        isOpen: true
      });
    }
  }, {
    key: "renderSearchMode",
    value: function renderSearchMode() {
      var _this$props2 = this.props,
          screenreaderNotification = _this$props2.screenreaderNotification,
          setSearchLoading = _this$props2.setSearchLoading,
          setSearchEntries = _this$props2.setSearchEntries,
          updateSearchPage = _this$props2.updateSearchPage,
          searchText = _this$props2.searchText,
          isSearchLoading = _this$props2.isSearchLoading,
          searchEntries = _this$props2.searchEntries,
          searchPage = _this$props2.searchPage,
          searchTotal = _this$props2.searchTotal,
          setActiveCollection = _this$props2.setActiveCollection,
          setFocusedOutcome = _this$props2.setFocusedOutcome,
          isOutcomeSelected = _this$props2.isOutcomeSelected,
          selectOutcomeIds = _this$props2.selectOutcomeIds,
          deselectOutcomeIds = _this$props2.deselectOutcomeIds;
      return React.createElement(SearchResults, {
        screenreaderNotification: screenreaderNotification,
        setSearchLoading: setSearchLoading,
        setSearchEntries: setSearchEntries,
        searchText: searchText,
        updateSearchPage: updateSearchPage,
        isSearchLoading: isSearchLoading,
        searchEntries: searchEntries,
        searchPage: searchPage,
        searchTotal: searchTotal,
        setActiveCollection: setActiveCollection,
        setFocusedOutcome: setFocusedOutcome,
        isOutcomeSelected: isOutcomeSelected,
        selectOutcomeIds: selectOutcomeIds,
        deselectOutcomeIds: deselectOutcomeIds
      });
    }
  }, {
    key: "renderTreePickerMode",
    value: function renderTreePickerMode() {
      var _this$props3 = this.props,
          scope = _this$props3.scope,
          OutcomeTree = _this$props3.treeView;
      return React.createElement(OutcomeTree, {
        scope: scope
      });
    }
  }, {
    key: "renderHeader",
    value: function renderHeader() {
      var _this$props4 = this.props,
          selectedOutcomes = _this$props4.selectedOutcomes,
          searchText = _this$props4.searchText,
          updateSearchText = _this$props4.updateSearchText,
          deselectOutcomeIds = _this$props4.deselectOutcomeIds;
      return React.createElement(View, {
        display: "block",
        borderWidth: "none none small none",
        padding: "small small medium small"
      }, React.createElement(View, {
        display: "block",
        padding: "none none small none"
      }, React.createElement(ScreenReaderContent, null, "\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E17\u0E35\u0E48\u0E40\u0E25\u0E37\u0E2D\u0E01:"), React.createElement(OutcomeTags, {
        outcomes: selectedOutcomes,
        emptyText: "\u0E44\u0E21\u0E48\u0E21\u0E35\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E17\u0E35\u0E48\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E43\u0E19\u0E1B\u0E31\u0E08\u0E08\u0E38\u0E1A\u0E31\u0E19",
        deselectOutcomeIds: deselectOutcomeIds
      })), React.createElement(SearchInput, {
        onChange: function onChange(_, value) {
          return updateSearchText(value);
        },
        onClear: function onClear() {
          return updateSearchText('');
        },
        searchText: searchText
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
          hasOutcomes = _this$props5.hasOutcomes,
          searchText = _this$props5.searchText;

      if (!hasOutcomes) {
        return React.createElement(Billboard, {
          message: "\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E08\u0E31\u0E14\u0E17\u0E33\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E42\u0E14\u0E22\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E2B\u0E19\u0E49\u0E32\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E02\u0E2D\u0E07 Canvas",
          heading: "\u0E44\u0E21\u0E48\u0E21\u0E35\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C",
          headingAs: "h3",
          headingLevel: "h3",
          size: "small",
          hero: React.createElement(NoReport, null),
          margin: "medium"
        });
      }

      return React.createElement(Flex, {
        direction: "column",
        height: "100%",
        width: "100%",
        padding: "x-small small 0 small"
      }, React.createElement(Flex.Item, null, this.renderHeader()), React.createElement(Flex.Item, {
        shouldGrow: true,
        maxHeight: "100%",
        size: "0"
      }, searchText ? this.renderSearchMode() : this.renderTreePickerMode(), this.renderViewModal()));
    }
  }]);

  OutcomePicker.displayName = "OutcomePicker";
  return OutcomePicker;
}(React.Component);

OutcomePicker.propTypes = {
  focusedOutcome: outcomeShape,
  setFocusedOutcome: PropTypes.func.isRequired,
  selectedOutcomes: PropTypes.arrayOf(outcomeShape).isRequired,
  isOutcomeSelected: PropTypes.func.isRequired,
  selectOutcomeIds: PropTypes.func.isRequired,
  deselectOutcomeIds: PropTypes.func.isRequired,
  setActiveCollection: PropTypes.func.isRequired,
  artifactTypeName: PropTypes.string,
  displayMasteryDescription: PropTypes.bool,
  displayMasteryPercentText: PropTypes.bool,
  searchText: PropTypes.string,
  setSearchLoading: PropTypes.func.isRequired,
  setSearchEntries: PropTypes.func.isRequired,
  isSearchLoading: PropTypes.bool.isRequired,
  searchEntries: PropTypes.array.isRequired,
  searchTotal: PropTypes.number,
  searchPage: PropTypes.number.isRequired,
  screenreaderNotification: PropTypes.func,
  updateSearchText: PropTypes.func.isRequired,
  updateSearchPage: PropTypes.func.isRequired,
  hasOutcomes: PropTypes.bool.isRequired,
  scope: PropTypes.string.isRequired,
  treeView: PropTypes.func.isRequired
};
OutcomePicker.defaultProps = {
  focusedOutcome: null,
  artifactTypeName: null,
  displayMasteryDescription: false,
  displayMasteryPercentText: false,
  searchText: '',
  screenreaderNotification: null,
  searchTotal: null
};
export default OutcomePicker;