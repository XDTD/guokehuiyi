import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import React from 'react';
import PropTypes from 'prop-types';

var WithAlignmentSet = function WithAlignmentSet(ComponentClass) {
  var _class, _temp;

  return _temp = _class = /*#__PURE__*/function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class() {
      _classCallCheck(this, _class);

      return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));
    }

    _createClass(_class, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this.loadIfNeeded(this.props);
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        this.loadIfNeeded(nextProps);
      }
    }, {
      key: "loadIfNeeded",
      value: function loadIfNeeded(props) {
        var alignmentSetId = props.alignmentSetId,
            loadAlignments = props.loadAlignments;

        if (!this.state || this.state.alignmentSetId !== alignmentSetId) {
          this.setState({
            alignmentSetId: alignmentSetId
          });
          loadAlignments(alignmentSetId);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return React.createElement(ComponentClass, this.props);
      }
    }]);

    _class.displayName = "_class";
    return _class;
  }(React.Component), _class.propTypes = _objectSpread({
    loadAlignments: PropTypes.func.isRequired,
    alignmentSetId: PropTypes.string
  }, ComponentClass.propTypes), _class.defaultProps = {
    alignmentSetId: null
  }, _class.displayName = "WithAlignmentSet(".concat(ComponentClass.displayName, ")"), _temp;
};

export default WithAlignmentSet;