import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import { bindActionCreators as bindScopedActionCreators } from 'multireducer';
import { compose } from 'redux';
import { connect } from 'react-redux';
import OutcomeLabels from '../components/OutcomeLabels';
import WithAlignmentSet from '../components/WithAlignmentSet';
import { getAlignedOutcomes } from '../store/alignments/selectors';
import * as alignmentActions from '../store/alignments/actions';

var mapStateToProps = function mapStateToProps(state, ownProps) {
  var scope = ownProps.scope;
  return {
    outcomes: getAlignedOutcomes(state, scope)
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
  var scope = ownProps.scope;
  return _objectSpread({}, bindScopedActionCreators(alignmentActions, dispatch, scope));
};

var ConnectedAlignmentLabels = compose(connect(mapStateToProps, mapDispatchToProps), WithAlignmentSet)(OutcomeLabels);
export default ConnectedAlignmentLabels;