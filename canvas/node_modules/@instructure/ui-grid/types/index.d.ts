import * as React from 'react';

export type GridColSpacing = "none" | "small" | "medium" | "large";

export type GridRowSpacing = "none" | "small" | "medium" | "large";

export type GridHAlign = "start" | "center" | "end" | "space-around" | "space-between";

export type GridVAlign = "top" | "middle" | "bottom";

export type GridStartAt = "small" | "medium" | "large" | "x-large" | any;

export interface GridProps {
    children?: any;
    colSpacing?: GridColSpacing;
    rowSpacing?: GridRowSpacing;
    hAlign?: GridHAlign;
    vAlign?: GridVAlign;
    startAt?: GridStartAt;
    visualDebug?: boolean;
}

export class Grid extends React.Component<GridProps, any> {
    render(): JSX.Element;

}




export type GridColColSpacing = "none" | "small" | "medium" | "large";

export type GridColRowSpacing = "none" | "small" | "medium" | "large";

export type GridColTextAlign = "start" | "end" | "center" | "inherit";

export type GridColHAlign = "start" | "center" | "end" | "space-around" | "space-between";

export type GridColVAlign = "top" | "middle" | "bottom";

export type GridColStartAt = "small" | "medium" | "large" | "x-large" | any;

export type GridColWidth = "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | {
    small?: "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
    medium?: "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
    large?: "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
    xLarge?: "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
};

export type GridColOffset = "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | {
    small?: "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
    medium?: "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
    large?: "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
    xLarge?: "auto" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
};

export interface GridColProps {
    children?: React.ReactNode;
    colSpacing?: GridColColSpacing;
    rowSpacing?: GridColRowSpacing;
    textAlign?: GridColTextAlign;
    hAlign?: GridColHAlign;
    vAlign?: GridColVAlign;
    startAt?: GridColStartAt;
    visualDebug?: boolean;
    width?: GridColWidth;
    offset?: GridColOffset;
    isLastRow?: boolean;
    isLastCol?: boolean;
    elementRef?: (...args: any[])=>any;
}

export class GridCol extends React.Component<GridColProps, any> {
    render(): JSX.Element;

}




export type GridRowRowSpacing = "none" | "small" | "medium" | "large";

export type GridRowColSpacing = "none" | "small" | "medium" | "large";

export type GridRowHAlign = "start" | "center" | "end" | "space-around" | "space-between";

export type GridRowVAlign = "top" | "middle" | "bottom";

export type GridRowStartAt = "small" | "medium" | "large" | "x-large" | any;

export interface GridRowProps {
    children?: any;
    rowSpacing?: GridRowRowSpacing;
    colSpacing?: GridRowColSpacing;
    hAlign?: GridRowHAlign;
    vAlign?: GridRowVAlign;
    startAt?: GridRowStartAt;
    visualDebug?: boolean;
    isLastRow?: boolean;
}

export class GridRow extends React.Component<GridRowProps, any> {
    render(): JSX.Element;

}

