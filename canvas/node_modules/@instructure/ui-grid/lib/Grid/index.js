"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "GridRow", {
  enumerable: true,
  get: function get() {
    return _index.GridRow;
  }
});
Object.defineProperty(exports, "GridCol", {
  enumerable: true,
  get: function get() {
    return _index2.GridCol;
  }
});
exports.Grid = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _themeable = require("@instructure/ui-themeable/lib/themeable.js");

var _Children = require("@instructure/ui-prop-types/lib/Children.js");

var _capitalizeFirstLetter = require("@instructure/ui-utils/lib/capitalizeFirstLetter.js");

var _safeCloneElement = require("@instructure/ui-react-utils/lib/safeCloneElement.js");

var _matchComponentTypes = require("@instructure/ui-react-utils/lib/matchComponentTypes.js");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _pickProps = require("@instructure/ui-react-utils/lib/pickProps.js");

var _ScreenReaderContent = require("@instructure/ui-a11y-content/lib/ScreenReaderContent");

var _index = require("../GridRow/index.js");

var _index2 = require("../GridCol/index.js");

var _theme = _interopRequireDefault(require("./theme.js"));

var _dec, _class, _class2, _temp;

var styles = {
  componentId: 'cMIPy',
  template: function template(theme) {
    return "\n\n.cMIPy_bGBk{display:block}\n\n.cMIPy_fFVr{outline:0.0625rem dashed red}\n\n.cMIPy_dTOw{box-sizing:border-box}\n\n@media screen and (--mediumMin){.cMIPy_crIs{box-sizing:border-box}}\n\n@media screen and (--largeMin){.cMIPy_cpbQ{box-sizing:border-box}}\n\n@media screen and (--xLargeMin){.cMIPy_dsuu{box-sizing:border-box}}";
  },
  'root': 'cMIPy_bGBk',
  'visualDebug': 'cMIPy_fFVr',
  'startAtSmall': 'cMIPy_dTOw',
  'startAtMedium': 'cMIPy_crIs',
  'startAtLarge': 'cMIPy_cpbQ',
  'startAtXLarge': 'cMIPy_dsuu'
};

/**
---
category: components
---
**/
var Grid = (_dec = (0, _themeable.themeable)(_theme.default, styles), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Grid, _Component);

  var _super = (0, _createSuper2.default)(Grid);

  function Grid() {
    (0, _classCallCheck2.default)(this, Grid);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Grid, [{
    key: "startAtClass",
    value: function startAtClass() {
      return !!this.props.startAt && "startAt".concat((0, _capitalizeFirstLetter.capitalizeFirstLetter)(this.props.startAt));
    }
  }, {
    key: "renderChildren",
    value: function renderChildren() {
      var _this = this;

      var children = _react.Children.toArray(this.props.children);

      return children.map(function (child, index) {
        if ((0, _matchComponentTypes.matchComponentTypes)(child, [_index.GridRow])) {
          return (0, _safeCloneElement.safeCloneElement)(child, (0, _objectSpread2.default)({}, (0, _pickProps.pickProps)(_this.props, Grid.propTypes), {}, child.props, {
            /* child props should override parent */
            isLastRow: index + 1 === children.length
          }));
        } else {
          return child; // PropType validation should handle errors
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classes;

      var classes = (_classes = {}, (0, _defineProperty2.default)(_classes, styles.root, true), (0, _defineProperty2.default)(_classes, styles[this.startAtClass()], !!this.props.startAt), (0, _defineProperty2.default)(_classes, styles.visualDebug, this.props.visualDebug), _classes);
      var props = (0, _omitProps.omitProps)(this.props, Grid.propTypes);
      return /*#__PURE__*/_react.default.createElement("span", Object.assign({}, props, {
        className: (0, _classnames.default)(classes)
      }), this.renderChildren());
    }
  }]);
  Grid.displayName = "Grid";
  return Grid;
}(_react.Component), _class2.propTypes = {
  children: _Children.Children.oneOf([_index.GridRow, _ScreenReaderContent.ScreenReaderContent]),
  colSpacing: _propTypes.default.oneOf(['none', 'small', 'medium', 'large']),
  rowSpacing: _propTypes.default.oneOf(['none', 'small', 'medium', 'large']),
  hAlign: _propTypes.default.oneOf(['start', 'center', 'end', 'space-around', 'space-between']),
  vAlign: _propTypes.default.oneOf(['top', 'middle', 'bottom']),
  startAt: _propTypes.default.oneOf(['small', 'medium', 'large', 'x-large', null]),
  visualDebug: _propTypes.default.bool
}, _class2.defaultProps = {
  colSpacing: 'medium',
  rowSpacing: 'medium',
  hAlign: 'start',
  startAt: 'small',
  vAlign: 'top',
  visualDebug: false,
  children: null
}, _class2.Row = _index.GridRow, _class2.Col = _index2.GridCol, _temp)) || _class);
exports.Grid = Grid;
var _default = Grid;
exports.default = _default;