import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var _dec, _class, _class2, _temp;

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { IconButton } from '@instructure/ui-buttons';
import { PresentationContent } from '@instructure/ui-a11y-content';
import { Tooltip } from '@instructure/ui-tooltip';
import { IconArrowOpenStartSolid, IconArrowOpenEndSolid } from '@instructure/ui-icons';
import { testable } from '@instructure/ui-testable';
/**
---
parent: Pagination
id: Pagination.Navigation
---
**/

var PaginationArrowButton = (_dec = testable(), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_Component) {
  _inherits(PaginationArrowButton, _Component);

  var _super = _createSuper(PaginationArrowButton);

  function PaginationArrowButton() {
    _classCallCheck(this, PaginationArrowButton);

    return _super.apply(this, arguments);
  }

  _createClass(PaginationArrowButton, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          label = _this$props.label,
          direction = _this$props.direction,
          buttonRef = _this$props.buttonRef,
          props = _objectWithoutProperties(_this$props, ["label", "direction", "buttonRef"]);

      var Icon = direction === 'prev' ? IconArrowOpenStartSolid : IconArrowOpenEndSolid;
      return /*#__PURE__*/React.createElement(Tooltip, {
        on: ['hover', 'focus'],
        renderTip: /*#__PURE__*/React.createElement(PresentationContent, null, label)
      }, /*#__PURE__*/React.createElement(IconButton, Object.assign({}, props, {
        size: "small",
        withBackground: false,
        withBorder: false,
        screenReaderLabel: label,
        rel: props.href || props.to ? direction : null,
        elementRef: buttonRef
      }), Icon));
    }
  }]);

  PaginationArrowButton.displayName = "PaginationArrowButton";
  return PaginationArrowButton;
}(Component), _class2.propTypes = {
  direction: PropTypes.oneOf(['next', 'prev']),
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,
  buttonRef: PropTypes.func
}, _class2.defaultProps = {
  direction: void 0,
  buttonRef: function buttonRef(el) {}
}, _temp)) || _class);
export default PaginationArrowButton;
export { PaginationArrowButton };