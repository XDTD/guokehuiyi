import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { passthroughProps, getElementType } from '@instructure/ui-react-utils';
import { PresentationContent } from "../PresentationContent/index.js";
import { ScreenReaderContent } from "../ScreenReaderContent/index.js";
/**
---
category: components/utilities
---
@module AccessibleContent
*/

var AccessibleContent = /*#__PURE__*/function (_Component) {
  _inherits(AccessibleContent, _Component);

  var _super = _createSuper(AccessibleContent);

  function AccessibleContent() {
    _classCallCheck(this, AccessibleContent);

    return _super.apply(this, arguments);
  }

  _createClass(AccessibleContent, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          alt = _this$props.alt,
          children = _this$props.children,
          props = _objectWithoutProperties(_this$props, ["alt", "children"]);

      var ElementType = getElementType(AccessibleContent, this.props);
      return /*#__PURE__*/React.createElement(ElementType, passthroughProps(props), /*#__PURE__*/React.createElement(ScreenReaderContent, null, alt), /*#__PURE__*/React.createElement(PresentationContent, null, children));
    }
  }]);

  AccessibleContent.displayName = "AccessibleContent";
  return AccessibleContent;
}(Component);

AccessibleContent.propTypes = {
  alt: PropTypes.string,

  /**
   * the element type to render the screen reader content as
   */
  as: PropTypes.elementType,
  children: PropTypes.node
};
AccessibleContent.defaultProps = {
  alt: void 0,
  as: 'span',
  children: null
};
export default AccessibleContent;
export { AccessibleContent };