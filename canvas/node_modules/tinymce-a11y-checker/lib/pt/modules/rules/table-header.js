import formatMessage from "../format-message";
import { changeTag } from "../utils/dom";
const _forEach = Array.prototype.forEach;
export default {
  id: "table-header",
  test: elem => {
    if (elem.tagName !== "TABLE") {
      return true;
    }

    return elem.querySelector("th");
  },
  data: elem => {
    return {
      header: "none"
    };
  },
  form: () => [{
    label: "Definir cabe\xE7alho da tabela",
    dataKey: "header",
    options: [["none", "Sem cabe\xE7alho"], ["row", "Linha de cabe\xE7alho"], ["col", "Coluna de cabe\xE7alho"], ["both", "Cabe\xE7alho linha e coluna"]]
  }],
  update: (elem, data) => {
    _forEach.call(elem.querySelectorAll("th"), th => {
      changeTag(th, "td");
    });

    if (data.header === "none") {
      return elem;
    }

    const row = data.header === "row" || data.header === "both";
    const col = data.header === "col" || data.header === "both";
    const tableRows = elem.querySelectorAll("tr");

    for (let i = 0; i < tableRows.length; ++i) {
      if (i === 0 && row) {
        _forEach.call(tableRows[i].querySelectorAll("td"), td => {
          const th = changeTag(td, "th");
          th.setAttribute("scope", "col");
        });

        continue;
      }

      if (!col) {
        break;
      }

      const td = tableRows[i].querySelector("td");

      if (td) {
        const th = changeTag(td, "th");
        th.setAttribute("scope", "row");
      }
    }

    return elem;
  },
  message: () => "As tabelas devem incluir pelo menos um cabe\xE7alho.",
  why: () => "Os leitores de ecr\xE3 n\xE3o podem interpretar tabelas sem a estrutura adequada. Cabe\xE7alhos de tabela fornecem orienta\xE7\xE3o e vis\xE3o geral do conte\xFAdo.",
  link: "https://www.w3.org/TR/WCAG20-TECHS/H43.html",
  linkText: () => "Saiba mais sobre cabe\xE7alhos de tabelas"
};