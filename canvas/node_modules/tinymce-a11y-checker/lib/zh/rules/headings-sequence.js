"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _formatMessage = _interopRequireDefault(require("../format-message"));

var _dom = require("../utils/dom");

/* Headings Sequence rule
 * this rule is ensuring that heading tags (H1-H6) are layed out in sequential
 * order for organizing your site.
 *
 * this rule only looks at H2-H6 headings. all other tags pass.
 * this rule will walk 'up-down' the dom to find the heading tag that is
 * laid out previous to the heading tag being checked.
 * this rule will see if the heading tag number of the previous heading is
 * one more than one less than it's own heading tag and will fail if so
 * this rule will check to see if there is no previous heading tag and will
 * fail the test if so
 */
const isHtag = elem => {
  const allHTags = {
    H1: true,
    H2: true,
    H3: true,
    H4: true,
    H5: true,
    H6: true
  };
  return elem && allHTags[elem.tagName] === true;
}; // gets the H tag that is furthest down in the tree from elem(inclusive)


const getHighestOrderHForElem = elem => {
  const allHForElem = Array.prototype.slice.call(elem.querySelectorAll("H1,H2,H3,H4,H5,H6"));

  if (allHForElem.length > 0) {
    return allHForElem.reverse()[0];
  }

  if (isHtag(elem)) {
    return elem;
  }

  return void 0;
}; // gets all siblings of elem that come before the elem ordered by nearest to
// elem


const getPrevSiblings = elem => {
  let ret = [];

  if (!elem || !elem.parentElement || !elem.parentElement.children) {
    return ret;
  }

  const sibs = elem.parentElement.children;

  for (var i = 0; i < sibs.length; i++) {
    if (sibs[i] === elem) {
      break;
    }

    ret.unshift(sibs[i]);
  }

  return ret;
};

const searchPrevSiblings = elem => {
  const sibs = getPrevSiblings(elem);
  let ret;

  for (let i = 0; i < sibs.length; i++) {
    ret = getHighestOrderHForElem(sibs[i]);

    if (ret) {
      break;
    }
  }

  return ret;
};

const _walkUpTree = elem => {
  let ret;

  if (!elem || elem.tagName === "BODY") {
    return void 0;
  }

  if (isHtag(elem)) {
    return elem;
  }

  ret = searchPrevSiblings(elem);

  if (!ret) {
    ret = _walkUpTree(elem.parentElement);
  }

  return ret;
};

const walkUpTree = elem => {
  let ret = searchPrevSiblings(elem);

  if (!ret) {
    ret = _walkUpTree(elem.parentElement);
  }

  return ret;
};

const getPriorHeading = elem => {
  return walkUpTree(elem);
}; // a valid prior H tag is greater or equal to one less than current


const getValidHeadings = elem => {
  const hNum = +elem.tagName.substring(1);
  const ret = {};

  for (var i = hNum - 1; i <= 6; i++) {
    ret[`H${i}`] = true;
  }

  return ret;
};

var _default = {
  id: "headings-sequence",
  test: elem => {
    const testTags = {
      H2: true,
      H3: true,
      H4: true,
      H5: true,
      H6: true
    };

    if (testTags[elem.tagName] !== true) {
      return true;
    }

    const validHeadings = getValidHeadings(elem);
    const priorHeading = getPriorHeading(elem);

    if (priorHeading) {
      return validHeadings[priorHeading.tagName];
    }

    return true;
  },
  data: elem => {
    return {
      action: "nothing"
    };
  },
  form: () => [{
    label: "\u8981\u6267\u884C\u7684\u64CD\u4F5C\uFF1A",
    dataKey: "action",
    options: [["nothing", "\u4FDD\u6301\u539F\u72B6"], ["elem", "\u56FA\u5B9A\u6807\u9898\u5C42\u6B21\u7ED3\u6784"], ["modify", "\u5220\u9664\u6807\u9898\u6837\u5F0F"]]
  }],
  update: (elem, data) => {
    if (!data || !data.action || data.action === "nothing") {
      return elem;
    }

    switch (data.action) {
      case "elem":
        {
          const priorH = getPriorHeading(elem);
          const hIdx = priorH ? +priorH.tagName.substring(1) : 0;
          return (0, _dom.changeTag)(elem, `H${hIdx + 1}`);
        }

      case "modify":
        {
          return (0, _dom.changeTag)(elem, "p");
        }
    }
  },
  message: () => "\u4E0D\u5F97\u8DF3\u8FC7\u6807\u9898\u7EA7\u522B\u3002",
  why: () => "\u89C6\u529B\u597D\u7684\u7528\u6237\u5FEB\u901F\u6D4F\u89C8\u7F51\u9875\uFF0C\u67E5\u627E\u5927\u53F7\u5B57\u4F53\u6216\u7C97\u4F53\u6807\u9898\u3002\u5C4F\u5E55\u8BFB\u53D6\u5668\u7528\u6237\u4F9D\u8D56\u4E8E\u6807\u9898\u4E86\u89E3\u4E0A\u4E0B\u6587\u3002\u6807\u9898\u5E94\u4F7F\u7528\u6B63\u786E\u7684\u7ED3\u6784\u3002",
  link: "https://www.w3.org/TR/WCAG20-TECHS/G141.html",
  linkText: () => "\u8BE6\u7EC6\u4E86\u89E3\u7EC4\u7EC7\u9875\u9762\u6807\u9898"
};
exports.default = _default;