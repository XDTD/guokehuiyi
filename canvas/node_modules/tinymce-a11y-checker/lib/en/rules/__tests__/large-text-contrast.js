"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _largeTextContrast = _interopRequireDefault(require("../large-text-contrast"));

let el;
beforeEach(() => {
  el = document.createElement("div");
});
describe("test", () => {
  test("returns true if element does not contain any  text", () => {
    const elem = document.createElement("div");
    elem.style.fontSize = "30px";
    elem.style.backgroundColor = "#fff";
    elem.style.color = "#fff";
    expect(_largeTextContrast.default.test(elem)).toBe(true);
  });
  test("returns true if disabled by the config", () => {
    const elem = document.createElement("div");
    elem.style.fontSize = "30px";
    elem.style.backgroundColor = "#fff";
    elem.style.color = "#fff";
    elem.textContent = "disabled";
    expect(_largeTextContrast.default.test(elem, {
      disableContrastCheck: true
    })).toBe(true);
  });
  test("returns true if the only content of a text node is a link", () => {
    const elem = document.createElement("div");
    const link = document.createElement("a");
    elem.style.fontSize = "30px";
    elem.style.backgroundColor = "#fff";
    elem.style.color = "#eee";
    link.setAttribute("href", "http://example.com");
    link.textContent = "Example Site";
    elem.appendChild(link);
    expect(_largeTextContrast.default.test(elem)).toBe(true);
  });
  test("returns false if large text does not have high enough contrast", () => {
    const elem = document.createElement("div");
    elem.style.fontSize = "30px";
    elem.style.backgroundColor = "#fff";
    elem.style.color = "#eee";
    elem.textContent = "hello";
    expect(_largeTextContrast.default.test(elem)).toBe(false);
  });
});
describe("update", () => {
  test("returns same element", () => {
    expect(_largeTextContrast.default.update(el, {})).toBe(el);
  });
});
describe("message", () => {
  test("returns the proper message", () => {
    expect(_largeTextContrast.default.message()).toMatchSnapshot();
  });
});
describe("why", () => {
  test("returns the proper why message", () => {
    expect(_largeTextContrast.default.why()).toMatchSnapshot();
  });
});
describe("linkText", () => {
  test("returns the proper linkText message", () => {
    expect(_largeTextContrast.default.linkText()).toMatchSnapshot();
  });
});