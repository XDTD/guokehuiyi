"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _imgAlt = _interopRequireDefault(require("../img-alt"));

let el;
beforeEach(() => {
  el = document.createElement("img");
});
describe("test", () => {
  test("returns true if element is not an image", () => {
    const elem = document.createElement("div");
    expect(_imgAlt.default.test(elem)).toBe(true);
  });
  test("returns true if alt text is not empty", () => {
    el.setAttribute("alt", "some text");
    expect(_imgAlt.default.test(el)).toBeTruthy();
  });
  test("returns false if no alt attribute", () => {
    expect(_imgAlt.default.test(el)).toBeFalsy();
  });
  test("returns true if alt is empty and not decorative", () => {
    el.setAttribute("alt", "");
    expect(_imgAlt.default.test(el)).toBeTruthy();
  });
  test("returns true for alt containing only white space", () => {
    el.setAttribute("alt", "   ");
    expect(_imgAlt.default.test(el)).toBeTruthy();
  });
});
describe("data", () => {
  test("returns alt text", () => {
    el.setAttribute("alt", "some text");
    expect(_imgAlt.default.data(el).alt).toBe("some text");
  });
  test("returns empty alt text if no alt attribute", () => {
    expect(_imgAlt.default.data(el).alt).toBe("");
  });
  test("returns decorative true if el has empty alt text", () => {
    el.setAttribute("alt", "");
    expect(_imgAlt.default.data(el).decorative).toBeTruthy();
  });
  test("returns decorative false if el have alt text", () => {
    el.setAttribute("alt", "some text");
    expect(_imgAlt.default.data(el).decorative).toBeFalsy();
  });
});
describe("form", () => {
  test("alt field is disabled if decorative", () => {
    const altField = _imgAlt.default.form().find(f => f.dataKey === "alt");

    expect(altField.disabledIf({
      decorative: true
    })).toBeTruthy();
  });
  test("alt field is not disabled if not decorative", () => {
    const altField = _imgAlt.default.form().find(f => f.dataKey === "alt");

    expect(altField.disabledIf({
      decorative: false
    })).toBeFalsy();
  });
});
describe("update", () => {
  test("returns same element", () => {
    expect(_imgAlt.default.update(el, {})).toBe(el);
  });
  test("sets alt text to empty and role to 'presentation' if decorative", () => {
    _imgAlt.default.update(el, {
      decorative: true
    });

    expect(el.getAttribute("alt")).toBe("");
    expect(el.getAttribute("role")).toBe("presentation");
  });
  test("sets alt text and removes role if not decorative", () => {
    el.setAttribute("alt", "");
    el.setAttribute("role", "presentation");

    _imgAlt.default.update(el, {
      decorative: false,
      alt: "some text"
    });

    expect(el.getAttribute("alt")).toBe("some text");
    expect(el.hasAttribute("role")).toBeFalsy();
  });
});
describe("message", () => {
  test("returns the proper message", () => {
    expect(_imgAlt.default.message()).toMatchSnapshot();
  });
});
describe("why", () => {
  test("returns the proper why message", () => {
    expect(_imgAlt.default.why()).toMatchSnapshot();
  });
});
describe("linkText", () => {
  test("returns the proper linkText message", () => {
    expect(_imgAlt.default.linkText()).toMatchSnapshot();
  });
});