import formatMessage from "../format-message";
import { changeTag } from "../utils/dom";
const _forEach = Array.prototype.forEach;
export default {
  id: "table-header",
  test: elem => {
    if (elem.tagName !== "TABLE") {
      return true;
    }

    return elem.querySelector("th");
  },
  data: elem => {
    return {
      header: "none"
    };
  },
  form: () => [{
    label: "Param\xE9trer un en-t\xEAte de tableau",
    dataKey: "header",
    options: [["none", "Pas d\u2019en-t\xEAtes"], ["row", "Rang\xE9e d\u2019en-t\xEAte"], ["col", "Colonne d\u2019en-t\xEAte"], ["both", "Rang\xE9e et colonne d\u2019en-t\xEAte"]]
  }],
  update: (elem, data) => {
    _forEach.call(elem.querySelectorAll("th"), th => {
      changeTag(th, "td");
    });

    if (data.header === "none") {
      return elem;
    }

    const row = data.header === "row" || data.header === "both";
    const col = data.header === "col" || data.header === "both";
    const tableRows = elem.querySelectorAll("tr");

    for (let i = 0; i < tableRows.length; ++i) {
      if (i === 0 && row) {
        _forEach.call(tableRows[i].querySelectorAll("td"), td => {
          const th = changeTag(td, "th");
          th.setAttribute("scope", "col");
        });

        continue;
      }

      if (!col) {
        break;
      }

      const td = tableRows[i].querySelector("td");

      if (td) {
        const th = changeTag(td, "th");
        th.setAttribute("scope", "row");
      }
    }

    return elem;
  },
  message: () => "Les tableaux devraient comprendre au moins un en-t\xEAte.",
  why: () => "Les lecteurs d\u2019\xE9cran ne peuvent interpr\xE9ter les tableaux sans structure adapt\xE9e. Les en-t\xEAtes de tableau indiquent la direction ainsi qu\u2019une vue d\u2019ensemble du contenu.",
  link: "https://www.w3.org/TR/WCAG20-TECHS/H43.html",
  linkText: () => "Apprenez-en davantage sur les en-t\xEAte de tableaux"
};