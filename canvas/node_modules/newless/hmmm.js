"use strict";
//
// var Point = newless(class Point {
//     constructor(x, y) {
//         this.x = x;
//         this.y = y;
//     }
// });
//
// // function logargs(a, b) { console.log("Args:", a, b); }
// // logargs(...[1, 2]);
// //
// // var inst = new Point(...[1, 2]);
//
// var inst = Point.constructor.call({}, 1, 2);
//
// console.log(inst);

//
// class A {
//   constructor() {
//     console.log("A this:", this);
//     this.x = "A";
//   }
//   methodA(){}
// }
//
// class B {
//   constructor() {
//     // console.log(Object.getOwnPropertyNames(this));
//     console.log("B this:", this);
//     return new A();
//   }
//   methodB(){}
// }
// // function B() {
// //   "use strict";
// //   console.log(Object.getOwnPropertyNames(arguments));
// //   console.log(arguments.callee);
// //   return new A();
// // }
//
// class C extends B {
//   constructor() {
//     super();
//     // B.call(this);
//     console.log("C this:", this);
//     // console.log("C's x:", this.x);
//   }
//   methodC(){}
// }
//
// var c = new C();
//





class A {
  constructor() {
    console.log("A this:", this);
    this.x = "A";
  }
  methodA(){}
}

class B extends A {
  constructor() {
    super();
    // console.log(Object.getOwnPropertyNames(this));
    console.log("B this:", this);
  }
  methodB(){}
}

function BWrap() {
  var BProto = B.prototype;
  B.prototype = Object.getPrototypeOf(this);
  // var BProto = Object.getPrototypeOf(B);
  // Object.setPrototypeOf(B, Object.getPrototypeOf(this));
  var instance = new B();
  B.prototype = BProto;
  // Object.setPrototypeOf(B, BProto);
  return instance;
}
BWrap.prototype = B.prototype;

class C extends BWrap {
  constructor() {
    super();
    // B.call(this);
    console.log("C this:", this);
    // console.log("C's x:", this.x);
  }
  methodC(){}
}

var c = new C();

//
//
// var A = class A {
//   constructor() {
//     console.log("A this:", this);
//     this.x = "A";
//   }
// }
//
// function B () {
//   console.log("A this:", this);
//   this.x = "A";
// };
//
// console.log(A.toString === B.toString);
